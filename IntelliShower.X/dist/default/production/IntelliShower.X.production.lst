

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 11:07:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4550 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  003D06                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _keypad
   104  003D06  31                 	db	49
   105  003D07  32                 	db	50
   106  003D08  33                 	db	51
   107  003D09  34                 	db	52
   108  003D0A  35                 	db	53
   109  003D0B  36                 	db	54
   110  003D0C  37                 	db	55
   111  003D0D  38                 	db	56
   112  003D0E  39                 	db	57
   113  003D0F  2A                 	db	42
   114  003D10  30                 	db	48
   115  003D11  23                 	db	35
   116                           
   117                           ;initializer for _userTemp
   118  003D12  30                 	db	48
   119  003D13  30                 	db	48
   120  003D14  30                 	db	48
   121  0000                     _PORTB	set	3969
   122  0000                     _LATB	set	3978
   123  0000                     _ADRESL	set	4035
   124  0000                     _LATD	set	3980
   125  0000                     _ADRESH	set	4036
   126  0000                     _ADCON2bits	set	4032
   127  0000                     _ADCON0bits	set	4034
   128  0000                     _ADCON1bits	set	4033
   129  0000                     _OSCCON	set	4051
   130  0000                     _OSCCONbits	set	4051
   131  0000                     _TRISD	set	3989
   132  0000                     _TRISC	set	3988
   133  0000                     _TRISB	set	3987
   134  0000                     _TRISA	set	3986
   135  0000                     _ADCON1	set	4033
   136  0000                     _LATD1	set	31841
   137  0000                     _LATD0	set	31840
   138  0000                     _LATA1	set	31817
   139  0000                     _LATC0	set	31832
   140  0000                     _LATC1	set	31833
   141  0000                     _RBPU	set	32655
   142                           
   143                           	psect	smallconst
   144  000800                     __psmallconst:
   145                           	callstack 0
   146  000800  00                 	db	0
   147  000801                     STR_4:
   148  000801  50                 	db	80	;'P'
   149  000802  72                 	db	114	;'r'
   150  000803  65                 	db	101	;'e'
   151  000804  73                 	db	115	;'s'
   152  000805  73                 	db	115	;'s'
   153  000806  20                 	db	32
   154  000807  23                 	db	35
   155  000808  20                 	db	32
   156  000809  74                 	db	116	;'t'
   157  00080A  6F                 	db	111	;'o'
   158  00080B  20                 	db	32
   159  00080C  73                 	db	115	;'s'
   160  00080D  74                 	db	116	;'t'
   161  00080E  61                 	db	97	;'a'
   162  00080F  72                 	db	114	;'r'
   163  000810  74                 	db	116	;'t'
   164  000811  00                 	db	0
   165  000812                     STR_6:
   166  000812  54                 	db	84	;'T'
   167  000813  65                 	db	101	;'e'
   168  000814  6D                 	db	109	;'m'
   169  000815  70                 	db	112	;'p'
   170  000816  65                 	db	101	;'e'
   171  000817  72                 	db	114	;'r'
   172  000818  61                 	db	97	;'a'
   173  000819  74                 	db	116	;'t'
   174  00081A  75                 	db	117	;'u'
   175  00081B  72                 	db	114	;'r'
   176  00081C  61                 	db	97	;'a'
   177  00081D  00                 	db	0
   178  00081E                     STR_1:
   179  00081E  49                 	db	73	;'I'
   180  00081F  6E                 	db	110	;'n'
   181  000820  73                 	db	115	;'s'
   182  000821  65                 	db	101	;'e'
   183  000822  72                 	db	114	;'r'
   184  000823  74                 	db	116	;'t'
   185  000824  20                 	db	32
   186  000825  74                 	db	116	;'t'
   187  000826  65                 	db	101	;'e'
   188  000827  6D                 	db	109	;'m'
   189  000828  70                 	db	112	;'p'
   190  000829  00                 	db	0
   191  00082A                     STR_3:
   192  00082A  45                 	db	69	;'E'
   193  00082B  52                 	db	82	;'R'
   194  00082C  52                 	db	82	;'R'
   195  00082D  4F                 	db	79	;'O'
   196  00082E  52                 	db	82	;'R'
   197  00082F  00                 	db	0
   198  000830                     STR_5:
   199  000830  25                 	db	37
   200  000831  2E                 	db	46
   201  000832  32                 	db	50	;'2'
   202  000833  6C                 	db	108	;'l'
   203  000834  66                 	db	102	;'f'
   204  000835  00                 	db	0
   205  000836                     STR_2:
   206  000836  4F                 	db	79	;'O'
   207  000837  4B                 	db	75	;'K'
   208  000838  41                 	db	65	;'A'
   209  000839  59                 	db	89	;'Y'
   210  00083A  00                 	db	0
   211  00083B                     STR_7:
   212  00083B  49                 	db	73	;'I'
   213  00083C  4E                 	db	78	;'N'
   214  00083D  46                 	db	70	;'F'
   215  00083E  00                 	db	0
   216  00083F                     STR_11:
   217  00083F  4E                 	db	78	;'N'
   218  000840  41                 	db	65	;'A'
   219  000841  4E                 	db	78	;'N'
   220  000842  00                 	db	0
   221  000843                     STR_8:
   222  000843  69                 	db	105	;'i'
   223  000844  6E                 	db	110	;'n'
   224  000845  66                 	db	102	;'f'
   225  000846  00                 	db	0
   226  000847                     STR_12:
   227  000847  6E                 	db	110	;'n'
   228  000848  61                 	db	97	;'a'
   229  000849  6E                 	db	110	;'n'
   230  00084A  00                 	db	0
   231  00084B  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           ; #config settings
   234                           
   235                           	psect	cinit
   236  003A4A                     __pcinit:
   237                           	callstack 0
   238  003A4A                     start_initialization:
   239                           	callstack 0
   240  003A4A                     __initialization:
   241                           	callstack 0
   242                           
   243                           ; Initialize objects allocated to BANK0 (15 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  003A4A  0E06               	movlw	low __pidataBANK0
   246  003A4C  6EF6               	movwf	tblptrl,c
   247  003A4E  0E3D               	movlw	high __pidataBANK0
   248  003A50  6EF7               	movwf	tblptrh,c
   249  003A52  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  003A54  6EF8               	movwf	tblptru,c
   251  003A56  EE00  F0D7         	lfsr	0,__pdataBANK0
   252  003A5A  EE10 F00F          	lfsr	1,15
   253  003A5E                     copy_data0:
   254  003A5E  0009               	tblrd		*+
   255  003A60  CFF5 FFEE          	movff	tablat,postinc0
   256  003A64  50E5               	movf	postdec1,w,c
   257  003A66  50E1               	movf	fsr1l,w,c
   258  003A68  E1FA               	bnz	copy_data0
   259                           
   260                           ; Clear objects allocated to BANK1 (80 bytes)
   261  003A6A  EE01  F000         	lfsr	0,__pbssBANK1
   262  003A6E  0E50               	movlw	80
   263  003A70                     clear_0:
   264  003A70  6AEE               	clrf	postinc0,c
   265  003A72  06E8               	decf	wreg,f,c
   266  003A74  E1FD               	bnz	clear_0
   267                           
   268                           ; Clear objects allocated to BANK0 (42 bytes)
   269  003A76  EE00  F0AD         	lfsr	0,__pbssBANK0
   270  003A7A  0E2A               	movlw	42
   271  003A7C                     clear_1:
   272  003A7C  6AEE               	clrf	postinc0,c
   273  003A7E  06E8               	decf	wreg,f,c
   274  003A80  E1FD               	bnz	clear_1
   275  003A82                     end_of_initialization:
   276                           	callstack 0
   277  003A82                     __end_of__initialization:
   278                           	callstack 0
   279  003A82  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  003A84  6EF8               	movwf	tblptru,c
   281  003A86  0100               	movlb	0
   282  003A88  EF85  F016         	goto	_main	;jump to C main() function
   283                           
   284                           	psect	bssBANK0
   285  0000AD                     __pbssBANK0:
   286                           	callstack 0
   287  0000AD                     floorf@F527:
   288                           	callstack 0
   289  0000AD                     	ds	4
   290  0000B1                     ___fpclassifyf@F465:
   291                           	callstack 0
   292  0000B1                     	ds	4
   293  0000B5                     _temp:
   294                           	callstack 0
   295  0000B5                     	ds	4
   296  0000B9                     _nout:
   297                           	callstack 0
   298  0000B9                     	ds	2
   299  0000BB                     _width:
   300                           	callstack 0
   301  0000BB                     	ds	2
   302  0000BD                     _prec:
   303                           	callstack 0
   304  0000BD                     	ds	2
   305  0000BF                     _flags:
   306                           	callstack 0
   307  0000BF                     	ds	2
   308  0000C1                     _value_adc:
   309                           	callstack 0
   310  0000C1                     	ds	2
   311  0000C3                     _idx:
   312                           	callstack 0
   313  0000C3                     	ds	1
   314  0000C4                     _temp_col:
   315                           	callstack 0
   316  0000C4                     	ds	1
   317  0000C5                     _rowloc:
   318                           	callstack 0
   319  0000C5                     	ds	1
   320  0000C6                     _col_loc:
   321                           	callstack 0
   322  0000C6                     	ds	1
   323  0000C7                     _lm35:
   324                           	callstack 0
   325  0000C7                     	ds	16
   326                           
   327                           	psect	dataBANK0
   328  0000D7                     __pdataBANK0:
   329                           	callstack 0
   330  0000D7                     _keypad:
   331                           	callstack 0
   332  0000D7                     	ds	12
   333  0000E3                     _userTemp:
   334                           	callstack 0
   335  0000E3                     	ds	3
   336                           
   337                           	psect	bssBANK1
   338  000100                     __pbssBANK1:
   339                           	callstack 0
   340  000100                     _dbuf:
   341                           	callstack 0
   342  000100                     	ds	80
   343                           
   344                           	psect	cstackBANK0
   345  000060                     __pcstackBANK0:
   346                           	callstack 0
   347  000060                     _efgtoa$1009:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x0
   351  000060                     	ds	2
   352  000062                     _efgtoa$1010:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x2
   356  000062                     	ds	2
   357  000064                     _efgtoa$1015:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x4
   361  000064                     	ds	2
   362  000066                     _efgtoa$1019:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x6
   366  000066                     	ds	2
   367  000068                     _efgtoa$1020:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x8
   371  000068                     	ds	2
   372  00006A                     _efgtoa$1021:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xA
   376  00006A                     	ds	2
   377  00006C                     efgtoa@t:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xC
   381  00006C                     	ds	2
   382  00006E                     efgtoa@pp:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xE
   386  00006E                     	ds	2
   387  000070                     efgtoa@ne:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x10
   391  000070                     	ds	2
   392  000072                     efgtoa@m:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x12
   396  000072                     	ds	2
   397  000074                     efgtoa@ou:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x14
   401  000074                     	ds	4
   402  000078                     efgtoa@d:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x18
   406  000078                     	ds	2
   407  00007A                     efgtoa@sign:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x1A
   411  00007A                     	ds	2
   412  00007C                     efgtoa@p:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x1C
   416  00007C                     	ds	2
   417  00007E                     efgtoa@w:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x1E
   421  00007E                     	ds	2
   422  000080                     efgtoa@nmode:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x20
   426  000080                     	ds	1
   427  000081                     efgtoa@mode:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x21
   431  000081                     	ds	1
   432  000082                     efgtoa@h:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x22
   436  000082                     	ds	4
   437  000086                     efgtoa@l:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x26
   441  000086                     	ds	4
   442  00008A                     efgtoa@i:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x2A
   446  00008A                     	ds	2
   447  00008C                     efgtoa@g:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x2C
   451  00008C                     	ds	4
   452  000090                     efgtoa@e:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x30
   456  000090                     	ds	2
   457  000092                     efgtoa@n:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x32
   461  000092                     	ds	2
   462  000094                     efgtoa@u:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0x34
   466  000094                     	ds	4
   467  000098                     ?_sprintf:
   468                           	callstack 0
   469  000098                     sprintf@s:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x38
   473  000098                     	ds	2
   474  00009A                     sprintf@fmt:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x3A
   478  00009A                     	ds	6
   479  0000A0                     sprintf@ap:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x40
   483  0000A0                     	ds	2
   484  0000A2                     sprintf@f:
   485                           	callstack 0
   486                           
   487                           ; 6 bytes @ 0x42
   488  0000A2                     	ds	6
   489  0000A8                     ??_actDesactRelay:
   490                           
   491                           ; 1 bytes @ 0x48
   492  0000A8                     	ds	2
   493  0000AA                     actDesactRelay@number:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x4A
   497  0000AA                     	ds	2
   498  0000AC                     main@char_userTemp:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x4C
   502  0000AC                     	ds	1
   503                           
   504                           	psect	cstackCOMRAM
   505  000001                     __pcstackCOMRAM:
   506                           	callstack 0
   507  000001                     ??_keyfind:
   508  000001                     ??_LCD_Command:
   509  000001                     ??_LCD_Char:
   510  000001                     ?_adc_reader:
   511                           	callstack 0
   512  000001                     ?_strlen:
   513                           	callstack 0
   514  000001                     ?___fpclassifyf:
   515                           	callstack 0
   516  000001                     ?_isupper:
   517                           	callstack 0
   518  000001                     ?_isdigit:
   519                           	callstack 0
   520  000001                     ?_strncmp:
   521                           	callstack 0
   522  000001                     ?_isspace:
   523                           	callstack 0
   524  000001                     ?___wmul:
   525                           	callstack 0
   526  000001                     ?___awdiv:
   527                           	callstack 0
   528  000001                     ?___awmod:
   529                           	callstack 0
   530  000001                     ?___fladd:
   531                           	callstack 0
   532  000001                     ?___fldiv:
   533                           	callstack 0
   534  000001                     ?___flneg:
   535                           	callstack 0
   536  000001                     ?___fltol:
   537                           	callstack 0
   538  000001                     ?___xxtofl:
   539                           	callstack 0
   540  000001                     ___wmul@multiplier:
   541                           	callstack 0
   542  000001                     ___awdiv@dividend:
   543                           	callstack 0
   544  000001                     ___awmod@dividend:
   545                           	callstack 0
   546  000001                     isdigit@c:
   547                           	callstack 0
   548  000001                     isspace@c:
   549                           	callstack 0
   550  000001                     isupper@c:
   551                           	callstack 0
   552  000001                     fputc@c:
   553                           	callstack 0
   554  000001                     strcpy@dest:
   555                           	callstack 0
   556  000001                     strlen@s:
   557                           	callstack 0
   558  000001                     strncmp@_l:
   559                           	callstack 0
   560  000001                     ___fleq@ff1:
   561                           	callstack 0
   562  000001                     ___flneg@f1:
   563                           	callstack 0
   564  000001                     ___fltol@f1:
   565                           	callstack 0
   566  000001                     ___fladd@b:
   567                           	callstack 0
   568  000001                     ___fldiv@b:
   569                           	callstack 0
   570  000001                     ___xxtofl@val:
   571                           	callstack 0
   572  000001                     ___fpclassifyf@x:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x0
   576  000001                     	ds	1
   577  000002                     LCD_Command@cmd:
   578                           	callstack 0
   579  000002                     LCD_Char@dat:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x1
   583  000002                     	ds	1
   584  000003                     ??_LCD_Init:
   585  000003                     ??_adc_reader:
   586  000003                     ??_isupper:
   587  000003                     ??_isdigit:
   588  000003                     ??_isspace:
   589  000003                     LCD_String@msg:
   590                           	callstack 0
   591  000003                     ___wmul@multiplicand:
   592                           	callstack 0
   593  000003                     ___awdiv@divisor:
   594                           	callstack 0
   595  000003                     ___awmod@divisor:
   596                           	callstack 0
   597  000003                     fputc@fp:
   598                           	callstack 0
   599  000003                     strcpy@src:
   600                           	callstack 0
   601  000003                     strlen@a:
   602                           	callstack 0
   603  000003                     strncmp@_r:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x2
   607  000003                     	ds	1
   608  000004                     
   609                           ; 1 bytes @ 0x3
   610  000004                     	ds	1
   611  000005                     ??_fputc:
   612  000005                     ??___fpclassifyf:
   613  000005                     ??_strcpy:
   614  000005                     ??___fltol:
   615  000005                     ??___xxtofl:
   616  000005                     LCD_String_xy@pos:
   617                           	callstack 0
   618  000005                     ___awdiv@counter:
   619                           	callstack 0
   620  000005                     ___awmod@counter:
   621                           	callstack 0
   622  000005                     adc_reader@value_adc:
   623                           	callstack 0
   624  000005                     ___wmul@product:
   625                           	callstack 0
   626  000005                     strncmp@n:
   627                           	callstack 0
   628  000005                     ___fleq@ff2:
   629                           	callstack 0
   630  000005                     ___fladd@a:
   631                           	callstack 0
   632  000005                     ___fldiv@a:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x4
   636  000005                     	ds	1
   637  000006                     ___awdiv@sign:
   638                           	callstack 0
   639  000006                     ___awmod@sign:
   640                           	callstack 0
   641  000006                     LCD_String_xy@msg:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x5
   645  000006                     	ds	1
   646  000007                     ??_strncmp:
   647  000007                     ?_tolower:
   648                           	callstack 0
   649  000007                     _isspace$1104:
   650                           	callstack 0
   651  000007                     ___awdiv@quotient:
   652                           	callstack 0
   653  000007                     strcpy@s:
   654                           	callstack 0
   655  000007                     tolower@c:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x6
   659  000007                     	ds	1
   660  000008                     ?_atoi:
   661                           	callstack 0
   662  000008                     LCD_String_xy@row:
   663                           	callstack 0
   664  000008                     atoi@s:
   665                           	callstack 0
   666  000008                     strncmp@l:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x7
   670  000008                     	ds	1
   671  000009                     ??___fladd:
   672  000009                     ??___fldiv:
   673  000009                     ??_tolower:
   674  000009                     ??___fleq:
   675  000009                     LCD_String_xy@location:
   676                           	callstack 0
   677  000009                     ___fltol@sign1:
   678                           	callstack 0
   679  000009                     ___xxtofl@sign:
   680                           	callstack 0
   681  000009                     ___fpclassifyf@e:
   682                           	callstack 0
   683  000009                     strcpy@d:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x8
   687  000009                     	ds	1
   688  00000A                     ??_alarmaNegativa:
   689  00000A                     ??_alarmaPositiva:
   690  00000A                     ??_atoi:
   691  00000A                     ___fltol@exp1:
   692                           	callstack 0
   693  00000A                     ___xxtofl@exp:
   694                           	callstack 0
   695  00000A                     fputs@s:
   696                           	callstack 0
   697  00000A                     strncmp@r:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x9
   701  00000A                     	ds	1
   702  00000B                     ___xxtofl@arg:
   703                           	callstack 0
   704  00000B                     ___fpclassifyf@u:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0xA
   708  00000B                     	ds	1
   709  00000C                     fputs@fp:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0xB
   713  00000C                     	ds	1
   714  00000D                     ___fladd@signs:
   715                           	callstack 0
   716  00000D                     _tolower$1168:
   717                           	callstack 0
   718  00000D                     ___fldiv@rem:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0xC
   722  00000D                     	ds	1
   723  00000E                     ___fladd@aexp:
   724                           	callstack 0
   725  00000E                     fputs@c:
   726                           	callstack 0
   727  00000E                     atoi@neg:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0xD
   731  00000E                     	ds	1
   732  00000F                     ?___flmul:
   733                           	callstack 0
   734  00000F                     ___fladd@bexp:
   735                           	callstack 0
   736  00000F                     fputs@i:
   737                           	callstack 0
   738  00000F                     ___flmul@b:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0xE
   742  00000F                     	ds	1
   743  000010                     ___fladd@grs:
   744                           	callstack 0
   745  000010                     _atoi$1073:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0xF
   749  000010                     	ds	1
   750  000011                     ?_pad:
   751                           	callstack 0
   752  000011                     ___fldiv@sign:
   753                           	callstack 0
   754  000011                     pad@fp:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x10
   758  000011                     	ds	1
   759  000012                     ___fldiv@new_exp:
   760                           	callstack 0
   761  000012                     _atoi$1075:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x11
   765  000012                     	ds	1
   766  000013                     pad@buf:
   767                           	callstack 0
   768  000013                     ___flmul@a:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x12
   772  000013                     	ds	1
   773  000014                     _atoi$1074:
   774                           	callstack 0
   775  000014                     ___fldiv@grs:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x13
   779  000014                     	ds	1
   780  000015                     pad@p:
   781                           	callstack 0
   782  000015                     atoi@n:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x14
   786  000015                     	ds	2
   787  000017                     ??___flmul:
   788  000017                     ??_pad:
   789                           
   790                           ; 1 bytes @ 0x16
   791  000017                     	ds	1
   792  000018                     ___fldiv@bexp:
   793                           	callstack 0
   794  000018                     pad@i:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x17
   798  000018                     	ds	1
   799  000019                     ___fldiv@aexp:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x18
   803  000019                     	ds	1
   804  00001A                     ?_floorf:
   805                           	callstack 0
   806  00001A                     pad@w:
   807                           	callstack 0
   808  00001A                     floorf@x:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x19
   812  00001A                     	ds	1
   813  00001B                     ___flmul@sign:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x1A
   817  00001B                     	ds	1
   818  00001C                     ___flmul@grs:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x1B
   822  00001C                     	ds	2
   823  00001E                     ??_floorf:
   824                           
   825                           ; 1 bytes @ 0x1D
   826  00001E                     	ds	2
   827  000020                     ___flmul@aexp:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x1F
   831  000020                     	ds	1
   832  000021                     ___flmul@bexp:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x20
   836  000021                     	ds	1
   837  000022                     ___flmul@prod:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x21
   841  000022                     	ds	2
   842  000024                     floorf@m:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x23
   846  000024                     	ds	2
   847  000026                     ___flmul@temp:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x25
   851  000026                     	ds	2
   852  000028                     ?___flsub:
   853                           	callstack 0
   854  000028                     floorf@e:
   855                           	callstack 0
   856  000028                     ___flge@ff1:
   857                           	callstack 0
   858  000028                     ___flsub@b:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x27
   862  000028                     	ds	2
   863  00002A                     floorf@u:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x29
   867  00002A                     	ds	2
   868  00002C                     ___flge@ff2:
   869                           	callstack 0
   870  00002C                     ___flsub@a:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x2B
   874  00002C                     	ds	4
   875  000030                     ??___flge:
   876                           
   877                           ; 1 bytes @ 0x2F
   878  000030                     	ds	4
   879  000034                     ?_efgtoa:
   880                           	callstack 0
   881  000034                     efgtoa@fp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x33
   885  000034                     	ds	2
   886  000036                     efgtoa@f:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x35
   890  000036                     	ds	4
   891  00003A                     efgtoa@c:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x39
   895  00003A                     	ds	1
   896  00003B                     ??_efgtoa:
   897                           
   898                           ; 1 bytes @ 0x3A
   899  00003B                     	ds	5
   900  000040                     ?_vfpfcnvrt:
   901                           	callstack 0
   902  000040                     vfpfcnvrt@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x3F
   906  000040                     	ds	2
   907  000042                     vfpfcnvrt@fmt:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x41
   911  000042                     	ds	2
   912  000044                     vfpfcnvrt@ap:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x43
   916  000044                     	ds	2
   917  000046                     ??_vfpfcnvrt:
   918                           
   919                           ; 1 bytes @ 0x45
   920  000046                     	ds	4
   921  00004A                     _vfpfcnvrt$1035:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x49
   925  00004A                     	ds	2
   926  00004C                     _vfpfcnvrt$1039:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x4B
   930  00004C                     	ds	2
   931  00004E                     vfpfcnvrt@f:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x4D
   935  00004E                     	ds	4
   936  000052                     vfpfcnvrt@ct:
   937                           	callstack 0
   938                           
   939                           ; 3 bytes @ 0x51
   940  000052                     	ds	3
   941  000055                     vfpfcnvrt@c:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x54
   945  000055                     	ds	1
   946  000056                     ?_vfprintf:
   947                           	callstack 0
   948  000056                     vfprintf@fp:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x55
   952  000056                     	ds	2
   953  000058                     vfprintf@fmt:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x57
   957  000058                     	ds	2
   958  00005A                     vfprintf@ap:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x59
   962  00005A                     	ds	2
   963  00005C                     vfprintf@cfmt:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x5B
   967  00005C                     	ds	2
   968  00005E                     ??_imprimirTemperatura:
   969  00005E                     
   970                           ; 1 bytes @ 0x5D
   971  00005E                     	ds	2
   972  000060                     
   973                           ; 1 bytes @ 0x5F
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   976 ;;
   977 ;; *************** function _main *****************
   978 ;; Defined at:
   979 ;;		line 45 in file "Principal.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  char_userTem    1   76[BANK0 ] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   993 ;;      Params:         0       0       0       0       0       0       0       0       0
   994 ;;      Locals:         0       1       0       0       0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0
   996 ;;      Totals:         0       1       0       0       0       0       0       0       0
   997 ;;Total ram usage:        1 bytes
   998 ;; Hardware stack levels required when called: 10
   999 ;; This function calls:
  1000 ;;		_LCD_Char
  1001 ;;		_LCD_Clear
  1002 ;;		_LCD_Command
  1003 ;;		_LCD_String_xy
  1004 ;;		_actDesactRelay
  1005 ;;		_alarmaNegativa
  1006 ;;		_alarmaPositiva
  1007 ;;		_imprimirBlanco
  1008 ;;		_imprimirTemperatura
  1009 ;;		_inicializar
  1010 ;;		_keyfind
  1011 ;; This function is called by:
  1012 ;;		Startup code after reset
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text0
  1017  002D0A                     __ptext0:
  1018                           	callstack 0
  1019  002D0A                     _main:
  1020                           	callstack 21
  1021  002D0A                     
  1022                           ;Principal.c: 46:     inicializar ();
  1023  002D0A  EC25  F01E         	call	_inicializar	;wreg free
  1024  002D0E                     
  1025                           ;Principal.c: 47:     char char_userTemp;;Principal.c: 48:     imprimirBlanco();
  1026  002D0E  EC79  F01E         	call	_imprimirBlanco	;wreg free
  1027  002D12                     l4470:
  1028                           
  1029                           ;Principal.c: 50:         char_userTemp = keyfind();
  1030  002D12  ECC4  F012         	call	_keyfind	;wreg free
  1031  002D16  0100               	movlb	0	; () banked
  1032  002D18  6FAC               	movwf	main@char_userTemp& (0+255),b
  1033  002D1A                     
  1034                           ; BSR set to: 0
  1035                           ;Principal.c: 51:         if (char_userTemp == '#') {
  1036  002D1A  0E23               	movlw	35
  1037  002D1C  19AC               	xorwf	main@char_userTemp& (0+255),w,b
  1038  002D1E  A4D8               	btfss	status,2,c
  1039  002D20  EF94  F016         	goto	u5311
  1040  002D24  EF96  F016         	goto	u5310
  1041  002D28                     u5311:
  1042  002D28  EF0D  F017         	goto	l4518
  1043  002D2C                     u5310:
  1044  002D2C                     
  1045                           ; BSR set to: 0
  1046                           ;Principal.c: 52:             LCD_Clear();
  1047  002D2C  EC8B  F01E         	call	_LCD_Clear	;wreg free
  1048  002D30                     
  1049                           ;Principal.c: 53:             LCD_String_xy(0,0,"Insert temp");
  1050  002D30  0E00               	movlw	0
  1051  002D32  6E05               	movwf	LCD_String_xy@pos^0,c
  1052  002D34  0E1E               	movlw	low STR_1
  1053  002D36  6E06               	movwf	LCD_String_xy@msg^0,c
  1054  002D38  0E08               	movlw	high STR_1
  1055  002D3A  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1056  002D3C  0E00               	movlw	0
  1057  002D3E  EC46  F01D         	call	_LCD_String_xy
  1058  002D42                     
  1059                           ;Principal.c: 54:             LCD_Command(0xC0);
  1060  002D42  0EC0               	movlw	192
  1061  002D44  ECB8  F01C         	call	_LCD_Command
  1062  002D48                     l4480:
  1063                           
  1064                           ;Principal.c: 57:                 char_userTemp = keyfind();
  1065  002D48  ECC4  F012         	call	_keyfind	;wreg free
  1066  002D4C  0100               	movlb	0	; () banked
  1067  002D4E  6FAC               	movwf	main@char_userTemp& (0+255),b
  1068  002D50                     
  1069                           ; BSR set to: 0
  1070                           ;Principal.c: 58:                 if (char_userTemp == '*') {
  1071  002D50  0E2A               	movlw	42
  1072  002D52  19AC               	xorwf	main@char_userTemp& (0+255),w,b
  1073  002D54  A4D8               	btfss	status,2,c
  1074  002D56  EFAF  F016         	goto	u5321
  1075  002D5A  EFB1  F016         	goto	u5320
  1076  002D5E                     u5321:
  1077  002D5E  EFB5  F016         	goto	l4486
  1078  002D62                     u5320:
  1079  002D62                     
  1080                           ; BSR set to: 0
  1081                           ;Principal.c: 59:                     imprimirTemperatura ();
  1082  002D62  EC44  F01B         	call	_imprimirTemperatura	;wreg free
  1083                           
  1084                           ;Principal.c: 60:                 } else {
  1085  002D66  EFEA  F016         	goto	l4506
  1086  002D6A                     l4486:
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;Principal.c: 61:                     LCD_Char(char_userTemp);
  1090  002D6A  51AC               	movf	main@char_userTemp& (0+255),w,b
  1091  002D6C  EC90  F01C         	call	_LCD_Char
  1092  002D70                     
  1093                           ;Principal.c: 62:                     userTemp[idx] = char_userTemp;
  1094  002D70  0EE3               	movlw	low _userTemp
  1095  002D72  0100               	movlb	0	; () banked
  1096  002D74  25C3               	addwf	_idx& (0+255),w,b
  1097  002D76  6ED9               	movwf	fsr2l,c
  1098  002D78  6ADA               	clrf	fsr2h,c
  1099  002D7A  0E00               	movlw	high _userTemp
  1100  002D7C  22DA               	addwfc	fsr2h,f,c
  1101  002D7E  C0AC  FFDF         	movff	main@char_userTemp,indf2
  1102  002D82                     
  1103                           ; BSR set to: 0
  1104                           ;Principal.c: 63:                     if (userTemp[0] < '2' || userTemp[0] > '3' || (use
      +                          rTemp[0] == '3' && userTemp[1] > '8')){
  1105  002D82  0E31               	movlw	49
  1106  002D84  65E3               	cpfsgt	_userTemp& (0+255),b
  1107  002D86  EFC7  F016         	goto	u5331
  1108  002D8A  EFC9  F016         	goto	u5330
  1109  002D8E                     u5331:
  1110  002D8E  EFE2  F016         	goto	l4498
  1111  002D92                     u5330:
  1112  002D92                     
  1113                           ; BSR set to: 0
  1114  002D92  0E34               	movlw	52
  1115  002D94  61E3               	cpfslt	_userTemp& (0+255),b
  1116  002D96  EFCF  F016         	goto	u5341
  1117  002D9A  EFD1  F016         	goto	u5340
  1118  002D9E                     u5341:
  1119  002D9E  EFE2  F016         	goto	l4498
  1120  002DA2                     u5340:
  1121  002DA2                     
  1122                           ; BSR set to: 0
  1123  002DA2  0E33               	movlw	51
  1124  002DA4  19E3               	xorwf	_userTemp& (0+255),w,b
  1125  002DA6  A4D8               	btfss	status,2,c
  1126  002DA8  EFD8  F016         	goto	u5351
  1127  002DAC  EFDA  F016         	goto	u5350
  1128  002DB0                     u5351:
  1129  002DB0  EFE9  F016         	goto	l4504
  1130  002DB4                     u5350:
  1131  002DB4                     
  1132                           ; BSR set to: 0
  1133  002DB4  0E38               	movlw	56
  1134  002DB6  65E4               	cpfsgt	(_userTemp+1)& (0+255),b
  1135  002DB8  EFE0  F016         	goto	u5361
  1136  002DBC  EFE2  F016         	goto	u5360
  1137  002DC0                     u5361:
  1138  002DC0  EFE9  F016         	goto	l4504
  1139  002DC4                     u5360:
  1140  002DC4                     l4498:
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;Principal.c: 64:                         alarmaNegativa();
  1144  002DC4  ECD5  F01D         	call	_alarmaNegativa	;wreg free
  1145  002DC8                     
  1146                           ;Principal.c: 65:                         userTemp[2] = 'X';
  1147  002DC8  0E58               	movlw	88
  1148  002DCA  0100               	movlb	0	; () banked
  1149  002DCC  6FE5               	movwf	(_userTemp+2)& (0+255),b
  1150  002DCE                     
  1151                           ; BSR set to: 0
  1152                           ;Principal.c: 66:                         char_userTemp = '#';
  1153  002DCE  0E23               	movlw	35
  1154  002DD0  6FAC               	movwf	main@char_userTemp& (0+255),b
  1155  002DD2                     l4504:
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;Principal.c: 68:                     idx++;
  1159  002DD2  2BC3               	incf	_idx& (0+255),f,b
  1160  002DD4                     l4506:
  1161                           
  1162                           ;Principal.c: 70:             }while(char_userTemp != '#' || char_userTemp == '*');
  1163  002DD4  0E23               	movlw	35
  1164  002DD6  0100               	movlb	0	; () banked
  1165  002DD8  19AC               	xorwf	main@char_userTemp& (0+255),w,b
  1166  002DDA  A4D8               	btfss	status,2,c
  1167  002DDC  EFF2  F016         	goto	u5371
  1168  002DE0  EFF4  F016         	goto	u5370
  1169  002DE4                     u5371:
  1170  002DE4  EFA4  F016         	goto	l4480
  1171  002DE8                     u5370:
  1172  002DE8                     
  1173                           ; BSR set to: 0
  1174  002DE8  0E2A               	movlw	42
  1175  002DEA  19AC               	xorwf	main@char_userTemp& (0+255),w,b
  1176  002DEC  B4D8               	btfsc	status,2,c
  1177  002DEE  EFFB  F016         	goto	u5381
  1178  002DF2  EFFD  F016         	goto	u5380
  1179  002DF6                     u5381:
  1180  002DF6  EFA4  F016         	goto	l4480
  1181  002DFA                     u5380:
  1182  002DFA                     
  1183                           ; BSR set to: 0
  1184                           ;Principal.c: 71:             if (userTemp[2] == '#'){
  1185  002DFA  0E23               	movlw	35
  1186  002DFC  19E5               	xorwf	(_userTemp+2)& (0+255),w,b
  1187  002DFE  A4D8               	btfss	status,2,c
  1188  002E00  EF04  F017         	goto	u5391
  1189  002E04  EF06  F017         	goto	u5390
  1190  002E08                     u5391:
  1191  002E08  EF0A  F017         	goto	l4516
  1192  002E0C                     u5390:
  1193  002E0C                     
  1194                           ; BSR set to: 0
  1195                           ;Principal.c: 72:                 alarmaPositiva();
  1196  002E0C  ECBA  F01D         	call	_alarmaPositiva	;wreg free
  1197  002E10                     
  1198                           ;Principal.c: 73:                 actDesactRelay ();
  1199  002E10  ECD3  F019         	call	_actDesactRelay	;wreg free
  1200  002E14                     l4516:
  1201                           
  1202                           ;Principal.c: 75:             idx = 0;
  1203  002E14  0E00               	movlw	0
  1204  002E16  0100               	movlb	0	; () banked
  1205  002E18  6FC3               	movwf	_idx& (0+255),b
  1206  002E1A                     l4518:
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;Principal.c: 77:         if (userTemp[2] == '#'){
  1210  002E1A  0E23               	movlw	35
  1211  002E1C  19E5               	xorwf	(_userTemp+2)& (0+255),w,b
  1212  002E1E  A4D8               	btfss	status,2,c
  1213  002E20  EF14  F017         	goto	u5401
  1214  002E24  EF16  F017         	goto	u5400
  1215  002E28                     u5401:
  1216  002E28  EF89  F016         	goto	l4470
  1217  002E2C                     u5400:
  1218  002E2C                     
  1219                           ; BSR set to: 0
  1220                           ;Principal.c: 78:             actDesactRelay ();
  1221  002E2C  ECD3  F019         	call	_actDesactRelay	;wreg free
  1222  002E30  EF89  F016         	goto	l4470
  1223  002E34  EF00  F000         	goto	start
  1224  002E38                     __end_of_main:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _keyfind *****************
  1228 ;; Defined at:
  1229 ;;		line 3 in file "keypad.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  temp1           1    0        unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      unsigned char 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1243 ;;      Params:         0       0       0       0       0       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1245 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1246 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1247 ;;Total ram usage:        1 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text1
  1257  002588                     __ptext1:
  1258                           	callstack 0
  1259  002588                     _keyfind:
  1260                           	callstack 30
  1261  002588                     
  1262                           ;keypad.c: 6:     TRISB = 0xf0;
  1263  002588  0EF0               	movlw	240
  1264  00258A  6E93               	movwf	147,c	;volatile
  1265                           
  1266                           ;keypad.c: 7:     unsigned char temp1;;keypad.c: 9:     LATB = 0xf0;
  1267  00258C  0EF0               	movlw	240
  1268  00258E  6E8A               	movwf	138,c	;volatile
  1269  002590                     l4332:
  1270                           
  1271                           ;keypad.c: 13:             col_loc = PORTB & 0xf0;
  1272  002590  5081               	movf	129,w,c	;volatile
  1273  002592  0BF0               	andlw	240
  1274  002594  0100               	movlb	0	; () banked
  1275  002596  6FC6               	movwf	_col_loc& (0+255),b
  1276  002598                     
  1277                           ; BSR set to: 0
  1278                           ;keypad.c: 15:         } while (col_loc != 0xf0);
  1279  002598  0EF0               	movlw	240
  1280  00259A  19C6               	xorwf	_col_loc& (0+255),w,b
  1281  00259C  A4D8               	btfss	status,2,c
  1282  00259E  EFD3  F012         	goto	u5151
  1283  0025A2  EFD5  F012         	goto	u5150
  1284  0025A6                     u5151:
  1285  0025A6  EFC8  F012         	goto	l4332
  1286  0025AA                     u5150:
  1287  0025AA                     
  1288                           ; BSR set to: 0
  1289                           ;keypad.c: 16:         col_loc = PORTB & 0xf0;
  1290  0025AA  5081               	movf	129,w,c	;volatile
  1291  0025AC  0BF0               	andlw	240
  1292  0025AE  6FC6               	movwf	_col_loc& (0+255),b
  1293                           
  1294                           ;keypad.c: 17:     } while (col_loc != 0xf0);
  1295  0025B0  0EF0               	movlw	240
  1296  0025B2  19C6               	xorwf	_col_loc& (0+255),w,b
  1297  0025B4  A4D8               	btfss	status,2,c
  1298  0025B6  EFDF  F012         	goto	u5161
  1299  0025BA  EFE1  F012         	goto	u5160
  1300  0025BE                     u5161:
  1301  0025BE  EFC8  F012         	goto	l4332
  1302  0025C2                     u5160:
  1303  0025C2                     
  1304                           ; BSR set to: 0
  1305                           ;keypad.c: 19:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1306  0025C2  0E82               	movlw	130
  1307  0025C4  6E01               	movwf	??_keyfind^0,c
  1308  0025C6  0EDE               	movlw	222
  1309  0025C8                     u5427:
  1310  0025C8  2EE8               	decfsz	wreg,f,c
  1311  0025CA  D7FE               	bra	u5427
  1312  0025CC  2E01               	decfsz	??_keyfind^0,f,c
  1313  0025CE  D7FC               	bra	u5427
  1314  0025D0                     
  1315                           ;keypad.c: 20:     LATB = 0xf0;
  1316  0025D0  0EF0               	movlw	240
  1317  0025D2  6E8A               	movwf	138,c	;volatile
  1318  0025D4                     l4342:
  1319                           
  1320                           ;keypad.c: 23:         {;keypad.c: 25:             col_loc = PORTB & 0xf0;
  1321  0025D4  5081               	movf	129,w,c	;volatile
  1322  0025D6  0BF0               	andlw	240
  1323  0025D8  0100               	movlb	0	; () banked
  1324  0025DA  6FC6               	movwf	_col_loc& (0+255),b
  1325  0025DC                     
  1326                           ; BSR set to: 0
  1327                           ;keypad.c: 26:         } while (col_loc == 0xf0);
  1328  0025DC  0EF0               	movlw	240
  1329  0025DE  19C6               	xorwf	_col_loc& (0+255),w,b
  1330  0025E0  B4D8               	btfsc	status,2,c
  1331  0025E2  EFF5  F012         	goto	u5171
  1332  0025E6  EFF7  F012         	goto	u5170
  1333  0025EA                     u5171:
  1334  0025EA  EFEA  F012         	goto	l4342
  1335  0025EE                     u5170:
  1336  0025EE                     
  1337                           ; BSR set to: 0
  1338                           ;keypad.c: 27:         col_loc = PORTB & 0xf0;
  1339  0025EE  5081               	movf	129,w,c	;volatile
  1340  0025F0  0BF0               	andlw	240
  1341  0025F2  6FC6               	movwf	_col_loc& (0+255),b
  1342                           
  1343                           ;keypad.c: 28:     } while (col_loc == 0xf0);
  1344  0025F4  0EF0               	movlw	240
  1345  0025F6  19C6               	xorwf	_col_loc& (0+255),w,b
  1346  0025F8  B4D8               	btfsc	status,2,c
  1347  0025FA  EF01  F013         	goto	u5181
  1348  0025FE  EF03  F013         	goto	u5180
  1349  002602                     u5181:
  1350  002602  EFEA  F012         	goto	l4342
  1351  002606                     u5180:
  1352  002606                     
  1353                           ; BSR set to: 0
  1354                           ;keypad.c: 30:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1355  002606  0E34               	movlw	52
  1356  002608  6E01               	movwf	??_keyfind^0,c
  1357  00260A  0EF2               	movlw	242
  1358  00260C                     u5437:
  1359  00260C  2EE8               	decfsz	wreg,f,c
  1360  00260E  D7FE               	bra	u5437
  1361  002610  2E01               	decfsz	??_keyfind^0,f,c
  1362  002612  D7FC               	bra	u5437
  1363  002614                     
  1364                           ;keypad.c: 32:     col_loc = PORTB & 0xf0;
  1365  002614  5081               	movf	129,w,c	;volatile
  1366  002616  0BF0               	andlw	240
  1367  002618  0100               	movlb	0	; () banked
  1368  00261A  6FC6               	movwf	_col_loc& (0+255),b
  1369  00261C                     l4352:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;keypad.c: 37:     {;keypad.c: 38:         LATB = 0xfe;
  1373  00261C  0EFE               	movlw	254
  1374  00261E  6E8A               	movwf	138,c	;volatile
  1375  002620                     
  1376                           ; BSR set to: 0
  1377                           ;keypad.c: 39:         col_loc = PORTB & 0xf0;
  1378  002620  5081               	movf	129,w,c	;volatile
  1379  002622  0BF0               	andlw	240
  1380  002624  6FC6               	movwf	_col_loc& (0+255),b
  1381  002626                     
  1382                           ; BSR set to: 0
  1383                           ;keypad.c: 40:         temp_col=col_loc;
  1384  002626  C0C6  F0C4         	movff	_col_loc,_temp_col
  1385  00262A                     
  1386                           ; BSR set to: 0
  1387                           ;keypad.c: 41:         if(col_loc!=0xf0)
  1388  00262A  0EF0               	movlw	240
  1389  00262C  19C6               	xorwf	_col_loc& (0+255),w,b
  1390  00262E  B4D8               	btfsc	status,2,c
  1391  002630  EF1C  F013         	goto	u5191
  1392  002634  EF1E  F013         	goto	u5190
  1393  002638                     u5191:
  1394  002638  EF30  F013         	goto	l4364
  1395  00263C                     u5190:
  1396  00263C                     
  1397                           ; BSR set to: 0
  1398                           ;keypad.c: 42:         {;keypad.c: 43:             rowloc=0;
  1399  00263C  0E00               	movlw	0
  1400  00263E  6FC5               	movwf	_rowloc& (0+255),b
  1401                           
  1402                           ;keypad.c: 44:             while(temp_col!=0xf0)
  1403  002640  EF25  F013         	goto	l219
  1404  002644                     l4362:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;keypad.c: 45:             {;keypad.c: 46:                 temp_col = PORTB & 0xf0;
  1408  002644  5081               	movf	129,w,c	;volatile
  1409  002646  0BF0               	andlw	240
  1410  002648  6FC4               	movwf	_temp_col& (0+255),b
  1411  00264A                     l219:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;keypad.c: 44:             while(temp_col!=0xf0)
  1415  00264A  0EF0               	movlw	240
  1416  00264C  19C4               	xorwf	_temp_col& (0+255),w,b
  1417  00264E  A4D8               	btfss	status,2,c
  1418  002650  EF2C  F013         	goto	u5201
  1419  002654  EF2E  F013         	goto	u5200
  1420  002658                     u5201:
  1421  002658  EF22  F013         	goto	l4362
  1422  00265C                     u5200:
  1423  00265C  EF94  F013         	goto	l4400
  1424  002660                     l4364:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;keypad.c: 51:         LATB = 0xfd;
  1428  002660  0EFD               	movlw	253
  1429  002662  6E8A               	movwf	138,c	;volatile
  1430  002664                     
  1431                           ; BSR set to: 0
  1432                           ;keypad.c: 52:         col_loc = PORTB & 0xf0;
  1433  002664  5081               	movf	129,w,c	;volatile
  1434  002666  0BF0               	andlw	240
  1435  002668  6FC6               	movwf	_col_loc& (0+255),b
  1436  00266A                     
  1437                           ; BSR set to: 0
  1438                           ;keypad.c: 53:         temp_col=col_loc;
  1439  00266A  C0C6  F0C4         	movff	_col_loc,_temp_col
  1440  00266E                     
  1441                           ; BSR set to: 0
  1442                           ;keypad.c: 54:         if(col_loc!=0xf0)
  1443  00266E  0EF0               	movlw	240
  1444  002670  19C6               	xorwf	_col_loc& (0+255),w,b
  1445  002672  B4D8               	btfsc	status,2,c
  1446  002674  EF3E  F013         	goto	u5211
  1447  002678  EF40  F013         	goto	u5210
  1448  00267C                     u5211:
  1449  00267C  EF52  F013         	goto	l4376
  1450  002680                     u5210:
  1451  002680                     
  1452                           ; BSR set to: 0
  1453                           ;keypad.c: 55:         {;keypad.c: 56:             rowloc=1;
  1454  002680  0E01               	movlw	1
  1455  002682  6FC5               	movwf	_rowloc& (0+255),b
  1456                           
  1457                           ;keypad.c: 57:             while(temp_col!=0xf0)
  1458  002684  EF47  F013         	goto	l224
  1459  002688                     l4374:
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;keypad.c: 58:             {;keypad.c: 59:                 temp_col = PORTB & 0xf0;
  1463  002688  5081               	movf	129,w,c	;volatile
  1464  00268A  0BF0               	andlw	240
  1465  00268C  6FC4               	movwf	_temp_col& (0+255),b
  1466  00268E                     l224:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;keypad.c: 57:             while(temp_col!=0xf0)
  1470  00268E  0EF0               	movlw	240
  1471  002690  19C4               	xorwf	_temp_col& (0+255),w,b
  1472  002692  A4D8               	btfss	status,2,c
  1473  002694  EF4E  F013         	goto	u5221
  1474  002698  EF50  F013         	goto	u5220
  1475  00269C                     u5221:
  1476  00269C  EF44  F013         	goto	l4374
  1477  0026A0                     u5220:
  1478  0026A0  EF94  F013         	goto	l4400
  1479  0026A4                     l4376:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;keypad.c: 64:         LATB = 0xfb;
  1483  0026A4  0EFB               	movlw	251
  1484  0026A6  6E8A               	movwf	138,c	;volatile
  1485  0026A8                     
  1486                           ; BSR set to: 0
  1487                           ;keypad.c: 65:         col_loc = PORTB & 0xf0;
  1488  0026A8  5081               	movf	129,w,c	;volatile
  1489  0026AA  0BF0               	andlw	240
  1490  0026AC  6FC6               	movwf	_col_loc& (0+255),b
  1491  0026AE                     
  1492                           ; BSR set to: 0
  1493                           ;keypad.c: 66:         temp_col=col_loc;
  1494  0026AE  C0C6  F0C4         	movff	_col_loc,_temp_col
  1495  0026B2                     
  1496                           ; BSR set to: 0
  1497                           ;keypad.c: 67:         if(col_loc!=0xf0)
  1498  0026B2  0EF0               	movlw	240
  1499  0026B4  19C6               	xorwf	_col_loc& (0+255),w,b
  1500  0026B6  B4D8               	btfsc	status,2,c
  1501  0026B8  EF60  F013         	goto	u5231
  1502  0026BC  EF62  F013         	goto	u5230
  1503  0026C0                     u5231:
  1504  0026C0  EF74  F013         	goto	l4388
  1505  0026C4                     u5230:
  1506  0026C4                     
  1507                           ; BSR set to: 0
  1508                           ;keypad.c: 68:         {;keypad.c: 69:             rowloc=2;
  1509  0026C4  0E02               	movlw	2
  1510  0026C6  6FC5               	movwf	_rowloc& (0+255),b
  1511                           
  1512                           ;keypad.c: 70:             while(temp_col!=0xf0)
  1513  0026C8  EF69  F013         	goto	l228
  1514  0026CC                     l4386:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;keypad.c: 71:             {;keypad.c: 72:                 temp_col = PORTB & 0xf0;
  1518  0026CC  5081               	movf	129,w,c	;volatile
  1519  0026CE  0BF0               	andlw	240
  1520  0026D0  6FC4               	movwf	_temp_col& (0+255),b
  1521  0026D2                     l228:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;keypad.c: 70:             while(temp_col!=0xf0)
  1525  0026D2  0EF0               	movlw	240
  1526  0026D4  19C4               	xorwf	_temp_col& (0+255),w,b
  1527  0026D6  A4D8               	btfss	status,2,c
  1528  0026D8  EF70  F013         	goto	u5241
  1529  0026DC  EF72  F013         	goto	u5240
  1530  0026E0                     u5241:
  1531  0026E0  EF66  F013         	goto	l4386
  1532  0026E4                     u5240:
  1533  0026E4  EF94  F013         	goto	l4400
  1534  0026E8                     l4388:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;keypad.c: 77:         LATB = 0xf7;
  1538  0026E8  0EF7               	movlw	247
  1539  0026EA  6E8A               	movwf	138,c	;volatile
  1540  0026EC                     
  1541                           ; BSR set to: 0
  1542                           ;keypad.c: 78:         col_loc = PORTB & 0xf0;
  1543  0026EC  5081               	movf	129,w,c	;volatile
  1544  0026EE  0BF0               	andlw	240
  1545  0026F0  6FC6               	movwf	_col_loc& (0+255),b
  1546  0026F2                     
  1547                           ; BSR set to: 0
  1548                           ;keypad.c: 79:         temp_col=col_loc;
  1549  0026F2  C0C6  F0C4         	movff	_col_loc,_temp_col
  1550  0026F6                     
  1551                           ; BSR set to: 0
  1552                           ;keypad.c: 80:         if(col_loc!=0xf0)
  1553  0026F6  0EF0               	movlw	240
  1554  0026F8  19C6               	xorwf	_col_loc& (0+255),w,b
  1555  0026FA  B4D8               	btfsc	status,2,c
  1556  0026FC  EF82  F013         	goto	u5251
  1557  002700  EF84  F013         	goto	u5250
  1558  002704                     u5251:
  1559  002704  EF0E  F013         	goto	l4352
  1560  002708                     u5250:
  1561  002708                     
  1562                           ; BSR set to: 0
  1563                           ;keypad.c: 81:         {;keypad.c: 82:             rowloc=3;
  1564  002708  0E03               	movlw	3
  1565  00270A  6FC5               	movwf	_rowloc& (0+255),b
  1566                           
  1567                           ;keypad.c: 83:             while(temp_col!=0xf0)
  1568  00270C  EF8B  F013         	goto	l232
  1569  002710                     l4398:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;keypad.c: 84:             {;keypad.c: 85:                 temp_col = PORTB & 0xf0;
  1573  002710  5081               	movf	129,w,c	;volatile
  1574  002712  0BF0               	andlw	240
  1575  002714  6FC4               	movwf	_temp_col& (0+255),b
  1576  002716                     l232:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;keypad.c: 83:             while(temp_col!=0xf0)
  1580  002716  0EF0               	movlw	240
  1581  002718  19C4               	xorwf	_temp_col& (0+255),w,b
  1582  00271A  A4D8               	btfss	status,2,c
  1583  00271C  EF92  F013         	goto	u5261
  1584  002720  EF94  F013         	goto	u5260
  1585  002724                     u5261:
  1586  002724  EF88  F013         	goto	l4398
  1587  002728                     u5260:
  1588  002728                     l4400:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;keypad.c: 95:     {;keypad.c: 97:         if(col_loc==0xe0)
  1592  002728  0EE0               	movlw	224
  1593  00272A  19C6               	xorwf	_col_loc& (0+255),w,b
  1594  00272C  A4D8               	btfss	status,2,c
  1595  00272E  EF9B  F013         	goto	u5271
  1596  002732  EF9D  F013         	goto	u5270
  1597  002736                     u5271:
  1598  002736  EFA8  F013         	goto	l4408
  1599  00273A                     u5270:
  1600  00273A                     
  1601                           ; BSR set to: 0
  1602                           ;keypad.c: 98:         {;keypad.c: 99:              return keypad[rowloc][0];
  1603  00273A  51C5               	movf	_rowloc& (0+255),w,b
  1604  00273C  0D03               	mullw	3
  1605  00273E  0ED7               	movlw	low _keypad
  1606  002740  24F3               	addwf	243,w,c
  1607  002742  6ED9               	movwf	fsr2l,c
  1608  002744  0E00               	movlw	high _keypad
  1609  002746  20F4               	addwfc	prodh,w,c
  1610  002748  6EDA               	movwf	fsr2h,c
  1611  00274A  50DF               	movf	indf2,w,c
  1612  00274C  EFD9  F013         	goto	l238
  1613  002750                     l4408:
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;keypad.c: 102:             if(col_loc==0xd0)
  1617  002750  0ED0               	movlw	208
  1618  002752  19C6               	xorwf	_col_loc& (0+255),w,b
  1619  002754  A4D8               	btfss	status,2,c
  1620  002756  EFAF  F013         	goto	u5281
  1621  00275A  EFB1  F013         	goto	u5280
  1622  00275E                     u5281:
  1623  00275E  EFBC  F013         	goto	l4416
  1624  002762                     u5280:
  1625  002762                     
  1626                           ; BSR set to: 0
  1627                           ;keypad.c: 103:         {;keypad.c: 104:             return keypad[rowloc][1];
  1628  002762  51C5               	movf	_rowloc& (0+255),w,b
  1629  002764  0D03               	mullw	3
  1630  002766  0ED8               	movlw	low (_keypad+1)
  1631  002768  24F3               	addwf	243,w,c
  1632  00276A  6ED9               	movwf	fsr2l,c
  1633  00276C  0E00               	movlw	high (_keypad+1)
  1634  00276E  20F4               	addwfc	prodh,w,c
  1635  002770  6EDA               	movwf	fsr2h,c
  1636  002772  50DF               	movf	indf2,w,c
  1637  002774  EFD9  F013         	goto	l238
  1638  002778                     l4416:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;keypad.c: 107:             if(col_loc==0xb0)
  1642  002778  0EB0               	movlw	176
  1643  00277A  19C6               	xorwf	_col_loc& (0+255),w,b
  1644  00277C  A4D8               	btfss	status,2,c
  1645  00277E  EFC3  F013         	goto	u5291
  1646  002782  EFC5  F013         	goto	u5290
  1647  002786                     u5291:
  1648  002786  EFD0  F013         	goto	l4424
  1649  00278A                     u5290:
  1650  00278A                     
  1651                           ; BSR set to: 0
  1652                           ;keypad.c: 108:         {;keypad.c: 109:             return keypad[rowloc][2];
  1653  00278A  51C5               	movf	_rowloc& (0+255),w,b
  1654  00278C  0D03               	mullw	3
  1655  00278E  0ED9               	movlw	low (_keypad+2)
  1656  002790  24F3               	addwf	243,w,c
  1657  002792  6ED9               	movwf	fsr2l,c
  1658  002794  0E00               	movlw	high (_keypad+2)
  1659  002796  20F4               	addwfc	prodh,w,c
  1660  002798  6EDA               	movwf	fsr2h,c
  1661  00279A  50DF               	movf	indf2,w,c
  1662  00279C  EFD9  F013         	goto	l238
  1663  0027A0                     l4424:
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;keypad.c: 113:         {;keypad.c: 114:             return keypad[rowloc][3];
  1667  0027A0  51C5               	movf	_rowloc& (0+255),w,b
  1668  0027A2  0D03               	mullw	3
  1669  0027A4  0EDA               	movlw	low (_keypad+3)
  1670  0027A6  24F3               	addwf	243,w,c
  1671  0027A8  6ED9               	movwf	fsr2l,c
  1672  0027AA  0E00               	movlw	high (_keypad+3)
  1673  0027AC  20F4               	addwfc	prodh,w,c
  1674  0027AE  6EDA               	movwf	fsr2h,c
  1675  0027B0  50DF               	movf	indf2,w,c
  1676  0027B2                     l238:
  1677                           
  1678                           ; BSR set to: 0
  1679  0027B2  0012               	return		;funcret
  1680  0027B4                     __end_of_keyfind:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _inicializar *****************
  1684 ;; Defined at:
  1685 ;;		line 83 in file "Principal.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 2
  1706 ;; This function calls:
  1707 ;;		_LCD_Init
  1708 ;;		_adc_initcon
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text2
  1715  003C4A                     __ptext2:
  1716                           	callstack 0
  1717  003C4A                     _inicializar:
  1718                           	callstack 28
  1719  003C4A                     
  1720                           ;Principal.c: 84:     ADCON1 = 0b00001111;
  1721  003C4A  0E0F               	movlw	15
  1722  003C4C  6EC1               	movwf	193,c	;volatile
  1723                           
  1724                           ;Principal.c: 86:     TRISA = 0b00000001;
  1725  003C4E  0E01               	movlw	1
  1726  003C50  6E92               	movwf	146,c	;volatile
  1727                           
  1728                           ;Principal.c: 87:     TRISB = 0xf0;
  1729  003C52  0EF0               	movlw	240
  1730  003C54  6E93               	movwf	147,c	;volatile
  1731                           
  1732                           ;Principal.c: 88:     TRISC = 0x00;
  1733  003C56  0E00               	movlw	0
  1734  003C58  6E94               	movwf	148,c	;volatile
  1735                           
  1736                           ;Principal.c: 89:     TRISD = 0x00;
  1737  003C5A  0E00               	movlw	0
  1738  003C5C  6E95               	movwf	149,c	;volatile
  1739                           
  1740                           ;Principal.c: 91:     OSCCONbits.IRCF = 0b111;
  1741  003C5E  0E70               	movlw	112
  1742  003C60  12D3               	iorwf	211,f,c	;volatile
  1743                           
  1744                           ;Principal.c: 92:     OSCCONbits.SCS = 0b10;
  1745  003C62  50D3               	movf	211,w,c	;volatile
  1746  003C64  0BFC               	andlw	-4
  1747  003C66  0902               	iorlw	2
  1748  003C68  6ED3               	movwf	211,c	;volatile
  1749                           
  1750                           ;Principal.c: 94:     OSCCON = 0x72;
  1751  003C6A  0E72               	movlw	114
  1752  003C6C  6ED3               	movwf	211,c	;volatile
  1753  003C6E                     
  1754                           ;Principal.c: 96:     adc_initcon();
  1755  003C6E  EC53  F01E         	call	_adc_initcon	;wreg free
  1756  003C72                     
  1757                           ;Principal.c: 98:     RBPU = 0;
  1758  003C72  9EF1               	bcf	4081,7,c	;volatile
  1759  003C74                     
  1760                           ;Principal.c: 99:     LCD_Init();
  1761  003C74  EC0B  F01E         	call	_LCD_Init	;wreg free
  1762  003C78  0012               	return		;funcret
  1763  003C7A                     __end_of_inicializar:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _adc_initcon *****************
  1767 ;; Defined at:
  1768 ;;		line 4 in file "adc_con.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_inicializar
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text3
  1796  003CA6                     __ptext3:
  1797                           	callstack 0
  1798  003CA6                     _adc_initcon:
  1799                           	callstack 29
  1800  003CA6                     
  1801                           ;adc_con.c: 6:     ADCON1bits.PCFG = 0b1110;
  1802  003CA6  50C1               	movf	193,w,c	;volatile
  1803  003CA8  0BF0               	andlw	-16
  1804  003CAA  090E               	iorlw	14
  1805  003CAC  6EC1               	movwf	193,c	;volatile
  1806                           
  1807                           ;adc_con.c: 7:     ADCON1bits.VCFG = 0b00;
  1808  003CAE  0ECF               	movlw	-49
  1809  003CB0  16C1               	andwf	193,f,c	;volatile
  1810                           
  1811                           ;adc_con.c: 8:     ADCON0bits.CHS = 0b0000;
  1812  003CB2  0EC3               	movlw	-61
  1813  003CB4  16C2               	andwf	194,f,c	;volatile
  1814                           
  1815                           ;adc_con.c: 9:     ADCON2bits.ACQT = 0b010;
  1816  003CB6  50C0               	movf	192,w,c	;volatile
  1817  003CB8  0BC7               	andlw	-57
  1818  003CBA  0910               	iorlw	16
  1819  003CBC  6EC0               	movwf	192,c	;volatile
  1820                           
  1821                           ;adc_con.c: 10:     ADCON2bits.ADCS = 0b001;
  1822  003CBE  50C0               	movf	192,w,c	;volatile
  1823  003CC0  0BF8               	andlw	-8
  1824  003CC2  0901               	iorlw	1
  1825  003CC4  6EC0               	movwf	192,c	;volatile
  1826  003CC6                     
  1827                           ;adc_con.c: 11:     ADCON2bits.ADFM = 1;
  1828  003CC6  8EC0               	bsf	192,7,c	;volatile
  1829  003CC8                     
  1830                           ;adc_con.c: 12:     ADCON0bits.ADON = 1;
  1831  003CC8  80C2               	bsf	194,0,c	;volatile
  1832  003CCA  0012               	return		;funcret
  1833  003CCC                     __end_of_adc_initcon:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function _LCD_Init *****************
  1837 ;; Defined at:
  1838 ;;		line 2 in file "LCD.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1854 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1855 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1856 ;;Total ram usage:        1 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 1
  1859 ;; This function calls:
  1860 ;;		_LCD_Command
  1861 ;; This function is called by:
  1862 ;;		_inicializar
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text4
  1867  003C16                     __ptext4:
  1868                           	callstack 0
  1869  003C16                     _LCD_Init:
  1870                           	callstack 28
  1871  003C16                     
  1872                           ;LCD.c: 4:     TRISD = 0;
  1873  003C16  0E00               	movlw	0
  1874  003C18  6E95               	movwf	149,c	;volatile
  1875  003C1A                     
  1876                           ;LCD.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1877  003C1A  0E27               	movlw	39
  1878  003C1C  6E03               	movwf	??_LCD_Init^0,c
  1879  003C1E  0EF5               	movlw	245
  1880  003C20                     u5447:
  1881  003C20  2EE8               	decfsz	wreg,f,c
  1882  003C22  D7FE               	bra	u5447
  1883  003C24  2E03               	decfsz	??_LCD_Init^0,f,c
  1884  003C26  D7FC               	bra	u5447
  1885  003C28  F000               	nop	
  1886  003C2A                     
  1887                           ;LCD.c: 6:     LCD_Command(0x02);
  1888  003C2A  0E02               	movlw	2
  1889  003C2C  ECB8  F01C         	call	_LCD_Command
  1890  003C30                     
  1891                           ;LCD.c: 8:     LCD_Command(0x28);
  1892  003C30  0E28               	movlw	40
  1893  003C32  ECB8  F01C         	call	_LCD_Command
  1894  003C36                     
  1895                           ;LCD.c: 10:  LCD_Command(0x01);
  1896  003C36  0E01               	movlw	1
  1897  003C38  ECB8  F01C         	call	_LCD_Command
  1898  003C3C                     
  1899                           ;LCD.c: 11:     LCD_Command(0x0c);
  1900  003C3C  0E0C               	movlw	12
  1901  003C3E  ECB8  F01C         	call	_LCD_Command
  1902  003C42                     
  1903                           ;LCD.c: 12:  LCD_Command(0x06);
  1904  003C42  0E06               	movlw	6
  1905  003C44  ECB8  F01C         	call	_LCD_Command
  1906  003C48  0012               	return		;funcret
  1907  003C4A                     __end_of_LCD_Init:
  1908                           	callstack 0
  1909                           
  1910 ;; *************** function _imprimirBlanco *****************
  1911 ;; Defined at:
  1912 ;;		line 120 in file "Principal.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1926 ;;      Params:         0       0       0       0       0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1930 ;;Total ram usage:        0 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 3
  1933 ;; This function calls:
  1934 ;;		_LCD_String_xy
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text5
  1941  003CF2                     __ptext5:
  1942                           	callstack 0
  1943  003CF2                     _imprimirBlanco:
  1944                           	callstack 27
  1945  003CF2                     
  1946                           ;Principal.c: 121:     LCD_String_xy(0,0, "Press # to start");
  1947  003CF2  0E00               	movlw	0
  1948  003CF4  6E05               	movwf	LCD_String_xy@pos^0,c
  1949  003CF6  0E01               	movlw	low STR_4
  1950  003CF8  6E06               	movwf	LCD_String_xy@msg^0,c
  1951  003CFA  0E08               	movlw	high STR_4
  1952  003CFC  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1953  003CFE  0E00               	movlw	0
  1954  003D00  EC46  F01D         	call	_LCD_String_xy
  1955  003D04  0012               	return		;funcret
  1956  003D06                     __end_of_imprimirBlanco:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _alarmaPositiva *****************
  1960 ;; Defined at:
  1961 ;;		line 102 in file "Principal.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1977 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1978 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1979 ;;Total ram usage:        2 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 3
  1982 ;; This function calls:
  1983 ;;		_LCD_Clear
  1984 ;;		_LCD_String_xy
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text6
  1991  003B74                     __ptext6:
  1992                           	callstack 0
  1993  003B74                     _alarmaPositiva:
  1994                           	callstack 27
  1995  003B74                     
  1996                           ;Principal.c: 103:     LCD_Clear();
  1997  003B74  EC8B  F01E         	call	_LCD_Clear	;wreg free
  1998  003B78                     
  1999                           ;Principal.c: 104:     LATC1 = 1;
  2000  003B78  828B               	bsf	3979,1,c	;volatile
  2001  003B7A                     
  2002                           ;Principal.c: 105:     LCD_String_xy(0,0,"OKAY");
  2003  003B7A  0E00               	movlw	0
  2004  003B7C  6E05               	movwf	LCD_String_xy@pos^0,c
  2005  003B7E  0E36               	movlw	low STR_2
  2006  003B80  6E06               	movwf	LCD_String_xy@msg^0,c
  2007  003B82  0E08               	movlw	high STR_2
  2008  003B84  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2009  003B86  0E00               	movlw	0
  2010  003B88  EC46  F01D         	call	_LCD_String_xy
  2011  003B8C                     
  2012                           ;Principal.c: 106:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2013  003B8C  0E06               	movlw	6
  2014  003B8E  6E0B               	movwf	(??_alarmaPositiva+1)^0,c
  2015  003B90  0E13               	movlw	19
  2016  003B92  6E0A               	movwf	??_alarmaPositiva^0,c
  2017  003B94  0EAE               	movlw	174
  2018  003B96                     u5457:
  2019  003B96  2EE8               	decfsz	wreg,f,c
  2020  003B98  D7FE               	bra	u5457
  2021  003B9A  2E0A               	decfsz	??_alarmaPositiva^0,f,c
  2022  003B9C  D7FC               	bra	u5457
  2023  003B9E  2E0B               	decfsz	(??_alarmaPositiva+1)^0,f,c
  2024  003BA0  D7FA               	bra	u5457
  2025  003BA2                     
  2026                           ;Principal.c: 107:     LATC1 = 0;
  2027  003BA2  928B               	bcf	3979,1,c	;volatile
  2028  003BA4                     
  2029                           ;Principal.c: 108:     LCD_Clear();
  2030  003BA4  EC8B  F01E         	call	_LCD_Clear	;wreg free
  2031  003BA8  0012               	return		;funcret
  2032  003BAA                     __end_of_alarmaPositiva:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _alarmaNegativa *****************
  2036 ;; Defined at:
  2037 ;;		line 111 in file "Principal.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2051 ;;      Params:         0       0       0       0       0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2053 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2054 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2055 ;;Total ram usage:        2 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 3
  2058 ;; This function calls:
  2059 ;;		_LCD_Clear
  2060 ;;		_LCD_String_xy
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text7
  2067  003BAA                     __ptext7:
  2068                           	callstack 0
  2069  003BAA                     _alarmaNegativa:
  2070                           	callstack 27
  2071  003BAA                     
  2072                           ;Principal.c: 112:     LCD_Clear();
  2073  003BAA  EC8B  F01E         	call	_LCD_Clear	;wreg free
  2074  003BAE                     
  2075                           ;Principal.c: 113:     LATC0 = 1;
  2076  003BAE  808B               	bsf	3979,0,c	;volatile
  2077  003BB0                     
  2078                           ;Principal.c: 114:     LCD_String_xy(0,0,"ERROR");
  2079  003BB0  0E00               	movlw	0
  2080  003BB2  6E05               	movwf	LCD_String_xy@pos^0,c
  2081  003BB4  0E2A               	movlw	low STR_3
  2082  003BB6  6E06               	movwf	LCD_String_xy@msg^0,c
  2083  003BB8  0E08               	movlw	high STR_3
  2084  003BBA  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2085  003BBC  0E00               	movlw	0
  2086  003BBE  EC46  F01D         	call	_LCD_String_xy
  2087  003BC2                     
  2088                           ;Principal.c: 115:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2089  003BC2  0E06               	movlw	6
  2090  003BC4  6E0B               	movwf	(??_alarmaNegativa+1)^0,c
  2091  003BC6  0E13               	movlw	19
  2092  003BC8  6E0A               	movwf	??_alarmaNegativa^0,c
  2093  003BCA  0EAE               	movlw	174
  2094  003BCC                     u5467:
  2095  003BCC  2EE8               	decfsz	wreg,f,c
  2096  003BCE  D7FE               	bra	u5467
  2097  003BD0  2E0A               	decfsz	??_alarmaNegativa^0,f,c
  2098  003BD2  D7FC               	bra	u5467
  2099  003BD4  2E0B               	decfsz	(??_alarmaNegativa+1)^0,f,c
  2100  003BD6  D7FA               	bra	u5467
  2101  003BD8                     
  2102                           ;Principal.c: 116:     LATC0 = 0;
  2103  003BD8  908B               	bcf	3979,0,c	;volatile
  2104  003BDA                     
  2105                           ;Principal.c: 117:     LCD_Clear();
  2106  003BDA  EC8B  F01E         	call	_LCD_Clear	;wreg free
  2107  003BDE  0012               	return		;funcret
  2108  003BE0                     __end_of_alarmaNegativa:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _LCD_Clear *****************
  2112 ;; Defined at:
  2113 ;;		line 88 in file "LCD.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 1
  2134 ;; This function calls:
  2135 ;;		_LCD_Command
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;;		_alarmaPositiva
  2139 ;;		_alarmaNegativa
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text8
  2144  003D16                     __ptext8:
  2145                           	callstack 0
  2146  003D16                     _LCD_Clear:
  2147                           	callstack 28
  2148  003D16                     
  2149                           ;LCD.c: 90:     LCD_Command(0x01);
  2150  003D16  0E01               	movlw	1
  2151  003D18  ECB8  F01C         	call	_LCD_Command
  2152  003D1C  0012               	return		;funcret
  2153  003D1E                     __end_of_LCD_Clear:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _actDesactRelay *****************
  2157 ;; Defined at:
  2158 ;;		line 133 in file "Principal.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  number          2   74[BANK0 ] int 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0
  2173 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2174 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2175 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2176 ;;Total ram usage:        4 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 9
  2179 ;; This function calls:
  2180 ;;		___flge
  2181 ;;		___flmul
  2182 ;;		___xxtofl
  2183 ;;		_adc_reader
  2184 ;;		_imprimirTemperatura
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text9
  2191  0033A6                     __ptext9:
  2192                           	callstack 0
  2193  0033A6                     _actDesactRelay:
  2194                           	callstack 21
  2195  0033A6                     
  2196                           ;Principal.c: 134:     value_adc = adc_reader();
  2197  0033A6  EC3D  F01E         	call	_adc_reader	;wreg free
  2198  0033AA  C001  F0C1         	movff	?_adc_reader,_value_adc
  2199  0033AE  C002  F0C2         	movff	?_adc_reader+1,_value_adc+1
  2200  0033B2                     
  2201                           ;Principal.c: 135:     temp = value_adc*0.4882;
  2202  0033B2  C0C1  F001         	movff	_value_adc,___xxtofl@val
  2203  0033B6  C0C2  F002         	movff	_value_adc+1,___xxtofl@val+1
  2204  0033BA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2205  0033BC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2206  0033BE  0E00               	movlw	0
  2207  0033C0  ECE3  F014         	call	___xxtofl
  2208  0033C4  C001  F00F         	movff	?___xxtofl,___flmul@b
  2209  0033C8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2210  0033CC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2211  0033D0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2212  0033D4  0E5A               	movlw	90
  2213  0033D6  6E13               	movwf	___flmul@a^0,c
  2214  0033D8  0EF5               	movlw	245
  2215  0033DA  6E14               	movwf	(___flmul@a+1)^0,c
  2216  0033DC  0EF9               	movlw	249
  2217  0033DE  6E15               	movwf	(___flmul@a+2)^0,c
  2218  0033E0  0E3E               	movlw	62
  2219  0033E2  6E16               	movwf	(___flmul@a+3)^0,c
  2220  0033E4  ECE2  F00E         	call	___flmul	;wreg free
  2221  0033E8  C00F  F0B5         	movff	?___flmul,_temp
  2222  0033EC  C010  F0B6         	movff	?___flmul+1,_temp+1
  2223  0033F0  C011  F0B7         	movff	?___flmul+2,_temp+2
  2224  0033F4  C012  F0B8         	movff	?___flmul+3,_temp+3
  2225  0033F8                     
  2226                           ;Principal.c: 136:     imprimirTemperatura ();
  2227  0033F8  EC44  F01B         	call	_imprimirTemperatura	;wreg free
  2228  0033FC                     
  2229                           ;Principal.c: 138:     int number = ((int)userTemp[0] * 10) + (int)userTemp[1];
  2230  0033FC  0100               	movlb	0	; () banked
  2231  0033FE  51E3               	movf	_userTemp& (0+255),w,b
  2232  003400  0D0A               	mullw	10
  2233  003402  CFF3 F0A8          	movff	prodl,??_actDesactRelay
  2234  003406  CFF4 F0A9          	movff	prodh,??_actDesactRelay+1
  2235  00340A  51E4               	movf	(_userTemp+1)& (0+255),w,b
  2236  00340C  25A8               	addwf	??_actDesactRelay& (0+255),w,b
  2237  00340E  6FAA               	movwf	actDesactRelay@number& (0+255),b
  2238  003410  0E00               	movlw	0
  2239  003412  21A9               	addwfc	(??_actDesactRelay+1)& (0+255),w,b
  2240  003414  6FAB               	movwf	(actDesactRelay@number+1)& (0+255),b
  2241  003416                     
  2242                           ; BSR set to: 0
  2243                           ;Principal.c: 140:     if (temp < number) {
  2244  003416  C0B5  F028         	movff	_temp,___flge@ff1
  2245  00341A  C0B6  F029         	movff	_temp+1,___flge@ff1+1
  2246  00341E  C0B7  F02A         	movff	_temp+2,___flge@ff1+2
  2247  003422  C0B8  F02B         	movff	_temp+3,___flge@ff1+3
  2248  003426  C0AA  F001         	movff	actDesactRelay@number,___xxtofl@val
  2249  00342A  C0AB  F002         	movff	actDesactRelay@number+1,___xxtofl@val+1
  2250  00342E  0E00               	movlw	0
  2251  003430  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2252  003432  0EFF               	movlw	-1
  2253  003434  6E03               	movwf	(___xxtofl@val+2)^0,c
  2254  003436  6E04               	movwf	(___xxtofl@val+3)^0,c
  2255  003438  0E01               	movlw	1
  2256  00343A  ECE3  F014         	call	___xxtofl
  2257  00343E  C001  F02C         	movff	?___xxtofl,___flge@ff2
  2258  003442  C002  F02D         	movff	?___xxtofl+1,___flge@ff2+1
  2259  003446  C003  F02E         	movff	?___xxtofl+2,___flge@ff2+2
  2260  00344A  C004  F02F         	movff	?___xxtofl+3,___flge@ff2+3
  2261  00344E  EC9F  F017         	call	___flge	;wreg free
  2262  003452  B0D8               	btfsc	status,0,c
  2263  003454  EF2E  F01A         	goto	u5301
  2264  003458  EF30  F01A         	goto	u5300
  2265  00345C                     u5301:
  2266  00345C  EF33  F01A         	goto	l110
  2267  003460                     u5300:
  2268  003460                     
  2269                           ;Principal.c: 141:         LATA1 = 1;
  2270  003460  8289               	bsf	3977,1,c	;volatile
  2271                           
  2272                           ;Principal.c: 142:     } else {
  2273  003462  EF34  F01A         	goto	l112
  2274  003466                     l110:
  2275                           
  2276                           ;Principal.c: 143:         LATA1 = 0;
  2277  003466  9289               	bcf	3977,1,c	;volatile
  2278  003468                     l112:
  2279  003468  0012               	return		;funcret
  2280  00346A                     __end_of_actDesactRelay:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _imprimirTemperatura *****************
  2284 ;; Defined at:
  2285 ;;		line 124 in file "Principal.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        2 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 8
  2306 ;; This function calls:
  2307 ;;		_LCD_Command
  2308 ;;		_LCD_String
  2309 ;;		_LCD_String_xy
  2310 ;;		_sprintf
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;;		_actDesactRelay
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text10
  2318  003688                     __ptext10:
  2319                           	callstack 0
  2320  003688                     _imprimirTemperatura:
  2321                           	callstack 22
  2322  003688                     
  2323                           ;Principal.c: 125:     sprintf(lm35, "%.2lf", temp);
  2324  003688  0EC7               	movlw	low _lm35
  2325  00368A  0100               	movlb	0	; () banked
  2326  00368C  6F98               	movwf	sprintf@s& (0+255),b
  2327  00368E  0E00               	movlw	high _lm35
  2328  003690  6F99               	movwf	(sprintf@s+1)& (0+255),b
  2329  003692  0E30               	movlw	low STR_5
  2330  003694  6F9A               	movwf	sprintf@fmt& (0+255),b
  2331  003696  0E08               	movlw	high STR_5
  2332  003698  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  2333  00369A  C0B5  F09C         	movff	_temp,?_sprintf+4
  2334  00369E  C0B6  F09D         	movff	_temp+1,?_sprintf+5
  2335  0036A2  C0B7  F09E         	movff	_temp+2,?_sprintf+6
  2336  0036A6  C0B8  F09F         	movff	_temp+3,?_sprintf+7
  2337  0036AA  EC3E  F01C         	call	_sprintf	;wreg free
  2338  0036AE                     
  2339                           ;Principal.c: 126:     LCD_String_xy(0,0, "Temperatura");
  2340  0036AE  0E00               	movlw	0
  2341  0036B0  6E05               	movwf	LCD_String_xy@pos^0,c
  2342  0036B2  0E12               	movlw	low STR_6
  2343  0036B4  6E06               	movwf	LCD_String_xy@msg^0,c
  2344  0036B6  0E08               	movlw	high STR_6
  2345  0036B8  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2346  0036BA  0E00               	movlw	0
  2347  0036BC  EC46  F01D         	call	_LCD_String_xy
  2348  0036C0                     
  2349                           ;Principal.c: 127:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2350  0036C0  0E06               	movlw	6
  2351  0036C2  6E5F               	movwf	(??_imprimirTemperatura+1)^0,c
  2352  0036C4  0E13               	movlw	19
  2353  0036C6  6E5E               	movwf	??_imprimirTemperatura^0,c
  2354  0036C8  0EAE               	movlw	174
  2355  0036CA                     u5477:
  2356  0036CA  2EE8               	decfsz	wreg,f,c
  2357  0036CC  D7FE               	bra	u5477
  2358  0036CE  2E5E               	decfsz	??_imprimirTemperatura^0,f,c
  2359  0036D0  D7FC               	bra	u5477
  2360  0036D2  2E5F               	decfsz	(??_imprimirTemperatura+1)^0,f,c
  2361  0036D4  D7FA               	bra	u5477
  2362  0036D6                     
  2363                           ;Principal.c: 128:     LCD_Command(0xC0);
  2364  0036D6  0EC0               	movlw	192
  2365  0036D8  ECB8  F01C         	call	_LCD_Command
  2366  0036DC                     
  2367                           ;Principal.c: 129:     LCD_String(lm35);
  2368  0036DC  0EC7               	movlw	low _lm35
  2369  0036DE  6E03               	movwf	LCD_String@msg^0,c
  2370  0036E0  0E00               	movlw	high _lm35
  2371  0036E2  6E04               	movwf	(LCD_String@msg+1)^0,c
  2372  0036E4  ECE1  F01B         	call	_LCD_String	;wreg free
  2373  0036E8                     
  2374                           ;Principal.c: 130:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2375  0036E8  0E06               	movlw	6
  2376  0036EA  6E5F               	movwf	(??_imprimirTemperatura+1)^0,c
  2377  0036EC  0E13               	movlw	19
  2378  0036EE  6E5E               	movwf	??_imprimirTemperatura^0,c
  2379  0036F0  0EAE               	movlw	174
  2380  0036F2                     u5487:
  2381  0036F2  2EE8               	decfsz	wreg,f,c
  2382  0036F4  D7FE               	bra	u5487
  2383  0036F6  2E5E               	decfsz	??_imprimirTemperatura^0,f,c
  2384  0036F8  D7FC               	bra	u5487
  2385  0036FA  2E5F               	decfsz	(??_imprimirTemperatura+1)^0,f,c
  2386  0036FC  D7FA               	bra	u5487
  2387  0036FE  0012               	return		;funcret
  2388  003700                     __end_of_imprimirTemperatura:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _sprintf *****************
  2392 ;; Defined at:
  2393 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  s               2   56[BANK0 ] PTR unsigned char 
  2396 ;;		 -> lm35(16), 
  2397 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  2398 ;;		 -> STR_5(6), 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  f               6   66[BANK0 ] struct _IO_FILE
  2401 ;;  ap              2   64[BANK0 ] PTR void [1]
  2402 ;;		 -> ?_sprintf(2), 
  2403 ;;  ret             2    0        int 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  2   56[BANK0 ] int 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         0       8       0       0       0       0       0       0       0
  2414 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2416 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2417 ;;Total ram usage:       16 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 7
  2420 ;; This function calls:
  2421 ;;		_vfprintf
  2422 ;; This function is called by:
  2423 ;;		_imprimirTemperatura
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text11
  2428  00387C                     __ptext11:
  2429                           	callstack 0
  2430  00387C                     _sprintf:
  2431                           	callstack 22
  2432  00387C  0E9C               	movlw	low (?_sprintf+4)
  2433  00387E  0100               	movlb	0	; () banked
  2434  003880  6FA0               	movwf	sprintf@ap& (0+255),b
  2435  003882  0E00               	movlw	high (?_sprintf+4)
  2436  003884  6FA1               	movwf	(sprintf@ap+1)& (0+255),b
  2437  003886  C098  F0A2         	movff	sprintf@s,sprintf@f
  2438  00388A  C099  F0A3         	movff	sprintf@s+1,sprintf@f+1
  2439  00388E                     
  2440                           ; BSR set to: 0
  2441  00388E  0E00               	movlw	0
  2442  003890  6FA5               	movwf	(sprintf@f+3)& (0+255),b
  2443  003892  0E00               	movlw	0
  2444  003894  6FA4               	movwf	(sprintf@f+2)& (0+255),b
  2445  003896                     
  2446                           ; BSR set to: 0
  2447  003896  0E00               	movlw	0
  2448  003898  6FA7               	movwf	(sprintf@f+5)& (0+255),b
  2449  00389A  0E00               	movlw	0
  2450  00389C  6FA6               	movwf	(sprintf@f+4)& (0+255),b
  2451  00389E                     
  2452                           ; BSR set to: 0
  2453  00389E  0EA2               	movlw	low sprintf@f
  2454  0038A0  6E56               	movwf	vfprintf@fp^0,c
  2455  0038A2  0E00               	movlw	high sprintf@f
  2456  0038A4  6E57               	movwf	(vfprintf@fp+1)^0,c
  2457  0038A6  C09A  F058         	movff	sprintf@fmt,vfprintf@fmt
  2458  0038AA  C09B  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2459  0038AE  0EA0               	movlw	low sprintf@ap
  2460  0038B0  6E5A               	movwf	vfprintf@ap^0,c
  2461  0038B2  0E00               	movlw	high sprintf@ap
  2462  0038B4  6E5B               	movwf	(vfprintf@ap+1)^0,c
  2463  0038B6  EC80  F01B         	call	_vfprintf	;wreg free
  2464  0038BA  0100               	movlb	0	; () banked
  2465  0038BC  51A4               	movf	(sprintf@f+2)& (0+255),w,b
  2466  0038BE  2598               	addwf	sprintf@s& (0+255),w,b
  2467  0038C0  6ED9               	movwf	fsr2l,c
  2468  0038C2  51A5               	movf	(sprintf@f+3)& (0+255),w,b
  2469  0038C4  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  2470  0038C6  6EDA               	movwf	fsr2h,c
  2471  0038C8  0E00               	movlw	0
  2472  0038CA  6EDF               	movwf	indf2,c
  2473  0038CC                     
  2474                           ; BSR set to: 0
  2475  0038CC  0012               	return		;funcret
  2476  0038CE                     __end_of_sprintf:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _vfprintf *****************
  2480 ;; Defined at:
  2481 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  2484 ;;		 -> sprintf@f(6), 
  2485 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  2486 ;;		 -> STR_5(6), 
  2487 ;;  ap              2   89[COMRAM] PTR PTR void 
  2488 ;;		 -> sprintf@ap(2), 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  2491 ;;		 -> STR_5(6), 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  2   85[COMRAM] int 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2501 ;;      Params:         6       0       0       0       0       0       0       0       0
  2502 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2504 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2505 ;;Total ram usage:        8 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 6
  2508 ;; This function calls:
  2509 ;;		_vfpfcnvrt
  2510 ;; This function is called by:
  2511 ;;		_sprintf
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text12
  2516  003700                     __ptext12:
  2517                           	callstack 0
  2518  003700                     _vfprintf:
  2519                           	callstack 22
  2520  003700                     
  2521                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2522  003700  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  2523  003704  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2524  003708                     
  2525                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2526  003708  0E00               	movlw	0
  2527  00370A  0100               	movlb	0	; () banked
  2528  00370C  6FBA               	movwf	(_nout+1)& (0+255),b
  2529  00370E  0E00               	movlw	0
  2530  003710  6FB9               	movwf	_nout& (0+255),b
  2531                           
  2532                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2533  003712  EF9E  F01B         	goto	l4202
  2534  003716                     l4200:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2538  003716  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2539  00371A  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2540  00371E  0E5C               	movlw	low vfprintf@cfmt
  2541  003720  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2542  003722  0E00               	movlw	high vfprintf@cfmt
  2543  003724  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2544  003726  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2545  00372A  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2546  00372E  ECB2  F00C         	call	_vfpfcnvrt	;wreg free
  2547  003732  5040               	movf	?_vfpfcnvrt^0,w,c
  2548  003734  0100               	movlb	0	; () banked
  2549  003736  27B9               	addwf	_nout& (0+255),f,b
  2550  003738  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2551  00373A  23BA               	addwfc	(_nout+1)& (0+255),f,b
  2552  00373C                     l4202:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2556  00373C  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2557  003740  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2558  003744                     	if	0	;tblptru may be non-zero
  2559  003744                     	endif
  2560  003744                     	if	0	;tblptru may be non-zero
  2561  003744                     	endif
  2562  003744  0008               	tblrd		*
  2563  003746  50F5               	movf	tablat,w,c
  2564  003748  0900               	iorlw	0
  2565  00374A  A4D8               	btfss	status,2,c
  2566  00374C  EFAA  F01B         	goto	u5021
  2567  003750  EFAC  F01B         	goto	u5020
  2568  003754                     u5021:
  2569  003754  EF8B  F01B         	goto	l4200
  2570  003758                     u5020:
  2571  003758                     
  2572                           ; BSR set to: 0
  2573                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2574  003758  C0B9  F056         	movff	_nout,?_vfprintf
  2575  00375C  C0BA  F057         	movff	_nout+1,?_vfprintf+1
  2576  003760                     
  2577                           ; BSR set to: 0
  2578  003760  0012               	return		;funcret
  2579  003762                     __end_of_vfprintf:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _vfpfcnvrt *****************
  2583 ;; Defined at:
  2584 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2587 ;;		 -> sprintf@f(6), 
  2588 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2589 ;;		 -> vfprintf@cfmt(2), 
  2590 ;;  ap              2   67[COMRAM] PTR PTR void 
  2591 ;;		 -> sprintf@ap(2), 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  llu             8    0        unsigned long long 
  2594 ;;  ll              8    0        long long 
  2595 ;;  f               4   77[COMRAM] long long 
  2596 ;;  ct              3   81[COMRAM] unsigned char [3]
  2597 ;;  vp              3    0        PTR void 
  2598 ;;  cp              3    0        PTR unsigned char 
  2599 ;;  i               2    0        int 
  2600 ;;  done            2    0        int 
  2601 ;;  c               1   84[COMRAM] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  2   63[COMRAM] int 
  2604 ;; Registers used:
  2605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2611 ;;      Params:         6       0       0       0       0       0       0       0       0
  2612 ;;      Locals:        12       0       0       0       0       0       0       0       0
  2613 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2614 ;;      Totals:        22       0       0       0       0       0       0       0       0
  2615 ;;Total ram usage:       22 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 5
  2618 ;; This function calls:
  2619 ;;		_atoi
  2620 ;;		_efgtoa
  2621 ;;		_fputc
  2622 ;;		_isdigit
  2623 ;;		_isupper
  2624 ;;		_strncmp
  2625 ;;		_tolower
  2626 ;; This function is called by:
  2627 ;;		_vfprintf
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text13
  2632  001964                     __ptext13:
  2633                           	callstack 0
  2634  001964                     _vfpfcnvrt:
  2635                           	callstack 22
  2636  001964                     
  2637                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2638  001964  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2639  001968  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2640  00196C  CFDE FFF6          	movff	postinc2,tblptrl
  2641  001970  CFDD FFF7          	movff	postdec2,tblptrh
  2642  001974                     	if	0	;tblptru may be non-zero
  2643  001974                     	endif
  2644  001974                     	if	0	;tblptru may be non-zero
  2645  001974                     	endif
  2646  001974  0008               	tblrd		*
  2647  001976  50F5               	movf	tablat,w,c
  2648  001978  0A25               	xorlw	37
  2649  00197A  A4D8               	btfss	status,2,c
  2650  00197C  EFC2  F00C         	goto	u4851
  2651  001980  EFC4  F00C         	goto	u4850
  2652  001984                     u4851:
  2653  001984  EFC6  F00E         	goto	l4160
  2654  001988                     u4850:
  2655  001988                     
  2656                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2657  001988  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2658  00198C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2659  001990  2ADE               	incf	postinc2,f,c
  2660  001992  0E00               	movlw	0
  2661  001994  22DD               	addwfc	postdec2,f,c
  2662  001996                     
  2663                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2664  001996  0E00               	movlw	0
  2665  001998  0100               	movlb	0	; () banked
  2666  00199A  6FBC               	movwf	(_width+1)& (0+255),b
  2667  00199C  0E00               	movlw	0
  2668  00199E  6FBB               	movwf	_width& (0+255),b
  2669  0019A0  C0BB  F0BF         	movff	_width,_flags
  2670  0019A4  C0BC  F0C0         	movff	_width+1,_flags+1
  2671  0019A8                     
  2672                           ; BSR set to: 0
  2673                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2674  0019A8  69BD               	setf	_prec& (0+255),b
  2675  0019AA  69BE               	setf	(_prec+1)& (0+255),b
  2676  0019AC                     
  2677                           ; BSR set to: 0
  2678                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2679  0019AC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2680  0019B0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2681  0019B4  CFDE FFF6          	movff	postinc2,tblptrl
  2682  0019B8  CFDD FFF7          	movff	postdec2,tblptrh
  2683  0019BC                     	if	0	;tblptru may be non-zero
  2684  0019BC                     	endif
  2685  0019BC                     	if	0	;tblptru may be non-zero
  2686  0019BC                     	endif
  2687  0019BC  0008               	tblrd		*
  2688  0019BE  50F5               	movf	tablat,w,c
  2689  0019C0  0A2E               	xorlw	46
  2690  0019C2  A4D8               	btfss	status,2,c
  2691  0019C4  EFE6  F00C         	goto	u4861
  2692  0019C8  EFE8  F00C         	goto	u4860
  2693  0019CC                     u4861:
  2694  0019CC  EF65  F00D         	goto	l4106
  2695  0019D0                     u4860:
  2696  0019D0                     
  2697                           ; BSR set to: 0
  2698                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2699  0019D0  0E00               	movlw	0
  2700  0019D2  6FBE               	movwf	(_prec+1)& (0+255),b
  2701  0019D4  0E00               	movlw	0
  2702  0019D6  6FBD               	movwf	_prec& (0+255),b
  2703  0019D8                     
  2704                           ; BSR set to: 0
  2705                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2706  0019D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2707  0019DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2708  0019E0  2ADE               	incf	postinc2,f,c
  2709  0019E2  0E00               	movlw	0
  2710  0019E4  22DD               	addwfc	postdec2,f,c
  2711  0019E6                     
  2712                           ; BSR set to: 0
  2713                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2714  0019E6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2715  0019EA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2716  0019EE  CFDE FFF6          	movff	postinc2,tblptrl
  2717  0019F2  CFDD FFF7          	movff	postdec2,tblptrh
  2718  0019F6                     	if	0	;tblptru may be non-zero
  2719  0019F6                     	endif
  2720  0019F6                     	if	0	;tblptru may be non-zero
  2721  0019F6                     	endif
  2722  0019F6  0008               	tblrd		*
  2723  0019F8  50F5               	movf	tablat,w,c
  2724  0019FA  0A2A               	xorlw	42
  2725  0019FC  A4D8               	btfss	status,2,c
  2726  0019FE  EF03  F00D         	goto	u4871
  2727  001A02  EF05  F00D         	goto	u4870
  2728  001A06                     u4871:
  2729  001A06  EF22  F00D         	goto	l4096
  2730  001A0A                     u4870:
  2731  001A0A                     
  2732                           ; BSR set to: 0
  2733                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2734  001A0A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2735  001A0E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2736  001A12  2ADE               	incf	postinc2,f,c
  2737  001A14  0E00               	movlw	0
  2738  001A16  22DD               	addwfc	postdec2,f,c
  2739                           
  2740                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2741  001A18  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2742  001A1C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2743  001A20  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2744  001A24  0E02               	movlw	2
  2745  001A26  26DE               	addwf	postinc2,f,c
  2746  001A28  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2747  001A2C  0E00               	movlw	0
  2748  001A2E  22DD               	addwfc	postdec2,f,c
  2749  001A30  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2750  001A34  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2751  001A38  CFDE F0BD          	movff	postinc2,_prec
  2752  001A3C  CFDD F0BE          	movff	postdec2,_prec+1
  2753                           
  2754                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2755  001A40  EF65  F00D         	goto	l4106
  2756  001A44                     l4096:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2760  001A44  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2761  001A48  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2762  001A4C  CFDE F008          	movff	postinc2,atoi@s
  2763  001A50  CFDD F009          	movff	postdec2,atoi@s+1
  2764  001A54  ECBD  F015         	call	_atoi	;wreg free
  2765  001A58  C008  F0BD         	movff	?_atoi,_prec
  2766  001A5C  C009  F0BE         	movff	?_atoi+1,_prec+1
  2767                           
  2768                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2769  001A60  EF39  F00D         	goto	l4100
  2770  001A64                     l4098:
  2771                           
  2772                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2773  001A64  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2774  001A68  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2775  001A6C  2ADE               	incf	postinc2,f,c
  2776  001A6E  0E00               	movlw	0
  2777  001A70  22DD               	addwfc	postdec2,f,c
  2778  001A72                     l4100:
  2779  001A72  0ED0               	movlw	208
  2780  001A74  6E46               	movwf	??_vfpfcnvrt^0,c
  2781  001A76  0EFF               	movlw	255
  2782  001A78  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2783  001A7A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2784  001A7E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2785  001A82  CFDE FFF6          	movff	postinc2,tblptrl
  2786  001A86  CFDD FFF7          	movff	postdec2,tblptrh
  2787  001A8A                     	if	0	;tblptru may be non-zero
  2788  001A8A                     	endif
  2789  001A8A                     	if	0	;tblptru may be non-zero
  2790  001A8A                     	endif
  2791  001A8A  0008               	tblrd		*
  2792  001A8C  50F5               	movf	tablat,w,c
  2793  001A8E  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2794  001A90  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2795  001A92  5046               	movf	??_vfpfcnvrt^0,w,c
  2796  001A94  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2797  001A96  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2798  001A98  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2799  001A9A  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2800  001A9C  E10A               	bnz	u4880
  2801  001A9E  0E0A               	movlw	10
  2802  001AA0  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2803  001AA2  A0D8               	btfss	status,0,c
  2804  001AA4  EF56  F00D         	goto	u4881
  2805  001AA8  EF59  F00D         	goto	u4880
  2806  001AAC                     u4881:
  2807  001AAC  0E01               	movlw	1
  2808  001AAE  EF5A  F00D         	goto	u4890
  2809  001AB2                     u4880:
  2810  001AB2  0E00               	movlw	0
  2811  001AB4                     u4890:
  2812  001AB4  6E4A               	movwf	_vfpfcnvrt$1035^0,c
  2813  001AB6  6A4B               	clrf	(_vfpfcnvrt$1035+1)^0,c
  2814  001AB8  504A               	movf	_vfpfcnvrt$1035^0,w,c
  2815  001ABA  104B               	iorwf	(_vfpfcnvrt$1035+1)^0,w,c
  2816  001ABC  A4D8               	btfss	status,2,c
  2817  001ABE  EF63  F00D         	goto	u4901
  2818  001AC2  EF65  F00D         	goto	u4900
  2819  001AC6                     u4901:
  2820  001AC6  EF32  F00D         	goto	l4098
  2821  001ACA                     u4900:
  2822  001ACA                     l4106:
  2823                           
  2824                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2825  001ACA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2826  001ACE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2827  001AD2  CFDE FFF6          	movff	postinc2,tblptrl
  2828  001AD6  CFDD FFF7          	movff	postdec2,tblptrh
  2829  001ADA                     	if	0	;tblptru may be non-zero
  2830  001ADA                     	endif
  2831  001ADA                     	if	0	;tblptru may be non-zero
  2832  001ADA                     	endif
  2833  001ADA  0008               	tblrd		*
  2834  001ADC  50F5               	movf	tablat,w,c
  2835  001ADE  6E07               	movwf	tolower@c^0,c
  2836  001AE0  6A08               	clrf	(tolower@c+1)^0,c
  2837  001AE2  ECB1  F01B         	call	_tolower	;wreg free
  2838  001AE6  5007               	movf	?_tolower^0,w,c
  2839  001AE8  6E52               	movwf	vfpfcnvrt@ct^0,c
  2840  001AEA                     
  2841                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2842  001AEA  5052               	movf	vfpfcnvrt@ct^0,w,c
  2843  001AEC  B4D8               	btfsc	status,2,c
  2844  001AEE  EF7B  F00D         	goto	u4911
  2845  001AF2  EF7D  F00D         	goto	u4910
  2846  001AF6                     u4911:
  2847  001AF6  EFB5  F00D         	goto	l4116
  2848  001AFA                     u4910:
  2849  001AFA                     
  2850                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2851  001AFA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2852  001AFE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2853  001B02  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2854  001B06  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2855  001B0A  0E01               	movlw	1
  2856  001B0C  2646               	addwf	??_vfpfcnvrt^0,f,c
  2857  001B0E  0E00               	movlw	0
  2858  001B10  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2859  001B12  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2860  001B16  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2861  001B1A                     	if	0	;tblptru may be non-zero
  2862  001B1A                     	endif
  2863  001B1A                     	if	0	;tblptru may be non-zero
  2864  001B1A                     	endif
  2865  001B1A  0008               	tblrd		*
  2866  001B1C  50F5               	movf	tablat,w,c
  2867  001B1E  6E07               	movwf	tolower@c^0,c
  2868  001B20  6A08               	clrf	(tolower@c+1)^0,c
  2869  001B22  ECB1  F01B         	call	_tolower	;wreg free
  2870  001B26  5007               	movf	?_tolower^0,w,c
  2871  001B28  6E53               	movwf	(vfpfcnvrt@ct+1)^0,c
  2872  001B2A                     
  2873                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2874  001B2A  5053               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2875  001B2C  B4D8               	btfsc	status,2,c
  2876  001B2E  EF9B  F00D         	goto	u4921
  2877  001B32  EF9D  F00D         	goto	u4920
  2878  001B36                     u4921:
  2879  001B36  EFB5  F00D         	goto	l4116
  2880  001B3A                     u4920:
  2881  001B3A                     
  2882                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2883  001B3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2884  001B3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2885  001B42  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2886  001B46  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2887  001B4A  0E02               	movlw	2
  2888  001B4C  2646               	addwf	??_vfpfcnvrt^0,f,c
  2889  001B4E  0E00               	movlw	0
  2890  001B50  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2891  001B52  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2892  001B56  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2893  001B5A                     	if	0	;tblptru may be non-zero
  2894  001B5A                     	endif
  2895  001B5A                     	if	0	;tblptru may be non-zero
  2896  001B5A                     	endif
  2897  001B5A  0008               	tblrd		*
  2898  001B5C  50F5               	movf	tablat,w,c
  2899  001B5E  6E07               	movwf	tolower@c^0,c
  2900  001B60  6A08               	clrf	(tolower@c+1)^0,c
  2901  001B62  ECB1  F01B         	call	_tolower	;wreg free
  2902  001B66  5007               	movf	?_tolower^0,w,c
  2903  001B68  6E54               	movwf	(vfpfcnvrt@ct+2)^0,c
  2904  001B6A                     l4116:
  2905                           
  2906                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2907  001B6A  0E66               	movlw	102
  2908  001B6C  1852               	xorwf	vfpfcnvrt@ct^0,w,c
  2909  001B6E  A4D8               	btfss	status,2,c
  2910  001B70  EFBC  F00D         	goto	u4931
  2911  001B74  EFBE  F00D         	goto	u4930
  2912  001B78                     u4931:
  2913  001B78  EFFE  F00D         	goto	l4128
  2914  001B7C                     u4930:
  2915  001B7C                     
  2916                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2917  001B7C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2918  001B80  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2919  001B84  CFDE FFF6          	movff	postinc2,tblptrl
  2920  001B88  CFDD FFF7          	movff	postdec2,tblptrh
  2921  001B8C                     	if	0	;tblptru may be non-zero
  2922  001B8C                     	endif
  2923  001B8C                     	if	0	;tblptru may be non-zero
  2924  001B8C                     	endif
  2925  001B8C  0008               	tblrd		*
  2926  001B8E  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  2927  001B92                     
  2928                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2929  001B92  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  001B96  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  001B9A  2ADE               	incf	postinc2,f,c
  2932  001B9C  0E00               	movlw	0
  2933  001B9E  22DD               	addwfc	postdec2,f,c
  2934  001BA0                     
  2935                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2936  001BA0  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2937  001BA4  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2938  001BA8  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2939  001BAC  0E04               	movlw	4
  2940  001BAE  26DE               	addwf	postinc2,f,c
  2941  001BB0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2942  001BB4  0E00               	movlw	0
  2943  001BB6  22DD               	addwfc	postdec2,f,c
  2944  001BB8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2945  001BBC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2946  001BC0  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  2947  001BC4  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  2948  001BC8  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  2949  001BCC  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  2950  001BD0                     l4124:
  2951                           
  2952                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2953  001BD0  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2954  001BD4  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2955  001BD8  C04E  F036         	movff	vfpfcnvrt@f,efgtoa@f
  2956  001BDC  C04F  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2957  001BE0  C050  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2958  001BE4  C051  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2959  001BE8  C055  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  2960  001BEC  EC26  F004         	call	_efgtoa	;wreg free
  2961  001BF0  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  2962  001BF4  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2963  001BF8  EFE1  F00E         	goto	l1082
  2964  001BFC                     l4128:
  2965                           
  2966                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2967  001BFC  0E52               	movlw	low vfpfcnvrt@ct
  2968  001BFE  6E01               	movwf	strncmp@_l^0,c
  2969  001C00  0E00               	movlw	high vfpfcnvrt@ct
  2970  001C02  6E02               	movwf	(strncmp@_l+1)^0,c
  2971  001C04  0E33               	movlw	low (STR_5+3)
  2972  001C06  6E03               	movwf	strncmp@_r^0,c
  2973  001C08  0E08               	movlw	high (STR_5+3)
  2974  001C0A  6E04               	movwf	(strncmp@_r+1)^0,c
  2975  001C0C  0E00               	movlw	0
  2976  001C0E  6E06               	movwf	(strncmp@n+1)^0,c
  2977  001C10  0E02               	movlw	2
  2978  001C12  6E05               	movwf	strncmp@n^0,c
  2979  001C14  ECA0  F018         	call	_strncmp	;wreg free
  2980  001C18  5001               	movf	?_strncmp^0,w,c
  2981  001C1A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2982  001C1C  A4D8               	btfss	status,2,c
  2983  001C1E  EF13  F00E         	goto	u4941
  2984  001C22  EF15  F00E         	goto	u4940
  2985  001C26                     u4941:
  2986  001C26  EF90  F00E         	goto	l4144
  2987  001C2A                     u4940:
  2988  001C2A                     
  2989                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2990  001C2A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2991  001C2E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2992  001C32  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2993  001C36  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2994  001C3A  0E01               	movlw	1
  2995  001C3C  2646               	addwf	??_vfpfcnvrt^0,f,c
  2996  001C3E  0E00               	movlw	0
  2997  001C40  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2998  001C42  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2999  001C46  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3000  001C4A                     	if	0	;tblptru may be non-zero
  3001  001C4A                     	endif
  3002  001C4A                     	if	0	;tblptru may be non-zero
  3003  001C4A                     	endif
  3004  001C4A  0008               	tblrd		*
  3005  001C4C  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  3006  001C50  0EBF               	movlw	191
  3007  001C52  6E46               	movwf	??_vfpfcnvrt^0,c
  3008  001C54  0EFF               	movlw	255
  3009  001C56  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3010  001C58  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3011  001C5C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3012  001C60  CFDE FFF6          	movff	postinc2,tblptrl
  3013  001C64  CFDD FFF7          	movff	postdec2,tblptrh
  3014  001C68                     	if	0	;tblptru may be non-zero
  3015  001C68                     	endif
  3016  001C68                     	if	0	;tblptru may be non-zero
  3017  001C68                     	endif
  3018  001C68  0008               	tblrd		*
  3019  001C6A  50F5               	movf	tablat,w,c
  3020  001C6C  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3021  001C6E  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3022  001C70  5046               	movf	??_vfpfcnvrt^0,w,c
  3023  001C72  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3024  001C74  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3025  001C76  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3026  001C78  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3027  001C7A  E10A               	bnz	u4950
  3028  001C7C  0E1A               	movlw	26
  3029  001C7E  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3030  001C80  A0D8               	btfss	status,0,c
  3031  001C82  EF45  F00E         	goto	u4951
  3032  001C86  EF48  F00E         	goto	u4950
  3033  001C8A                     u4951:
  3034  001C8A  0E01               	movlw	1
  3035  001C8C  EF49  F00E         	goto	u4960
  3036  001C90                     u4950:
  3037  001C90  0E00               	movlw	0
  3038  001C92                     u4960:
  3039  001C92  6E4C               	movwf	_vfpfcnvrt$1039^0,c
  3040  001C94  6A4D               	clrf	(_vfpfcnvrt$1039+1)^0,c
  3041  001C96  504C               	movf	_vfpfcnvrt$1039^0,w,c
  3042  001C98  104D               	iorwf	(_vfpfcnvrt$1039+1)^0,w,c
  3043  001C9A  B4D8               	btfsc	status,2,c
  3044  001C9C  EF52  F00E         	goto	u4971
  3045  001CA0  EF54  F00E         	goto	u4970
  3046  001CA4                     u4971:
  3047  001CA4  EF6E  F00E         	goto	l4138
  3048  001CA8                     u4970:
  3049  001CA8                     
  3050                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3051  001CA8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3052  001CAC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3053  001CB0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3054  001CB4  0E04               	movlw	4
  3055  001CB6  26DE               	addwf	postinc2,f,c
  3056  001CB8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3057  001CBC  0E00               	movlw	0
  3058  001CBE  22DD               	addwfc	postdec2,f,c
  3059  001CC0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3060  001CC4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3061  001CC8  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  3062  001CCC  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  3063  001CD0  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  3064  001CD4  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  3065                           
  3066                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3067  001CD8  EF86  F00E         	goto	l1089
  3068  001CDC                     l4138:
  3069                           
  3070                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3071  001CDC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3072  001CE0  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3073  001CE4  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3074  001CE8  0E04               	movlw	4
  3075  001CEA  26DE               	addwf	postinc2,f,c
  3076  001CEC  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3077  001CF0  0E00               	movlw	0
  3078  001CF2  22DD               	addwfc	postdec2,f,c
  3079  001CF4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3080  001CF8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3081  001CFC  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  3082  001D00  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  3083  001D04  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  3084  001D08  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  3085  001D0C                     l1089:
  3086                           
  3087                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3088  001D0C  0E02               	movlw	2
  3089  001D0E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3090  001D12  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3091  001D16  26DE               	addwf	postinc2,f,c
  3092  001D18  0E00               	movlw	0
  3093  001D1A  22DD               	addwfc	postdec2,f,c
  3094  001D1C  EFE8  F00D         	goto	l4124
  3095  001D20                     l4144:
  3096                           
  3097                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3098  001D20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3099  001D24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3100  001D28  CFDE FFF6          	movff	postinc2,tblptrl
  3101  001D2C  CFDD FFF7          	movff	postdec2,tblptrh
  3102  001D30                     	if	0	;tblptru may be non-zero
  3103  001D30                     	endif
  3104  001D30                     	if	0	;tblptru may be non-zero
  3105  001D30                     	endif
  3106  001D30  0008               	tblrd		*
  3107  001D32  50F5               	movf	tablat,w,c
  3108  001D34  0A25               	xorlw	37
  3109  001D36  A4D8               	btfss	status,2,c
  3110  001D38  EFA0  F00E         	goto	u4981
  3111  001D3C  EFA2  F00E         	goto	u4980
  3112  001D40                     u4981:
  3113  001D40  EFB9  F00E         	goto	l4154
  3114  001D44                     u4980:
  3115  001D44                     
  3116                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3117  001D44  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3118  001D48  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3119  001D4C  2ADE               	incf	postinc2,f,c
  3120  001D4E  0E00               	movlw	0
  3121  001D50  22DD               	addwfc	postdec2,f,c
  3122  001D52                     
  3123                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3124  001D52  0E00               	movlw	0
  3125  001D54  6E02               	movwf	(fputc@c+1)^0,c
  3126  001D56  0E25               	movlw	37
  3127  001D58  6E01               	movwf	fputc@c^0,c
  3128  001D5A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3129  001D5E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3130  001D62  EC0B  F019         	call	_fputc	;wreg free
  3131  001D66                     l4150:
  3132                           
  3133                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3134  001D66  0E00               	movlw	0
  3135  001D68  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3136  001D6A  0E01               	movlw	1
  3137  001D6C  6E40               	movwf	?_vfpfcnvrt^0,c
  3138  001D6E  EFE1  F00E         	goto	l1082
  3139  001D72                     l4154:
  3140                           
  3141                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3142  001D72  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3143  001D76  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3144  001D7A  2ADE               	incf	postinc2,f,c
  3145  001D7C  0E00               	movlw	0
  3146  001D7E  22DD               	addwfc	postdec2,f,c
  3147  001D80                     
  3148                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3149  001D80  0E00               	movlw	0
  3150  001D82  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3151  001D84  0E00               	movlw	0
  3152  001D86  6E40               	movwf	?_vfpfcnvrt^0,c
  3153  001D88  EFE1  F00E         	goto	l1082
  3154  001D8C                     l4160:
  3155                           
  3156                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3157  001D8C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3158  001D90  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3159  001D94  CFDE FFF6          	movff	postinc2,tblptrl
  3160  001D98  CFDD FFF7          	movff	postdec2,tblptrh
  3161  001D9C                     	if	0	;tblptru may be non-zero
  3162  001D9C                     	endif
  3163  001D9C                     	if	0	;tblptru may be non-zero
  3164  001D9C                     	endif
  3165  001D9C  0008               	tblrd		*
  3166  001D9E  50F5               	movf	tablat,w,c
  3167  001DA0  6E01               	movwf	fputc@c^0,c
  3168  001DA2  6A02               	clrf	(fputc@c+1)^0,c
  3169  001DA4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3170  001DA8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3171  001DAC  EC0B  F019         	call	_fputc	;wreg free
  3172  001DB0                     
  3173                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3174  001DB0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3175  001DB4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3176  001DB8  2ADE               	incf	postinc2,f,c
  3177  001DBA  0E00               	movlw	0
  3178  001DBC  22DD               	addwfc	postdec2,f,c
  3179  001DBE  EFB3  F00E         	goto	l4150
  3180  001DC2                     l1082:
  3181  001DC2  0012               	return		;funcret
  3182  001DC4                     __end_of_vfpfcnvrt:
  3183                           	callstack 0
  3184                           
  3185 ;; *************** function _strncmp *****************
  3186 ;; Defined at:
  3187 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3190 ;;		 -> vfpfcnvrt@ct(3), 
  3191 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3192 ;;		 -> STR_17(3), 
  3193 ;;  n               2    4[COMRAM] unsigned int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3196 ;;		 -> STR_17(3), 
  3197 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3198 ;;		 -> vfpfcnvrt@ct(3), 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  2    0[COMRAM] int 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3208 ;;      Params:         6       0       0       0       0       0       0       0       0
  3209 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3210 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3211 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3212 ;;Total ram usage:       11 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_vfpfcnvrt
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text14
  3222  003140                     __ptext14:
  3223                           	callstack 0
  3224  003140                     _strncmp:
  3225                           	callstack 26
  3226  003140  C001  F008         	movff	strncmp@_l,strncmp@l
  3227  003144  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3228  003148  C003  F00A         	movff	strncmp@_r,strncmp@r
  3229  00314C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3230  003150  0605               	decf	strncmp@n^0,f,c
  3231  003152  A0D8               	btfss	status,0,c
  3232  003154  0606               	decf	(strncmp@n+1)^0,f,c
  3233  003156  2805               	incf	strncmp@n^0,w,c
  3234  003158  E106               	bnz	u4801
  3235  00315A  2806               	incf	(strncmp@n+1)^0,w,c
  3236  00315C  A4D8               	btfss	status,2,c
  3237  00315E  EFB3  F018         	goto	u4801
  3238  003162  EFB5  F018         	goto	u4800
  3239  003166                     u4801:
  3240  003166  EFC2  F018         	goto	l4046
  3241  00316A                     u4800:
  3242  00316A  0E00               	movlw	0
  3243  00316C  6E02               	movwf	(?_strncmp+1)^0,c
  3244  00316E  0E00               	movlw	0
  3245  003170  6E01               	movwf	?_strncmp^0,c
  3246  003172  EF0A  F019         	goto	l1210
  3247  003176                     l4044:
  3248  003176  4A08               	infsnz	strncmp@l^0,f,c
  3249  003178  2A09               	incf	(strncmp@l+1)^0,f,c
  3250  00317A  4A0A               	infsnz	strncmp@r^0,f,c
  3251  00317C  2A0B               	incf	(strncmp@r+1)^0,f,c
  3252  00317E  0605               	decf	strncmp@n^0,f,c
  3253  003180  A0D8               	btfss	status,0,c
  3254  003182  0606               	decf	(strncmp@n+1)^0,f,c
  3255  003184                     l4046:
  3256  003184  C008  FFD9         	movff	strncmp@l,fsr2l
  3257  003188  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3258  00318C  50DF               	movf	indf2,w,c
  3259  00318E  B4D8               	btfsc	status,2,c
  3260  003190  EFCC  F018         	goto	u4811
  3261  003194  EFCE  F018         	goto	u4810
  3262  003198                     u4811:
  3263  003198  EFF9  F018         	goto	l4054
  3264  00319C                     u4810:
  3265  00319C  C00A  FFF6         	movff	strncmp@r,tblptrl
  3266  0031A0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3267  0031A4                     	if	0	;tblptru may be non-zero
  3268  0031A4                     	endif
  3269  0031A4                     	if	0	;tblptru may be non-zero
  3270  0031A4                     	endif
  3271  0031A4  0008               	tblrd		*
  3272  0031A6  50F5               	movf	tablat,w,c
  3273  0031A8  0900               	iorlw	0
  3274  0031AA  B4D8               	btfsc	status,2,c
  3275  0031AC  EFDA  F018         	goto	u4821
  3276  0031B0  EFDC  F018         	goto	u4820
  3277  0031B4                     u4821:
  3278  0031B4  EFF9  F018         	goto	l4054
  3279  0031B8                     u4820:
  3280  0031B8  5005               	movf	strncmp@n^0,w,c
  3281  0031BA  1006               	iorwf	(strncmp@n+1)^0,w,c
  3282  0031BC  B4D8               	btfsc	status,2,c
  3283  0031BE  EFE3  F018         	goto	u4831
  3284  0031C2  EFE5  F018         	goto	u4830
  3285  0031C6                     u4831:
  3286  0031C6  EFF9  F018         	goto	l4054
  3287  0031CA                     u4830:
  3288  0031CA  C008  FFD9         	movff	strncmp@l,fsr2l
  3289  0031CE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3290  0031D2  50DF               	movf	indf2,w,c
  3291  0031D4  6E07               	movwf	??_strncmp^0,c
  3292  0031D6  C00A  FFF6         	movff	strncmp@r,tblptrl
  3293  0031DA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3294  0031DE                     	if	0	;tblptru may be non-zero
  3295  0031DE                     	endif
  3296  0031DE                     	if	0	;tblptru may be non-zero
  3297  0031DE                     	endif
  3298  0031DE  0008               	tblrd		*
  3299  0031E0  50F5               	movf	tablat,w,c
  3300  0031E2  1807               	xorwf	??_strncmp^0,w,c
  3301  0031E4  B4D8               	btfsc	status,2,c
  3302  0031E6  EFF7  F018         	goto	u4841
  3303  0031EA  EFF9  F018         	goto	u4840
  3304  0031EE                     u4841:
  3305  0031EE  EFBB  F018         	goto	l4044
  3306  0031F2                     u4840:
  3307  0031F2                     l4054:
  3308  0031F2  C008  FFD9         	movff	strncmp@l,fsr2l
  3309  0031F6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3310  0031FA  50DF               	movf	indf2,w,c
  3311  0031FC  6E07               	movwf	??_strncmp^0,c
  3312  0031FE  C00A  FFF6         	movff	strncmp@r,tblptrl
  3313  003202  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3314  003206                     	if	0	;tblptru may be non-zero
  3315  003206                     	endif
  3316  003206                     	if	0	;tblptru may be non-zero
  3317  003206                     	endif
  3318  003206  0008               	tblrd		*
  3319  003208  50F5               	movf	tablat,w,c
  3320  00320A  5C07               	subwf	??_strncmp^0,w,c
  3321  00320C  6E01               	movwf	?_strncmp^0,c
  3322  00320E  6A02               	clrf	(?_strncmp+1)^0,c
  3323  003210  A0D8               	btfss	status,0,c
  3324  003212  0602               	decf	(?_strncmp+1)^0,f,c
  3325  003214                     l1210:
  3326  003214  0012               	return		;funcret
  3327  003216                     __end_of_strncmp:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _efgtoa *****************
  3331 ;; Defined at:
  3332 ;;		line 332 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  3335 ;;		 -> sprintf@f(6), 
  3336 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  3337 ;;  c               1   57[COMRAM] unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  u               4   52[BANK0 ] unsigned char 
  3340 ;;  g               4   44[BANK0 ] unsigned char 
  3341 ;;  l               4   38[BANK0 ] unsigned char 
  3342 ;;  h               4   34[BANK0 ] unsigned char 
  3343 ;;  ou              4   20[BANK0 ] unsigned char 
  3344 ;;  n               2   50[BANK0 ] int 
  3345 ;;  e               2   48[BANK0 ] int 
  3346 ;;  i               2   42[BANK0 ] int 
  3347 ;;  w               2   30[BANK0 ] int 
  3348 ;;  p               2   28[BANK0 ] int 
  3349 ;;  sign            2   26[BANK0 ] int 
  3350 ;;  d               2   24[BANK0 ] int 
  3351 ;;  m               2   18[BANK0 ] int 
  3352 ;;  ne              2   16[BANK0 ] int 
  3353 ;;  pp              2   14[BANK0 ] int 
  3354 ;;  t               2   12[BANK0 ] int 
  3355 ;;  mode            1   33[BANK0 ] unsigned char 
  3356 ;;  nmode           1   32[BANK0 ] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2   51[COMRAM] int 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3366 ;;      Params:         7       0       0       0       0       0       0       0       0
  3367 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3368 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3369 ;;      Totals:        12      56       0       0       0       0       0       0       0
  3370 ;;Total ram usage:       68 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 4
  3373 ;; This function calls:
  3374 ;;		___awdiv
  3375 ;;		___awmod
  3376 ;;		___fladd
  3377 ;;		___fldiv
  3378 ;;		___fleq
  3379 ;;		___flge
  3380 ;;		___flmul
  3381 ;;		___flneg
  3382 ;;		___flsub
  3383 ;;		___fltol
  3384 ;;		___fpclassifyf
  3385 ;;		_floorf
  3386 ;;		_isupper
  3387 ;;		_pad
  3388 ;;		_strcpy
  3389 ;;		_tolower
  3390 ;; This function is called by:
  3391 ;;		_vfpfcnvrt
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text15
  3396  00084C                     __ptext15:
  3397                           	callstack 0
  3398  00084C                     _efgtoa:
  3399                           	callstack 22
  3400  00084C                     
  3401                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);D:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3402  00084C  0E00               	movlw	0
  3403  00084E  0100               	movlb	0	; () banked
  3404  000850  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3405  000852  0E00               	movlw	0
  3406  000854  6F7A               	movwf	efgtoa@sign& (0+255),b
  3407  000856                     
  3408                           ; BSR set to: 0
  3409                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3410  000856  C036  F08C         	movff	efgtoa@f,efgtoa@g
  3411  00085A  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  3412  00085E  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  3413  000862  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  3414  000866                     
  3415                           ; BSR set to: 0
  3416                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3417  000866  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3418  000868  EF3A  F004         	goto	u4190
  3419  00086C  EF38  F004         	goto	u4191
  3420  000870                     u4191:
  3421  000870  EF50  F004         	goto	l3698
  3422  000874                     u4190:
  3423  000874                     
  3424                           ; BSR set to: 0
  3425                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3426  000874  0E00               	movlw	0
  3427  000876  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3428  000878  0E01               	movlw	1
  3429  00087A  6F7A               	movwf	efgtoa@sign& (0+255),b
  3430  00087C                     
  3431                           ; BSR set to: 0
  3432                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3433  00087C  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3434  000880  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3435  000884  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3436  000888  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3437  00088C  EC82  F01D         	call	___flneg	;wreg free
  3438  000890  C001  F08C         	movff	?___flneg,efgtoa@g
  3439  000894  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3440  000898  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3441  00089C  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3442  0008A0                     l3698:
  3443                           
  3444                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3445  0008A0  0E00               	movlw	0
  3446  0008A2  0100               	movlb	0	; () banked
  3447  0008A4  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3448  0008A6  0E00               	movlw	0
  3449  0008A8  6F92               	movwf	efgtoa@n& (0+255),b
  3450  0008AA                     
  3451                           ; BSR set to: 0
  3452                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3453  0008AA  C0BB  F07E         	movff	_width,efgtoa@w
  3454  0008AE  C0BC  F07F         	movff	_width+1,efgtoa@w+1
  3455  0008B2                     
  3456                           ; BSR set to: 0
  3457                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3458  0008B2  517A               	movf	efgtoa@sign& (0+255),w,b
  3459  0008B4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3460  0008B6  A4D8               	btfss	status,2,c
  3461  0008B8  EF60  F004         	goto	u4201
  3462  0008BC  EF62  F004         	goto	u4200
  3463  0008C0                     u4201:
  3464  0008C0  EF69  F004         	goto	l3706
  3465  0008C4                     u4200:
  3466  0008C4                     
  3467                           ; BSR set to: 0
  3468  0008C4  A5BF               	btfss	_flags& (0+255),2,b
  3469  0008C6  EF67  F004         	goto	u4211
  3470  0008CA  EF69  F004         	goto	u4210
  3471  0008CE                     u4211:
  3472  0008CE  EF83  F004         	goto	l3718
  3473  0008D2                     u4210:
  3474  0008D2                     l3706:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3478  0008D2  517A               	movf	efgtoa@sign& (0+255),w,b
  3479  0008D4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3480  0008D6  A4D8               	btfss	status,2,c
  3481  0008D8  EF70  F004         	goto	u4221
  3482  0008DC  EF72  F004         	goto	u4220
  3483  0008E0                     u4221:
  3484  0008E0  EF78  F004         	goto	l3710
  3485  0008E4                     u4220:
  3486  0008E4                     
  3487                           ; BSR set to: 0
  3488  0008E4  0E00               	movlw	0
  3489  0008E6  6F61               	movwf	(_efgtoa$1009+1)& (0+255),b
  3490  0008E8  0E2B               	movlw	43
  3491  0008EA  6F60               	movwf	_efgtoa$1009& (0+255),b
  3492  0008EC  EF7C  F004         	goto	l3712
  3493  0008F0                     l3710:
  3494                           
  3495                           ; BSR set to: 0
  3496  0008F0  0E00               	movlw	0
  3497  0008F2  6F61               	movwf	(_efgtoa$1009+1)& (0+255),b
  3498  0008F4  0E2D               	movlw	45
  3499  0008F6  6F60               	movwf	_efgtoa$1009& (0+255),b
  3500  0008F8                     l3712:
  3501                           
  3502                           ; BSR set to: 0
  3503  0008F8  C060  F100         	movff	_efgtoa$1009,_dbuf
  3504  0008FC                     
  3505                           ; BSR set to: 0
  3506                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3507  0008FC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3508  0008FE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3509  000900                     
  3510                           ; BSR set to: 0
  3511                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3512  000900  077E               	decf	efgtoa@w& (0+255),f,b
  3513  000902  A0D8               	btfss	status,0,c
  3514  000904  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3515  000906                     l3718:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3519  000906  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3520  00090A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3521  00090E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3522  000912  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3523  000916  EC21  F018         	call	___fpclassifyf	;wreg free
  3524  00091A  0401               	decf	?___fpclassifyf^0,w,c
  3525  00091C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3526  00091E  A4D8               	btfss	status,2,c
  3527  000920  EF94  F004         	goto	u4231
  3528  000924  EF96  F004         	goto	u4230
  3529  000928                     u4231:
  3530  000928  EFED  F004         	goto	l3736
  3531  00092C                     u4230:
  3532  00092C  0EBF               	movlw	191
  3533  00092E  6E3B               	movwf	??_efgtoa^0,c
  3534  000930  0EFF               	movlw	255
  3535  000932  6E3C               	movwf	(??_efgtoa+1)^0,c
  3536  000934  503A               	movf	efgtoa@c^0,w,c
  3537  000936  6E3D               	movwf	(??_efgtoa+2)^0,c
  3538  000938  6A3E               	clrf	(??_efgtoa+3)^0,c
  3539  00093A  503B               	movf	??_efgtoa^0,w,c
  3540  00093C  263D               	addwf	(??_efgtoa+2)^0,f,c
  3541  00093E  503C               	movf	(??_efgtoa+1)^0,w,c
  3542  000940  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3543  000942  503E               	movf	(??_efgtoa+3)^0,w,c
  3544  000944  E10A               	bnz	u4240
  3545  000946  0E1A               	movlw	26
  3546  000948  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3547  00094A  A0D8               	btfss	status,0,c
  3548  00094C  EFAA  F004         	goto	u4241
  3549  000950  EFAD  F004         	goto	u4240
  3550  000954                     u4241:
  3551  000954  0E01               	movlw	1
  3552  000956  EFAE  F004         	goto	u4250
  3553  00095A                     u4240:
  3554  00095A  0E00               	movlw	0
  3555  00095C                     u4250:
  3556  00095C  0100               	movlb	0	; () banked
  3557  00095E  6F62               	movwf	_efgtoa$1010& (0+255),b
  3558  000960  6B63               	clrf	(_efgtoa$1010+1)& (0+255),b
  3559  000962                     
  3560                           ; BSR set to: 0
  3561  000962  5162               	movf	_efgtoa$1010& (0+255),w,b
  3562  000964  1163               	iorwf	(_efgtoa$1010+1)& (0+255),w,b
  3563  000966  B4D8               	btfsc	status,2,c
  3564  000968  EFB8  F004         	goto	u4261
  3565  00096C  EFBA  F004         	goto	u4260
  3566  000970                     u4261:
  3567  000970  EFC8  F004         	goto	l3728
  3568  000974                     u4260:
  3569  000974                     
  3570                           ; BSR set to: 0
  3571                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3572  000974  0E00               	movlw	low _dbuf
  3573  000976  2592               	addwf	efgtoa@n& (0+255),w,b
  3574  000978  6E01               	movwf	strcpy@dest^0,c
  3575  00097A  0E01               	movlw	high _dbuf
  3576  00097C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3577  00097E  6E02               	movwf	(strcpy@dest+1)^0,c
  3578  000980  0E3B               	movlw	low STR_7
  3579  000982  6E03               	movwf	strcpy@src^0,c
  3580  000984  0E08               	movlw	high STR_7
  3581  000986  6E04               	movwf	(strcpy@src+1)^0,c
  3582  000988  EC10  F01C         	call	_strcpy	;wreg free
  3583                           
  3584                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3585  00098C  EFD4  F004         	goto	l3730
  3586  000990                     l3728:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3590  000990  0E00               	movlw	low _dbuf
  3591  000992  2592               	addwf	efgtoa@n& (0+255),w,b
  3592  000994  6E01               	movwf	strcpy@dest^0,c
  3593  000996  0E01               	movlw	high _dbuf
  3594  000998  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3595  00099A  6E02               	movwf	(strcpy@dest+1)^0,c
  3596  00099C  0E43               	movlw	low STR_8
  3597  00099E  6E03               	movwf	strcpy@src^0,c
  3598  0009A0  0E08               	movlw	high STR_8
  3599  0009A2  6E04               	movwf	(strcpy@src+1)^0,c
  3600  0009A4  EC10  F01C         	call	_strcpy	;wreg free
  3601  0009A8                     l3730:
  3602                           
  3603                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3604  0009A8  0100               	movlb	0	; () banked
  3605  0009AA  0EFD               	movlw	253
  3606  0009AC  277E               	addwf	efgtoa@w& (0+255),f,b
  3607  0009AE  0EFF               	movlw	255
  3608  0009B0  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3609  0009B2                     l3732:
  3610                           
  3611                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3612  0009B2  C034  F011         	movff	efgtoa@fp,pad@fp
  3613  0009B6  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  3614  0009BA  0E00               	movlw	low _dbuf
  3615  0009BC  6E13               	movwf	pad@buf^0,c
  3616  0009BE  0E01               	movlw	high _dbuf
  3617  0009C0  6E14               	movwf	(pad@buf+1)^0,c
  3618  0009C2  C07E  F015         	movff	efgtoa@w,pad@p
  3619  0009C6  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  3620  0009CA  EC70  F019         	call	_pad	;wreg free
  3621  0009CE  C011  F034         	movff	?_pad,?_efgtoa
  3622  0009D2  C012  F035         	movff	?_pad+1,?_efgtoa+1
  3623  0009D6  EF51  F00A         	goto	l990
  3624  0009DA                     l3736:
  3625                           
  3626                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3627  0009DA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3628  0009DE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3629  0009E2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3630  0009E6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3631  0009EA  EC21  F018         	call	___fpclassifyf	;wreg free
  3632  0009EE  5001               	movf	?___fpclassifyf^0,w,c
  3633  0009F0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3634  0009F2  A4D8               	btfss	status,2,c
  3635  0009F4  EFFE  F004         	goto	u4271
  3636  0009F8  EF00  F005         	goto	u4270
  3637  0009FC                     u4271:
  3638  0009FC  EF40  F005         	goto	l3754
  3639  000A00                     u4270:
  3640  000A00  0EBF               	movlw	191
  3641  000A02  6E3B               	movwf	??_efgtoa^0,c
  3642  000A04  0EFF               	movlw	255
  3643  000A06  6E3C               	movwf	(??_efgtoa+1)^0,c
  3644  000A08  503A               	movf	efgtoa@c^0,w,c
  3645  000A0A  6E3D               	movwf	(??_efgtoa+2)^0,c
  3646  000A0C  6A3E               	clrf	(??_efgtoa+3)^0,c
  3647  000A0E  503B               	movf	??_efgtoa^0,w,c
  3648  000A10  263D               	addwf	(??_efgtoa+2)^0,f,c
  3649  000A12  503C               	movf	(??_efgtoa+1)^0,w,c
  3650  000A14  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3651  000A16  503E               	movf	(??_efgtoa+3)^0,w,c
  3652  000A18  E10A               	bnz	u4280
  3653  000A1A  0E1A               	movlw	26
  3654  000A1C  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3655  000A1E  A0D8               	btfss	status,0,c
  3656  000A20  EF14  F005         	goto	u4281
  3657  000A24  EF17  F005         	goto	u4280
  3658  000A28                     u4281:
  3659  000A28  0E01               	movlw	1
  3660  000A2A  EF18  F005         	goto	u4290
  3661  000A2E                     u4280:
  3662  000A2E  0E00               	movlw	0
  3663  000A30                     u4290:
  3664  000A30  0100               	movlb	0	; () banked
  3665  000A32  6F64               	movwf	_efgtoa$1015& (0+255),b
  3666  000A34  6B65               	clrf	(_efgtoa$1015+1)& (0+255),b
  3667  000A36                     
  3668                           ; BSR set to: 0
  3669  000A36  5164               	movf	_efgtoa$1015& (0+255),w,b
  3670  000A38  1165               	iorwf	(_efgtoa$1015+1)& (0+255),w,b
  3671  000A3A  B4D8               	btfsc	status,2,c
  3672  000A3C  EF22  F005         	goto	u4301
  3673  000A40  EF24  F005         	goto	u4300
  3674  000A44                     u4301:
  3675  000A44  EF32  F005         	goto	l3746
  3676  000A48                     u4300:
  3677  000A48                     
  3678                           ; BSR set to: 0
  3679                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3680  000A48  0E00               	movlw	low _dbuf
  3681  000A4A  2592               	addwf	efgtoa@n& (0+255),w,b
  3682  000A4C  6E01               	movwf	strcpy@dest^0,c
  3683  000A4E  0E01               	movlw	high _dbuf
  3684  000A50  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3685  000A52  6E02               	movwf	(strcpy@dest+1)^0,c
  3686  000A54  0E3F               	movlw	low STR_11
  3687  000A56  6E03               	movwf	strcpy@src^0,c
  3688  000A58  0E08               	movlw	high STR_11
  3689  000A5A  6E04               	movwf	(strcpy@src+1)^0,c
  3690  000A5C  EC10  F01C         	call	_strcpy	;wreg free
  3691                           
  3692                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3693  000A60  EFD4  F004         	goto	l3730
  3694  000A64                     l3746:
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3698  000A64  0E00               	movlw	low _dbuf
  3699  000A66  2592               	addwf	efgtoa@n& (0+255),w,b
  3700  000A68  6E01               	movwf	strcpy@dest^0,c
  3701  000A6A  0E01               	movlw	high _dbuf
  3702  000A6C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3703  000A6E  6E02               	movwf	(strcpy@dest+1)^0,c
  3704  000A70  0E47               	movlw	low STR_12
  3705  000A72  6E03               	movwf	strcpy@src^0,c
  3706  000A74  0E08               	movlw	high STR_12
  3707  000A76  6E04               	movwf	(strcpy@src+1)^0,c
  3708  000A78  EC10  F01C         	call	_strcpy	;wreg free
  3709  000A7C  EFD4  F004         	goto	l3730
  3710  000A80                     l3754:
  3711                           
  3712                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3713  000A80  0E00               	movlw	0
  3714  000A82  0100               	movlb	0	; () banked
  3715  000A84  6F94               	movwf	efgtoa@u& (0+255),b
  3716  000A86  0E00               	movlw	0
  3717  000A88  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3718  000A8A  0E80               	movlw	128
  3719  000A8C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3720  000A8E  0E3F               	movlw	63
  3721  000A90  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3722                           
  3723                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3724  000A92  0E00               	movlw	0
  3725  000A94  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3726  000A96  0E00               	movlw	0
  3727  000A98  6F90               	movwf	efgtoa@e& (0+255),b
  3728  000A9A                     
  3729                           ; BSR set to: 0
  3730                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3731  000A9A  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3732  000A9E  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3733  000AA2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3734  000AA6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3735  000AAA  0E00               	movlw	0
  3736  000AAC  6E05               	movwf	___fleq@ff2^0,c
  3737  000AAE  0E00               	movlw	0
  3738  000AB0  6E06               	movwf	(___fleq@ff2+1)^0,c
  3739  000AB2  0E00               	movlw	0
  3740  000AB4  6E07               	movwf	(___fleq@ff2+2)^0,c
  3741  000AB6  0E00               	movlw	0
  3742  000AB8  6E08               	movwf	(___fleq@ff2+3)^0,c
  3743  000ABA  ECEF  F01A         	call	___fleq	;wreg free
  3744  000ABE  B0D8               	btfsc	status,0,c
  3745  000AC0  EF64  F005         	goto	u4311
  3746  000AC4  EF66  F005         	goto	u4310
  3747  000AC8                     u4311:
  3748  000AC8  EFE9  F005         	goto	l3772
  3749  000ACC                     u4310:
  3750  000ACC  EF85  F005         	goto	l3764
  3751  000AD0                     l3760:
  3752                           
  3753                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3754  000AD0  C094  F00F         	movff	efgtoa@u,___flmul@b
  3755  000AD4  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  3756  000AD8  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  3757  000ADC  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  3758  000AE0  0E00               	movlw	0
  3759  000AE2  6E13               	movwf	___flmul@a^0,c
  3760  000AE4  0E00               	movlw	0
  3761  000AE6  6E14               	movwf	(___flmul@a+1)^0,c
  3762  000AE8  0E20               	movlw	32
  3763  000AEA  6E15               	movwf	(___flmul@a+2)^0,c
  3764  000AEC  0E41               	movlw	65
  3765  000AEE  6E16               	movwf	(___flmul@a+3)^0,c
  3766  000AF0  ECE2  F00E         	call	___flmul	;wreg free
  3767  000AF4  C00F  F094         	movff	?___flmul,efgtoa@u
  3768  000AF8  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  3769  000AFC  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  3770  000B00  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  3771  000B04                     
  3772                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3773  000B04  0100               	movlb	0	; () banked
  3774  000B06  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3775  000B08  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3776  000B0A                     l3764:
  3777                           
  3778                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3779  000B0A  C08C  F028         	movff	efgtoa@g,___flge@ff1
  3780  000B0E  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3781  000B12  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3782  000B16  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3783  000B1A  0E00               	movlw	0
  3784  000B1C  6E13               	movwf	___flmul@a^0,c
  3785  000B1E  0E00               	movlw	0
  3786  000B20  6E14               	movwf	(___flmul@a+1)^0,c
  3787  000B22  0E20               	movlw	32
  3788  000B24  6E15               	movwf	(___flmul@a+2)^0,c
  3789  000B26  0E41               	movlw	65
  3790  000B28  6E16               	movwf	(___flmul@a+3)^0,c
  3791  000B2A  C094  F00F         	movff	efgtoa@u,___flmul@b
  3792  000B2E  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  3793  000B32  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  3794  000B36  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  3795  000B3A  ECE2  F00E         	call	___flmul	;wreg free
  3796  000B3E  C00F  F02C         	movff	?___flmul,___flge@ff2
  3797  000B42  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3798  000B46  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3799  000B4A  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3800  000B4E  EC9F  F017         	call	___flge	;wreg free
  3801  000B52  B0D8               	btfsc	status,0,c
  3802  000B54  EFAE  F005         	goto	u4321
  3803  000B58  EFB0  F005         	goto	u4320
  3804  000B5C                     u4321:
  3805  000B5C  EF68  F005         	goto	l3760
  3806  000B60                     u4320:
  3807  000B60  EFD0  F005         	goto	l3770
  3808  000B64                     l3766:
  3809                           
  3810                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3811  000B64  C094  F001         	movff	efgtoa@u,___fldiv@b
  3812  000B68  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3813  000B6C  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3814  000B70  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3815  000B74  0E00               	movlw	0
  3816  000B76  6E05               	movwf	___fldiv@a^0,c
  3817  000B78  0E00               	movlw	0
  3818  000B7A  6E06               	movwf	(___fldiv@a+1)^0,c
  3819  000B7C  0E20               	movlw	32
  3820  000B7E  6E07               	movwf	(___fldiv@a+2)^0,c
  3821  000B80  0E41               	movlw	65
  3822  000B82  6E08               	movwf	(___fldiv@a+3)^0,c
  3823  000B84  ECF7  F010         	call	___fldiv	;wreg free
  3824  000B88  C001  F094         	movff	?___fldiv,efgtoa@u
  3825  000B8C  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3826  000B90  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3827  000B94  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3828  000B98                     
  3829                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3830  000B98  0100               	movlb	0	; () banked
  3831  000B9A  0790               	decf	efgtoa@e& (0+255),f,b
  3832  000B9C  A0D8               	btfss	status,0,c
  3833  000B9E  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3834  000BA0                     l3770:
  3835                           
  3836                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3837  000BA0  C08C  F028         	movff	efgtoa@g,___flge@ff1
  3838  000BA4  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3839  000BA8  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3840  000BAC  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3841  000BB0  C094  F02C         	movff	efgtoa@u,___flge@ff2
  3842  000BB4  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3843  000BB8  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3844  000BBC  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3845  000BC0  EC9F  F017         	call	___flge	;wreg free
  3846  000BC4  A0D8               	btfss	status,0,c
  3847  000BC6  EFE7  F005         	goto	u4331
  3848  000BCA  EFE9  F005         	goto	u4330
  3849  000BCE                     u4331:
  3850  000BCE  EFB2  F005         	goto	l3766
  3851  000BD2                     u4330:
  3852  000BD2                     l3772:
  3853                           
  3854                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3855  000BD2  C03A  F007         	movff	efgtoa@c,tolower@c
  3856  000BD6  6A08               	clrf	(tolower@c+1)^0,c
  3857  000BD8  ECB1  F01B         	call	_tolower	;wreg free
  3858  000BDC  5007               	movf	?_tolower^0,w,c
  3859  000BDE  0100               	movlb	0	; () banked
  3860  000BE0  6F81               	movwf	efgtoa@mode& (0+255),b
  3861  000BE2                     
  3862                           ; BSR set to: 0
  3863                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3864  000BE2  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3865  000BE6                     
  3866                           ; BSR set to: 0
  3867                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3868  000BE6  0E67               	movlw	103
  3869  000BE8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3870  000BEA  A4D8               	btfss	status,2,c
  3871  000BEC  EFFA  F005         	goto	u4341
  3872  000BF0  EFFC  F005         	goto	u4340
  3873  000BF4                     u4341:
  3874  000BF4  EF22  F006         	goto	l3786
  3875  000BF8                     u4340:
  3876  000BF8                     
  3877                           ; BSR set to: 0
  3878                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3879  000BF8  51BD               	movf	_prec& (0+255),w,b
  3880  000BFA  11BE               	iorwf	(_prec+1)& (0+255),w,b
  3881  000BFC  A4D8               	btfss	status,2,c
  3882  000BFE  EF03  F006         	goto	u4351
  3883  000C02  EF05  F006         	goto	u4350
  3884  000C06                     u4351:
  3885  000C06  EF09  F006         	goto	l3782
  3886  000C0A                     u4350:
  3887  000C0A                     
  3888                           ; BSR set to: 0
  3889                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3890  000C0A  0E00               	movlw	0
  3891  000C0C  6FBE               	movwf	(_prec+1)& (0+255),b
  3892  000C0E  0E01               	movlw	1
  3893  000C10  6FBD               	movwf	_prec& (0+255),b
  3894  000C12                     l3782:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3898  000C12  BFBE               	btfsc	(_prec+1)& (0+255),7,b
  3899  000C14  EF16  F006         	goto	u4360
  3900  000C18  51BE               	movf	(_prec+1)& (0+255),w,b
  3901  000C1A  E106               	bnz	u4361
  3902  000C1C  05BD               	decf	_prec& (0+255),w,b
  3903  000C1E  B0D8               	btfsc	status,0,c
  3904  000C20  EF14  F006         	goto	u4361
  3905  000C24  EF16  F006         	goto	u4360
  3906  000C28                     u4361:
  3907  000C28  EF1C  F006         	goto	l1008
  3908  000C2C                     u4360:
  3909  000C2C                     l3784:
  3910                           
  3911                           ; BSR set to: 0
  3912  000C2C  0E00               	movlw	0
  3913  000C2E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3914  000C30  0E06               	movlw	6
  3915  000C32  6F7C               	movwf	efgtoa@p& (0+255),b
  3916  000C34  EF2B  F006         	goto	l3792
  3917  000C38                     l1008:
  3918                           
  3919                           ; BSR set to: 0
  3920  000C38  C0BD  F07C         	movff	_prec,efgtoa@p
  3921  000C3C  C0BE  F07D         	movff	_prec+1,efgtoa@p+1
  3922  000C40  EF2B  F006         	goto	l3792
  3923  000C44                     l3786:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3927  000C44  BFBE               	btfsc	(_prec+1)& (0+255),7,b
  3928  000C46  EF27  F006         	goto	u4371
  3929  000C4A  EF29  F006         	goto	u4370
  3930  000C4E                     u4371:
  3931  000C4E  EF16  F006         	goto	l3784
  3932  000C52                     u4370:
  3933  000C52  EF1C  F006         	goto	l1008
  3934  000C56                     l3792:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3938  000C56  0E67               	movlw	103
  3939  000C58  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3940  000C5A  A4D8               	btfss	status,2,c
  3941  000C5C  EF32  F006         	goto	u4381
  3942  000C60  EF34  F006         	goto	u4380
  3943  000C64                     u4381:
  3944  000C64  EF63  F006         	goto	l3802
  3945  000C68                     u4380:
  3946  000C68                     
  3947                           ; BSR set to: 0
  3948                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3949  000C68  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3950  000C6A  EF42  F006         	goto	u4390
  3951  000C6E  0EFC               	movlw	252
  3952  000C70  5D90               	subwf	efgtoa@e& (0+255),w,b
  3953  000C72  0EFF               	movlw	255
  3954  000C74  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3955  000C76  A0D8               	btfss	status,0,c
  3956  000C78  EF40  F006         	goto	u4391
  3957  000C7C  EF42  F006         	goto	u4390
  3958  000C80                     u4391:
  3959  000C80  EF61  F006         	goto	l3800
  3960  000C84                     u4390:
  3961  000C84                     
  3962                           ; BSR set to: 0
  3963  000C84  0EFF               	movlw	255
  3964  000C86  6E3B               	movwf	??_efgtoa^0,c
  3965  000C88  0EFF               	movlw	255
  3966  000C8A  6E3C               	movwf	(??_efgtoa+1)^0,c
  3967  000C8C  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  3968  000C90  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  3969  000C94  503B               	movf	??_efgtoa^0,w,c
  3970  000C96  263D               	addwf	(??_efgtoa+2)^0,f,c
  3971  000C98  503C               	movf	(??_efgtoa+1)^0,w,c
  3972  000C9A  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3973  000C9C  5190               	movf	efgtoa@e& (0+255),w,b
  3974  000C9E  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3975  000CA0  503E               	movf	(??_efgtoa+3)^0,w,c
  3976  000CA2  0A80               	xorlw	128
  3977  000CA4  6E3F               	movwf	(??_efgtoa+4)^0,c
  3978  000CA6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3979  000CA8  0A80               	xorlw	128
  3980  000CAA  583F               	subwfb	(??_efgtoa+4)^0,w,c
  3981  000CAC  A0D8               	btfss	status,0,c
  3982  000CAE  EF5B  F006         	goto	u4401
  3983  000CB2  EF5D  F006         	goto	u4400
  3984  000CB6                     u4401:
  3985  000CB6  EF61  F006         	goto	l3800
  3986  000CBA                     u4400:
  3987  000CBA                     
  3988                           ; BSR set to: 0
  3989                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3990  000CBA  0E66               	movlw	102
  3991  000CBC  6F80               	movwf	efgtoa@nmode& (0+255),b
  3992                           
  3993                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3994  000CBE  EF63  F006         	goto	l3802
  3995  000CC2                     l3800:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3999  000CC2  0E65               	movlw	101
  4000  000CC4  6F80               	movwf	efgtoa@nmode& (0+255),b
  4001  000CC6                     l3802:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4005  000CC6  C07C  F072         	movff	efgtoa@p,efgtoa@m
  4006  000CCA  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  4007  000CCE                     
  4008                           ; BSR set to: 0
  4009                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4010  000CCE  0E67               	movlw	103
  4011  000CD0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4012  000CD2  A4D8               	btfss	status,2,c
  4013  000CD4  EF6E  F006         	goto	u4411
  4014  000CD8  EF70  F006         	goto	u4410
  4015  000CDC                     u4411:
  4016  000CDC  EF80  F006         	goto	l3810
  4017  000CE0                     u4410:
  4018  000CE0                     
  4019                           ; BSR set to: 0
  4020  000CE0  0E66               	movlw	102
  4021  000CE2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4022  000CE4  A4D8               	btfss	status,2,c
  4023  000CE6  EF77  F006         	goto	u4421
  4024  000CEA  EF79  F006         	goto	u4420
  4025  000CEE                     u4421:
  4026  000CEE  EF82  F006         	goto	l3812
  4027  000CF2                     u4420:
  4028  000CF2                     
  4029                           ; BSR set to: 0
  4030  000CF2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4031  000CF4  EF80  F006         	goto	u4430
  4032  000CF8  EF7E  F006         	goto	u4431
  4033  000CFC                     u4431:
  4034  000CFC  EF82  F006         	goto	l3812
  4035  000D00                     u4430:
  4036  000D00                     l3810:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4040  000D00  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4041  000D02  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4042  000D04                     l3812:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4046  000D04  0E66               	movlw	102
  4047  000D06  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4048  000D08  A4D8               	btfss	status,2,c
  4049  000D0A  EF89  F006         	goto	u4441
  4050  000D0E  EF8B  F006         	goto	u4440
  4051  000D12                     u4441:
  4052  000D12  EFAB  F006         	goto	l3822
  4053  000D16                     u4440:
  4054  000D16                     
  4055                           ; BSR set to: 0
  4056                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4057  000D16  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4058  000D18  EF92  F006         	goto	u4450
  4059  000D1C  EF90  F006         	goto	u4451
  4060  000D20                     u4451:
  4061  000D20  EF9E  F006         	goto	l3818
  4062  000D24                     u4450:
  4063  000D24                     
  4064                           ; BSR set to: 0
  4065                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4066  000D24  0E00               	movlw	0
  4067  000D26  6F94               	movwf	efgtoa@u& (0+255),b
  4068  000D28  0E00               	movlw	0
  4069  000D2A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4070  000D2C  0E80               	movlw	128
  4071  000D2E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4072  000D30  0E3F               	movlw	63
  4073  000D32  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4074                           
  4075                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4076  000D34  0E00               	movlw	0
  4077  000D36  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4078  000D38  0E00               	movlw	0
  4079  000D3A  6F90               	movwf	efgtoa@e& (0+255),b
  4080  000D3C                     l3818:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4084  000D3C  0E67               	movlw	103
  4085  000D3E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4086  000D40  B4D8               	btfsc	status,2,c
  4087  000D42  EFA5  F006         	goto	u4461
  4088  000D46  EFA7  F006         	goto	u4460
  4089  000D4A                     u4461:
  4090  000D4A  EFAB  F006         	goto	l3822
  4091  000D4E                     u4460:
  4092  000D4E                     
  4093                           ; BSR set to: 0
  4094                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4095  000D4E  5190               	movf	efgtoa@e& (0+255),w,b
  4096  000D50  2772               	addwf	efgtoa@m& (0+255),f,b
  4097  000D52  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  4098  000D54  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4099  000D56                     l3822:
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4103  000D56  0E00               	movlw	0
  4104  000D58  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4105  000D5A  0E00               	movlw	0
  4106  000D5C  6F8A               	movwf	efgtoa@i& (0+255),b
  4107  000D5E                     
  4108                           ; BSR set to: 0
  4109                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4110  000D5E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  4111  000D62  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4112  000D66  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4113  000D6A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4114  000D6E                     
  4115                           ; BSR set to: 0
  4116                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4117  000D6E  C094  F074         	movff	efgtoa@u,efgtoa@ou
  4118  000D72  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  4119  000D76  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  4120  000D7A  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  4121                           
  4122                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4123  000D7E  EF3C  F007         	goto	l3836
  4124  000D82                     l3828:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4128  000D82  C082  F001         	movff	efgtoa@h,___fldiv@b
  4129  000D86  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4130  000D8A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4131  000D8E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4132  000D92  C094  F005         	movff	efgtoa@u,___fldiv@a
  4133  000D96  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4134  000D9A  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4135  000D9E  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4136  000DA2  ECF7  F010         	call	___fldiv	;wreg free
  4137  000DA6  C001  F01A         	movff	?___fldiv,floorf@x
  4138  000DAA  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4139  000DAE  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4140  000DB2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4141  000DB6  ECDA  F013         	call	_floorf	;wreg free
  4142  000DBA  C01A  F086         	movff	?_floorf,efgtoa@l
  4143  000DBE  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4144  000DC2  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4145  000DC6  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4146                           
  4147                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4148  000DCA  C086  F001         	movff	efgtoa@l,___fltol@f1
  4149  000DCE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4150  000DD2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4151  000DD6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4152  000DDA  EC1C  F017         	call	___fltol	;wreg free
  4153  000DDE  C001  F078         	movff	?___fltol,efgtoa@d
  4154  000DE2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4155  000DE6                     
  4156                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4157  000DE6  C082  F028         	movff	efgtoa@h,___flsub@b
  4158  000DEA  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  4159  000DEE  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4160  000DF2  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4161  000DF6  C094  F013         	movff	efgtoa@u,___flmul@a
  4162  000DFA  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  4163  000DFE  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  4164  000E02  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  4165  000E06  C086  F00F         	movff	efgtoa@l,___flmul@b
  4166  000E0A  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  4167  000E0E  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  4168  000E12  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  4169  000E16  ECE2  F00E         	call	___flmul	;wreg free
  4170  000E1A  C00F  F02C         	movff	?___flmul,___flsub@a
  4171  000E1E  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4172  000E22  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4173  000E26  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4174  000E2A  ECE0  F01C         	call	___flsub	;wreg free
  4175  000E2E  C028  F082         	movff	?___flsub,efgtoa@h
  4176  000E32  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  4177  000E36  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  4178  000E3A  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  4179  000E3E                     
  4180                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4181  000E3E  C094  F001         	movff	efgtoa@u,___fldiv@b
  4182  000E42  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4183  000E46  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4184  000E4A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4185  000E4E  0E00               	movlw	0
  4186  000E50  6E05               	movwf	___fldiv@a^0,c
  4187  000E52  0E00               	movlw	0
  4188  000E54  6E06               	movwf	(___fldiv@a+1)^0,c
  4189  000E56  0E20               	movlw	32
  4190  000E58  6E07               	movwf	(___fldiv@a+2)^0,c
  4191  000E5A  0E41               	movlw	65
  4192  000E5C  6E08               	movwf	(___fldiv@a+3)^0,c
  4193  000E5E  ECF7  F010         	call	___fldiv	;wreg free
  4194  000E62  C001  F094         	movff	?___fldiv,efgtoa@u
  4195  000E66  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4196  000E6A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4197  000E6E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4198  000E72                     
  4199                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4200  000E72  0100               	movlb	0	; () banked
  4201  000E74  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4202  000E76  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4203  000E78                     l3836:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4207  000E78  5172               	movf	efgtoa@m& (0+255),w,b
  4208  000E7A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4209  000E7C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4210  000E7E  0A80               	xorlw	128
  4211  000E80  6E3B               	movwf	??_efgtoa^0,c
  4212  000E82  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4213  000E84  0A80               	xorlw	128
  4214  000E86  583B               	subwfb	??_efgtoa^0,w,c
  4215  000E88  A0D8               	btfss	status,0,c
  4216  000E8A  EF49  F007         	goto	u4471
  4217  000E8E  EF4B  F007         	goto	u4470
  4218  000E92                     u4471:
  4219  000E92  EFC1  F006         	goto	l3828
  4220  000E96                     u4470:
  4221  000E96                     
  4222                           ; BSR set to: 0
  4223                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4224  000E96  C094  F00F         	movff	efgtoa@u,___flmul@b
  4225  000E9A  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  4226  000E9E  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  4227  000EA2  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  4228  000EA6  0E00               	movlw	0
  4229  000EA8  6E13               	movwf	___flmul@a^0,c
  4230  000EAA  0E00               	movlw	0
  4231  000EAC  6E14               	movwf	(___flmul@a+1)^0,c
  4232  000EAE  0EA0               	movlw	160
  4233  000EB0  6E15               	movwf	(___flmul@a+2)^0,c
  4234  000EB2  0E40               	movlw	64
  4235  000EB4  6E16               	movwf	(___flmul@a+3)^0,c
  4236  000EB6  ECE2  F00E         	call	___flmul	;wreg free
  4237  000EBA  C00F  F086         	movff	?___flmul,efgtoa@l
  4238  000EBE  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  4239  000EC2  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  4240  000EC6  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  4241  000ECA                     
  4242                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4243  000ECA  C082  F028         	movff	efgtoa@h,___flge@ff1
  4244  000ECE  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4245  000ED2  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4246  000ED6  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4247  000EDA  C086  F02C         	movff	efgtoa@l,___flge@ff2
  4248  000EDE  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4249  000EE2  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4250  000EE6  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4251  000EEA  EC9F  F017         	call	___flge	;wreg free
  4252  000EEE  B0D8               	btfsc	status,0,c
  4253  000EF0  EF7C  F007         	goto	u4481
  4254  000EF4  EF7E  F007         	goto	u4480
  4255  000EF8                     u4481:
  4256  000EF8  EF89  F007         	goto	l3844
  4257  000EFC                     u4480:
  4258  000EFC                     
  4259                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4260  000EFC  0E00               	movlw	0
  4261  000EFE  0100               	movlb	0	; () banked
  4262  000F00  6F86               	movwf	efgtoa@l& (0+255),b
  4263  000F02  0E00               	movlw	0
  4264  000F04  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4265  000F06  0E00               	movlw	0
  4266  000F08  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4267  000F0A  0E00               	movlw	0
  4268  000F0C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4269                           
  4270                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4271  000F0E  EFB2  F007         	goto	l3850
  4272  000F12                     l3844:
  4273                           
  4274                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4275  000F12  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4276  000F16  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4277  000F1A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4278  000F1E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4279  000F22  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4280  000F26  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4281  000F2A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4282  000F2E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4283  000F32  ECEF  F01A         	call	___fleq	;wreg free
  4284  000F36  A0D8               	btfss	status,0,c
  4285  000F38  EFA0  F007         	goto	u4491
  4286  000F3C  EFA2  F007         	goto	u4490
  4287  000F40                     u4491:
  4288  000F40  EFB2  F007         	goto	l3850
  4289  000F44                     u4490:
  4290  000F44  0100               	movlb	0	; () banked
  4291  000F46  B178               	btfsc	efgtoa@d& (0+255),0,b
  4292  000F48  EFA8  F007         	goto	u4501
  4293  000F4C  EFAA  F007         	goto	u4500
  4294  000F50                     u4501:
  4295  000F50  EFB2  F007         	goto	l3850
  4296  000F54                     u4500:
  4297  000F54                     
  4298                           ; BSR set to: 0
  4299                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4300  000F54  0E00               	movlw	0
  4301  000F56  6F86               	movwf	efgtoa@l& (0+255),b
  4302  000F58  0E00               	movlw	0
  4303  000F5A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4304  000F5C  0E00               	movlw	0
  4305  000F5E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4306  000F60  0E00               	movlw	0
  4307  000F62  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4308  000F64                     l3850:
  4309                           
  4310                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4311  000F64  C08C  F001         	movff	efgtoa@g,___fladd@b
  4312  000F68  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  4313  000F6C  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  4314  000F70  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  4315  000F74  C086  F005         	movff	efgtoa@l,___fladd@a
  4316  000F78  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4317  000F7C  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4318  000F80  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4319  000F84  EC52  F00A         	call	___fladd	;wreg free
  4320  000F88  C001  F082         	movff	?___fladd,efgtoa@h
  4321  000F8C  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4322  000F90  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4323  000F94  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4324  000F98                     
  4325                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4326  000F98  C082  F028         	movff	efgtoa@h,___flge@ff1
  4327  000F9C  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4328  000FA0  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4329  000FA4  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4330  000FA8  0E00               	movlw	0
  4331  000FAA  6E13               	movwf	___flmul@a^0,c
  4332  000FAC  0E00               	movlw	0
  4333  000FAE  6E14               	movwf	(___flmul@a+1)^0,c
  4334  000FB0  0E20               	movlw	32
  4335  000FB2  6E15               	movwf	(___flmul@a+2)^0,c
  4336  000FB4  0E41               	movlw	65
  4337  000FB6  6E16               	movwf	(___flmul@a+3)^0,c
  4338  000FB8  C074  F00F         	movff	efgtoa@ou,___flmul@b
  4339  000FBC  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4340  000FC0  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4341  000FC4  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4342  000FC8  ECE2  F00E         	call	___flmul	;wreg free
  4343  000FCC  C00F  F02C         	movff	?___flmul,___flge@ff2
  4344  000FD0  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4345  000FD4  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4346  000FD8  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4347  000FDC  EC9F  F017         	call	___flge	;wreg free
  4348  000FE0  A0D8               	btfss	status,0,c
  4349  000FE2  EFF5  F007         	goto	u4511
  4350  000FE6  EFF7  F007         	goto	u4510
  4351  000FEA                     u4511:
  4352  000FEA  EF20  F008         	goto	l3862
  4353  000FEE                     u4510:
  4354  000FEE                     
  4355                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4356  000FEE  0100               	movlb	0	; () banked
  4357  000FF0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4358  000FF2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4359  000FF4                     
  4360                           ; BSR set to: 0
  4361                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4362  000FF4  C074  F00F         	movff	efgtoa@ou,___flmul@b
  4363  000FF8  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4364  000FFC  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4365  001000  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4366  001004  0E00               	movlw	0
  4367  001006  6E13               	movwf	___flmul@a^0,c
  4368  001008  0E00               	movlw	0
  4369  00100A  6E14               	movwf	(___flmul@a+1)^0,c
  4370  00100C  0E20               	movlw	32
  4371  00100E  6E15               	movwf	(___flmul@a+2)^0,c
  4372  001010  0E41               	movlw	65
  4373  001012  6E16               	movwf	(___flmul@a+3)^0,c
  4374  001014  ECE2  F00E         	call	___flmul	;wreg free
  4375  001018  C00F  F074         	movff	?___flmul,efgtoa@ou
  4376  00101C  C010  F075         	movff	?___flmul+1,efgtoa@ou+1
  4377  001020  C011  F076         	movff	?___flmul+2,efgtoa@ou+2
  4378  001024  C012  F077         	movff	?___flmul+3,efgtoa@ou+3
  4379  001028                     
  4380                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4381  001028  0E66               	movlw	102
  4382  00102A  0100               	movlb	0	; () banked
  4383  00102C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4384  00102E  A4D8               	btfss	status,2,c
  4385  001030  EF1C  F008         	goto	u4521
  4386  001034  EF1E  F008         	goto	u4520
  4387  001038                     u4521:
  4388  001038  EF20  F008         	goto	l3862
  4389  00103C                     u4520:
  4390  00103C                     
  4391                           ; BSR set to: 0
  4392                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4393  00103C  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4394  00103E  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4395  001040                     l3862:
  4396                           
  4397                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4398  001040  C074  F094         	movff	efgtoa@ou,efgtoa@u
  4399  001044  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4400  001048  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4401  00104C  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4402  001050                     
  4403                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4404  001050  0E65               	movlw	101
  4405  001052  0100               	movlb	0	; () banked
  4406  001054  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4407  001056  B4D8               	btfsc	status,2,c
  4408  001058  EF30  F008         	goto	u4531
  4409  00105C  EF32  F008         	goto	u4530
  4410  001060                     u4531:
  4411  001060  EF38  F008         	goto	l3868
  4412  001064                     u4530:
  4413  001064                     
  4414                           ; BSR set to: 0
  4415  001064  C090  F070         	movff	efgtoa@e,efgtoa@ne
  4416  001068  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  4417  00106C  EF3C  F008         	goto	l1036
  4418  001070                     l3868:
  4419                           
  4420                           ; BSR set to: 0
  4421  001070  0E00               	movlw	0
  4422  001072  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  4423  001074  0E00               	movlw	0
  4424  001076  6F70               	movwf	efgtoa@ne& (0+255),b
  4425  001078                     l1036:
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4429  001078  0E00               	movlw	0
  4430  00107A  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4431  00107C  0E00               	movlw	0
  4432  00107E  6F6E               	movwf	efgtoa@pp& (0+255),b
  4433                           
  4434                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4435  001080  0E00               	movlw	0
  4436  001082  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  4437  001084  0E00               	movlw	0
  4438  001086  6F6C               	movwf	efgtoa@t& (0+255),b
  4439                           
  4440                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4441  001088  0E00               	movlw	0
  4442  00108A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4443  00108C  0E00               	movlw	0
  4444  00108E  6F8A               	movwf	efgtoa@i& (0+255),b
  4445                           
  4446                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4447  001090  EF37  F009         	goto	l3918
  4448  001094                     l3870:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4452  001094  C082  F001         	movff	efgtoa@h,___fldiv@b
  4453  001098  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4454  00109C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4455  0010A0  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4456  0010A4  C094  F005         	movff	efgtoa@u,___fldiv@a
  4457  0010A8  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4458  0010AC  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4459  0010B0  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4460  0010B4  ECF7  F010         	call	___fldiv	;wreg free
  4461  0010B8  C001  F01A         	movff	?___fldiv,floorf@x
  4462  0010BC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4463  0010C0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4464  0010C4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4465  0010C8  ECDA  F013         	call	_floorf	;wreg free
  4466  0010CC  C01A  F086         	movff	?_floorf,efgtoa@l
  4467  0010D0  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4468  0010D4  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4469  0010D8  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4470                           
  4471                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4472  0010DC  C086  F001         	movff	efgtoa@l,___fltol@f1
  4473  0010E0  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4474  0010E4  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4475  0010E8  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4476  0010EC  EC1C  F017         	call	___fltol	;wreg free
  4477  0010F0  C001  F078         	movff	?___fltol,efgtoa@d
  4478  0010F4  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4479  0010F8                     
  4480                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4481  0010F8  0100               	movlb	0	; () banked
  4482  0010FA  B9BF               	btfsc	_flags& (0+255),4,b
  4483  0010FC  EF82  F008         	goto	u4541
  4484  001100  EF84  F008         	goto	u4540
  4485  001104                     u4541:
  4486  001104  EFA1  F008         	goto	l3882
  4487  001108                     u4540:
  4488  001108                     
  4489                           ; BSR set to: 0
  4490  001108  5178               	movf	efgtoa@d& (0+255),w,b
  4491  00110A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4492  00110C  A4D8               	btfss	status,2,c
  4493  00110E  EF8B  F008         	goto	u4551
  4494  001112  EF8D  F008         	goto	u4550
  4495  001116                     u4551:
  4496  001116  EFA1  F008         	goto	l3882
  4497  00111A                     u4550:
  4498  00111A                     
  4499                           ; BSR set to: 0
  4500  00111A  0E67               	movlw	103
  4501  00111C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4502  00111E  A4D8               	btfss	status,2,c
  4503  001120  EF94  F008         	goto	u4561
  4504  001124  EF96  F008         	goto	u4560
  4505  001128                     u4561:
  4506  001128  EFA1  F008         	goto	l3882
  4507  00112C                     u4560:
  4508  00112C                     
  4509                           ; BSR set to: 0
  4510  00112C  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4511  00112E  EF9D  F008         	goto	u4570
  4512  001132  EF9B  F008         	goto	u4571
  4513  001136                     u4571:
  4514  001136  EFA1  F008         	goto	l3882
  4515  00113A                     u4570:
  4516  00113A                     
  4517                           ; BSR set to: 0
  4518                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4519  00113A  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  4520  00113C  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  4521                           
  4522                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4523  00113E  EFEB  F008         	goto	l3910
  4524  001142                     l3882:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4528  001142  516E               	movf	efgtoa@pp& (0+255),w,b
  4529  001144  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4530  001146  A4D8               	btfss	status,2,c
  4531  001148  EFA8  F008         	goto	u4581
  4532  00114C  EFAA  F008         	goto	u4580
  4533  001150                     u4581:
  4534  001150  EFD4  F008         	goto	l3902
  4535  001154                     u4580:
  4536  001154                     
  4537                           ; BSR set to: 0
  4538  001154  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4539  001156  EFB1  F008         	goto	u4590
  4540  00115A  EFAF  F008         	goto	u4591
  4541  00115E                     u4591:
  4542  00115E  EFD4  F008         	goto	l3902
  4543  001162                     u4590:
  4544  001162                     
  4545                           ; BSR set to: 0
  4546                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4547  001162  0E00               	movlw	low _dbuf
  4548  001164  2592               	addwf	efgtoa@n& (0+255),w,b
  4549  001166  6ED9               	movwf	fsr2l,c
  4550  001168  0E01               	movlw	high _dbuf
  4551  00116A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4552  00116C  6EDA               	movwf	fsr2h,c
  4553  00116E  0E2E               	movlw	46
  4554  001170  6EDF               	movwf	indf2,c
  4555  001172                     
  4556                           ; BSR set to: 0
  4557  001172  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4558  001174  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4559  001176                     
  4560                           ; BSR set to: 0
  4561                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4562  001176  077E               	decf	efgtoa@w& (0+255),f,b
  4563  001178  A0D8               	btfss	status,0,c
  4564  00117A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4565  00117C                     
  4566                           ; BSR set to: 0
  4567                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4568  00117C  0E00               	movlw	0
  4569  00117E  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4570  001180  0E01               	movlw	1
  4571  001182  6F6E               	movwf	efgtoa@pp& (0+255),b
  4572  001184  EFD4  F008         	goto	l3902
  4573  001188                     l3894:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4577  001188  0E00               	movlw	low _dbuf
  4578  00118A  2592               	addwf	efgtoa@n& (0+255),w,b
  4579  00118C  6ED9               	movwf	fsr2l,c
  4580  00118E  0E01               	movlw	high _dbuf
  4581  001190  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4582  001192  6EDA               	movwf	fsr2h,c
  4583  001194  0E30               	movlw	48
  4584  001196  6EDF               	movwf	indf2,c
  4585  001198                     
  4586                           ; BSR set to: 0
  4587  001198  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4588  00119A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4589  00119C                     
  4590                           ; BSR set to: 0
  4591                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4592  00119C  077E               	decf	efgtoa@w& (0+255),f,b
  4593  00119E  A0D8               	btfss	status,0,c
  4594  0011A0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4595  0011A2                     
  4596                           ; BSR set to: 0
  4597                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4598  0011A2  076C               	decf	efgtoa@t& (0+255),f,b
  4599  0011A4  A0D8               	btfss	status,0,c
  4600  0011A6  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  4601  0011A8                     l3902:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4605  0011A8  516C               	movf	efgtoa@t& (0+255),w,b
  4606  0011AA  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4607  0011AC  A4D8               	btfss	status,2,c
  4608  0011AE  EFDB  F008         	goto	u4601
  4609  0011B2  EFDD  F008         	goto	u4600
  4610  0011B6                     u4601:
  4611  0011B6  EFC4  F008         	goto	l3894
  4612  0011BA                     u4600:
  4613  0011BA                     
  4614                           ; BSR set to: 0
  4615                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4616  0011BA  0E00               	movlw	low _dbuf
  4617  0011BC  2592               	addwf	efgtoa@n& (0+255),w,b
  4618  0011BE  6ED9               	movwf	fsr2l,c
  4619  0011C0  0E01               	movlw	high _dbuf
  4620  0011C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4621  0011C4  6EDA               	movwf	fsr2h,c
  4622  0011C6  5178               	movf	efgtoa@d& (0+255),w,b
  4623  0011C8  0F30               	addlw	48
  4624  0011CA  6EDF               	movwf	indf2,c
  4625  0011CC                     
  4626                           ; BSR set to: 0
  4627  0011CC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4628  0011CE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4629  0011D0                     
  4630                           ; BSR set to: 0
  4631                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4632  0011D0  077E               	decf	efgtoa@w& (0+255),f,b
  4633  0011D2  A0D8               	btfss	status,0,c
  4634  0011D4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4635  0011D6                     l3910:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4639  0011D6  C082  F028         	movff	efgtoa@h,___flsub@b
  4640  0011DA  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  4641  0011DE  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4642  0011E2  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4643  0011E6  C094  F013         	movff	efgtoa@u,___flmul@a
  4644  0011EA  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  4645  0011EE  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  4646  0011F2  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  4647  0011F6  C086  F00F         	movff	efgtoa@l,___flmul@b
  4648  0011FA  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  4649  0011FE  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  4650  001202  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  4651  001206  ECE2  F00E         	call	___flmul	;wreg free
  4652  00120A  C00F  F02C         	movff	?___flmul,___flsub@a
  4653  00120E  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4654  001212  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4655  001216  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4656  00121A  ECE0  F01C         	call	___flsub	;wreg free
  4657  00121E  C028  F082         	movff	?___flsub,efgtoa@h
  4658  001222  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  4659  001226  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  4660  00122A  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  4661  00122E                     
  4662                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4663  00122E  C094  F001         	movff	efgtoa@u,___fldiv@b
  4664  001232  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4665  001236  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4666  00123A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4667  00123E  0E00               	movlw	0
  4668  001240  6E05               	movwf	___fldiv@a^0,c
  4669  001242  0E00               	movlw	0
  4670  001244  6E06               	movwf	(___fldiv@a+1)^0,c
  4671  001246  0E20               	movlw	32
  4672  001248  6E07               	movwf	(___fldiv@a+2)^0,c
  4673  00124A  0E41               	movlw	65
  4674  00124C  6E08               	movwf	(___fldiv@a+3)^0,c
  4675  00124E  ECF7  F010         	call	___fldiv	;wreg free
  4676  001252  C001  F094         	movff	?___fldiv,efgtoa@u
  4677  001256  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4678  00125A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4679  00125E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4680  001262                     
  4681                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4682  001262  0100               	movlb	0	; () banked
  4683  001264  0770               	decf	efgtoa@ne& (0+255),f,b
  4684  001266  A0D8               	btfss	status,0,c
  4685  001268  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4686  00126A                     
  4687                           ; BSR set to: 0
  4688                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4689  00126A  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4690  00126C  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4691  00126E                     l3918:
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4695  00126E  5172               	movf	efgtoa@m& (0+255),w,b
  4696  001270  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4697  001272  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4698  001274  0A80               	xorlw	128
  4699  001276  6E3B               	movwf	??_efgtoa^0,c
  4700  001278  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4701  00127A  0A80               	xorlw	128
  4702  00127C  583B               	subwfb	??_efgtoa^0,w,c
  4703  00127E  B0D8               	btfsc	status,0,c
  4704  001280  EF44  F009         	goto	u4611
  4705  001284  EF46  F009         	goto	u4610
  4706  001288                     u4611:
  4707  001288  EF54  F009         	goto	l3922
  4708  00128C                     u4610:
  4709  00128C                     
  4710                           ; BSR set to: 0
  4711  00128C  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4712  00128E  EF52  F009         	goto	u4621
  4713  001292  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4714  001294  E109               	bnz	u4620
  4715  001296  0E4B               	movlw	75
  4716  001298  5D92               	subwf	efgtoa@n& (0+255),w,b
  4717  00129A  A0D8               	btfss	status,0,c
  4718  00129C  EF52  F009         	goto	u4621
  4719  0012A0  EF54  F009         	goto	u4620
  4720  0012A4                     u4621:
  4721  0012A4  EF4A  F008         	goto	l3870
  4722  0012A8                     u4620:
  4723  0012A8                     l3922:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4727  0012A8  516E               	movf	efgtoa@pp& (0+255),w,b
  4728  0012AA  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4729  0012AC  A4D8               	btfss	status,2,c
  4730  0012AE  EF5B  F009         	goto	u4631
  4731  0012B2  EF5D  F009         	goto	u4630
  4732  0012B6                     u4631:
  4733  0012B6  EF6E  F009         	goto	l3930
  4734  0012BA                     u4630:
  4735  0012BA                     
  4736                           ; BSR set to: 0
  4737  0012BA  A9BF               	btfss	_flags& (0+255),4,b
  4738  0012BC  EF62  F009         	goto	u4641
  4739  0012C0  EF64  F009         	goto	u4640
  4740  0012C4                     u4641:
  4741  0012C4  EF6E  F009         	goto	l3930
  4742  0012C8                     u4640:
  4743  0012C8                     
  4744                           ; BSR set to: 0
  4745                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4746  0012C8  0E00               	movlw	low _dbuf
  4747  0012CA  2592               	addwf	efgtoa@n& (0+255),w,b
  4748  0012CC  6ED9               	movwf	fsr2l,c
  4749  0012CE  0E01               	movlw	high _dbuf
  4750  0012D0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4751  0012D2  6EDA               	movwf	fsr2h,c
  4752  0012D4  0E2E               	movlw	46
  4753  0012D6  6EDF               	movwf	indf2,c
  4754  0012D8                     
  4755                           ; BSR set to: 0
  4756  0012D8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4757  0012DA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4758  0012DC                     l3930:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4762  0012DC  0E00               	movlw	low _dbuf
  4763  0012DE  2592               	addwf	efgtoa@n& (0+255),w,b
  4764  0012E0  6ED9               	movwf	fsr2l,c
  4765  0012E2  0E01               	movlw	high _dbuf
  4766  0012E4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4767  0012E6  6EDA               	movwf	fsr2h,c
  4768  0012E8  0E00               	movlw	0
  4769  0012EA  6EDF               	movwf	indf2,c
  4770  0012EC                     
  4771                           ; BSR set to: 0
  4772                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4773  0012EC  0E65               	movlw	101
  4774  0012EE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4775  0012F0  A4D8               	btfss	status,2,c
  4776  0012F2  EF7D  F009         	goto	u4651
  4777  0012F6  EF7F  F009         	goto	u4650
  4778  0012FA                     u4651:
  4779  0012FA  EFD9  F004         	goto	l3732
  4780  0012FE                     u4650:
  4781  0012FE                     
  4782                           ; BSR set to: 0
  4783                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4784  0012FE  0E00               	movlw	0
  4785  001300  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4786  001302  0E4F               	movlw	79
  4787  001304  6F8A               	movwf	efgtoa@i& (0+255),b
  4788  001306                     
  4789                           ; BSR set to: 0
  4790                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4791  001306  0E00               	movlw	low _dbuf
  4792  001308  258A               	addwf	efgtoa@i& (0+255),w,b
  4793  00130A  6ED9               	movwf	fsr2l,c
  4794  00130C  0E01               	movlw	high _dbuf
  4795  00130E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4796  001310  6EDA               	movwf	fsr2h,c
  4797  001312  0E00               	movlw	0
  4798  001314  6EDF               	movwf	indf2,c
  4799  001316                     
  4800                           ; BSR set to: 0
  4801                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4802  001316  0E00               	movlw	0
  4803  001318  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4804  00131A  0E00               	movlw	0
  4805  00131C  6F7A               	movwf	efgtoa@sign& (0+255),b
  4806  00131E                     
  4807                           ; BSR set to: 0
  4808                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4809  00131E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4810  001320  EF96  F009         	goto	u4660
  4811  001324  EF94  F009         	goto	u4661
  4812  001328                     u4661:
  4813  001328  EF9E  F009         	goto	l3946
  4814  00132C                     u4660:
  4815  00132C                     
  4816                           ; BSR set to: 0
  4817                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4818  00132C  0E00               	movlw	0
  4819  00132E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4820  001330  0E01               	movlw	1
  4821  001332  6F7A               	movwf	efgtoa@sign& (0+255),b
  4822  001334                     
  4823                           ; BSR set to: 0
  4824                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4825  001334  6D90               	negf	efgtoa@e& (0+255),b
  4826  001336  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4827  001338  B0D8               	btfsc	status,0,c
  4828  00133A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4829  00133C                     l3946:
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4833  00133C  0E00               	movlw	0
  4834  00133E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4835  001340  0E02               	movlw	2
  4836  001342  6F7C               	movwf	efgtoa@p& (0+255),b
  4837                           
  4838                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4839  001344  EFCF  F009         	goto	l3958
  4840  001348                     l3948:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4844  001348  078A               	decf	efgtoa@i& (0+255),f,b
  4845  00134A  A0D8               	btfss	status,0,c
  4846  00134C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4847  00134E                     
  4848                           ; BSR set to: 0
  4849                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4850  00134E  0E00               	movlw	low _dbuf
  4851  001350  258A               	addwf	efgtoa@i& (0+255),w,b
  4852  001352  6ED9               	movwf	fsr2l,c
  4853  001354  0E01               	movlw	high _dbuf
  4854  001356  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4855  001358  6EDA               	movwf	fsr2h,c
  4856  00135A  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4857  00135E  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4858  001362  0E00               	movlw	0
  4859  001364  6E04               	movwf	(___awmod@divisor+1)^0,c
  4860  001366  0E0A               	movlw	10
  4861  001368  6E03               	movwf	___awmod@divisor^0,c
  4862  00136A  EC97  F01A         	call	___awmod	;wreg free
  4863  00136E  5001               	movf	?___awmod^0,w,c
  4864  001370  0F30               	addlw	48
  4865  001372  6EDF               	movwf	indf2,c
  4866  001374                     
  4867                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4868  001374  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4869  001378  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4870  00137C  0E00               	movlw	0
  4871  00137E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4872  001380  0E0A               	movlw	10
  4873  001382  6E03               	movwf	___awdiv@divisor^0,c
  4874  001384  EC35  F01A         	call	___awdiv	;wreg free
  4875  001388  C001  F090         	movff	?___awdiv,efgtoa@e
  4876  00138C  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4877  001390                     
  4878                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4879  001390  0100               	movlb	0	; () banked
  4880  001392  077C               	decf	efgtoa@p& (0+255),f,b
  4881  001394  A0D8               	btfss	status,0,c
  4882  001396  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4883  001398                     
  4884                           ; BSR set to: 0
  4885                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4886  001398  077E               	decf	efgtoa@w& (0+255),f,b
  4887  00139A  A0D8               	btfss	status,0,c
  4888  00139C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4889  00139E                     l3958:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4893  00139E  5190               	movf	efgtoa@e& (0+255),w,b
  4894  0013A0  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4895  0013A2  A4D8               	btfss	status,2,c
  4896  0013A4  EFD6  F009         	goto	u4671
  4897  0013A8  EFD8  F009         	goto	u4670
  4898  0013AC                     u4671:
  4899  0013AC  EFA4  F009         	goto	l3948
  4900  0013B0                     u4670:
  4901  0013B0                     
  4902                           ; BSR set to: 0
  4903  0013B0  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4904  0013B2  EFE5  F009         	goto	u4680
  4905  0013B6  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4906  0013B8  E106               	bnz	u4681
  4907  0013BA  057C               	decf	efgtoa@p& (0+255),w,b
  4908  0013BC  B0D8               	btfsc	status,0,c
  4909  0013BE  EFE3  F009         	goto	u4681
  4910  0013C2  EFE5  F009         	goto	u4680
  4911  0013C6                     u4681:
  4912  0013C6  EFA4  F009         	goto	l3948
  4913  0013CA                     u4680:
  4914  0013CA                     
  4915                           ; BSR set to: 0
  4916                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4917  0013CA  078A               	decf	efgtoa@i& (0+255),f,b
  4918  0013CC  A0D8               	btfss	status,0,c
  4919  0013CE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4920  0013D0                     
  4921                           ; BSR set to: 0
  4922                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4923  0013D0  517A               	movf	efgtoa@sign& (0+255),w,b
  4924  0013D2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4925  0013D4  A4D8               	btfss	status,2,c
  4926  0013D6  EFEF  F009         	goto	u4691
  4927  0013DA  EFF1  F009         	goto	u4690
  4928  0013DE                     u4691:
  4929  0013DE  EFF7  F009         	goto	l3968
  4930  0013E2                     u4690:
  4931  0013E2                     
  4932                           ; BSR set to: 0
  4933  0013E2  0E00               	movlw	0
  4934  0013E4  6F67               	movwf	(_efgtoa$1019+1)& (0+255),b
  4935  0013E6  0E2B               	movlw	43
  4936  0013E8  6F66               	movwf	_efgtoa$1019& (0+255),b
  4937  0013EA  EFFB  F009         	goto	l3970
  4938  0013EE                     l3968:
  4939                           
  4940                           ; BSR set to: 0
  4941  0013EE  0E00               	movlw	0
  4942  0013F0  6F67               	movwf	(_efgtoa$1019+1)& (0+255),b
  4943  0013F2  0E2D               	movlw	45
  4944  0013F4  6F66               	movwf	_efgtoa$1019& (0+255),b
  4945  0013F6                     l3970:
  4946                           
  4947                           ; BSR set to: 0
  4948  0013F6  0E00               	movlw	low _dbuf
  4949  0013F8  258A               	addwf	efgtoa@i& (0+255),w,b
  4950  0013FA  6ED9               	movwf	fsr2l,c
  4951  0013FC  0E01               	movlw	high _dbuf
  4952  0013FE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4953  001400  6EDA               	movwf	fsr2h,c
  4954  001402  C066  FFDF         	movff	_efgtoa$1019,indf2
  4955  001406                     
  4956                           ; BSR set to: 0
  4957                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4958  001406  077E               	decf	efgtoa@w& (0+255),f,b
  4959  001408  A0D8               	btfss	status,0,c
  4960  00140A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4961  00140C                     
  4962                           ; BSR set to: 0
  4963                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4964  00140C  078A               	decf	efgtoa@i& (0+255),f,b
  4965  00140E  A0D8               	btfss	status,0,c
  4966  001410  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4967  001412                     
  4968                           ; BSR set to: 0
  4969  001412  0EBF               	movlw	191
  4970  001414  6E3B               	movwf	??_efgtoa^0,c
  4971  001416  0EFF               	movlw	255
  4972  001418  6E3C               	movwf	(??_efgtoa+1)^0,c
  4973  00141A  503A               	movf	efgtoa@c^0,w,c
  4974  00141C  6E3D               	movwf	(??_efgtoa+2)^0,c
  4975  00141E  6A3E               	clrf	(??_efgtoa+3)^0,c
  4976  001420  503B               	movf	??_efgtoa^0,w,c
  4977  001422  263D               	addwf	(??_efgtoa+2)^0,f,c
  4978  001424  503C               	movf	(??_efgtoa+1)^0,w,c
  4979  001426  223E               	addwfc	(??_efgtoa+3)^0,f,c
  4980  001428  503E               	movf	(??_efgtoa+3)^0,w,c
  4981  00142A  E10A               	bnz	u4700
  4982  00142C  0E1A               	movlw	26
  4983  00142E  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  4984  001430  A0D8               	btfss	status,0,c
  4985  001432  EF1D  F00A         	goto	u4701
  4986  001436  EF20  F00A         	goto	u4700
  4987  00143A                     u4701:
  4988  00143A  0E01               	movlw	1
  4989  00143C  EF21  F00A         	goto	u4710
  4990  001440                     u4700:
  4991  001440  0E00               	movlw	0
  4992  001442                     u4710:
  4993  001442  6F6A               	movwf	_efgtoa$1021& (0+255),b
  4994  001444  6B6B               	clrf	(_efgtoa$1021+1)& (0+255),b
  4995  001446                     
  4996                           ; BSR set to: 0
  4997  001446  516A               	movf	_efgtoa$1021& (0+255),w,b
  4998  001448  116B               	iorwf	(_efgtoa$1021+1)& (0+255),w,b
  4999  00144A  A4D8               	btfss	status,2,c
  5000  00144C  EF2A  F00A         	goto	u4721
  5001  001450  EF2C  F00A         	goto	u4720
  5002  001454                     u4721:
  5003  001454  EF32  F00A         	goto	l3984
  5004  001458                     u4720:
  5005  001458                     
  5006                           ; BSR set to: 0
  5007  001458  0E00               	movlw	0
  5008  00145A  6F69               	movwf	(_efgtoa$1020+1)& (0+255),b
  5009  00145C  0E65               	movlw	101
  5010  00145E  6F68               	movwf	_efgtoa$1020& (0+255),b
  5011  001460  EF36  F00A         	goto	l3986
  5012  001464                     l3984:
  5013                           
  5014                           ; BSR set to: 0
  5015  001464  0E00               	movlw	0
  5016  001466  6F69               	movwf	(_efgtoa$1020+1)& (0+255),b
  5017  001468  0E45               	movlw	69
  5018  00146A  6F68               	movwf	_efgtoa$1020& (0+255),b
  5019  00146C                     l3986:
  5020                           
  5021                           ; BSR set to: 0
  5022  00146C  0E00               	movlw	low _dbuf
  5023  00146E  258A               	addwf	efgtoa@i& (0+255),w,b
  5024  001470  6ED9               	movwf	fsr2l,c
  5025  001472  0E01               	movlw	high _dbuf
  5026  001474  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5027  001476  6EDA               	movwf	fsr2h,c
  5028  001478  C068  FFDF         	movff	_efgtoa$1020,indf2
  5029  00147C                     
  5030                           ; BSR set to: 0
  5031                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5032  00147C  077E               	decf	efgtoa@w& (0+255),f,b
  5033  00147E  A0D8               	btfss	status,0,c
  5034  001480  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  5035  001482                     
  5036                           ; BSR set to: 0
  5037                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5038  001482  0E00               	movlw	low _dbuf
  5039  001484  2592               	addwf	efgtoa@n& (0+255),w,b
  5040  001486  6E01               	movwf	strcpy@dest^0,c
  5041  001488  0E01               	movlw	high _dbuf
  5042  00148A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5043  00148C  6E02               	movwf	(strcpy@dest+1)^0,c
  5044  00148E  0E00               	movlw	low _dbuf
  5045  001490  258A               	addwf	efgtoa@i& (0+255),w,b
  5046  001492  6E03               	movwf	strcpy@src^0,c
  5047  001494  0E01               	movlw	high _dbuf
  5048  001496  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5049  001498  6E04               	movwf	(strcpy@src+1)^0,c
  5050  00149A  EC10  F01C         	call	_strcpy	;wreg free
  5051  00149E  EFD9  F004         	goto	l3732
  5052  0014A2                     l990:
  5053  0014A2  0012               	return		;funcret
  5054  0014A4                     __end_of_efgtoa:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _tolower *****************
  5058 ;; Defined at:
  5059 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  c               2    6[COMRAM] int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  2    6[COMRAM] int 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5073 ;;      Params:         2       0       0       0       0       0       0       0       0
  5074 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5075 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5076 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5077 ;;Total ram usage:        8 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 1
  5080 ;; This function calls:
  5081 ;;		_isupper
  5082 ;; This function is called by:
  5083 ;;		_efgtoa
  5084 ;;		_vfpfcnvrt
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text16
  5089  003762                     __ptext16:
  5090                           	callstack 0
  5091  003762                     _tolower:
  5092                           	callstack 25
  5093  003762  0EBF               	movlw	191
  5094  003764  6E09               	movwf	??_tolower^0,c
  5095  003766  0EFF               	movlw	255
  5096  003768  6E0A               	movwf	(??_tolower+1)^0,c
  5097  00376A  C007  F00B         	movff	tolower@c,??_tolower+2
  5098  00376E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5099  003772  5009               	movf	??_tolower^0,w,c
  5100  003774  260B               	addwf	(??_tolower+2)^0,f,c
  5101  003776  500A               	movf	(??_tolower+1)^0,w,c
  5102  003778  220C               	addwfc	(??_tolower+3)^0,f,c
  5103  00377A  500C               	movf	(??_tolower+3)^0,w,c
  5104  00377C  E10A               	bnz	u4020
  5105  00377E  0E1A               	movlw	26
  5106  003780  5C0B               	subwf	(??_tolower+2)^0,w,c
  5107  003782  A0D8               	btfss	status,0,c
  5108  003784  EFC6  F01B         	goto	u4021
  5109  003788  EFC9  F01B         	goto	u4020
  5110  00378C                     u4021:
  5111  00378C  0E01               	movlw	1
  5112  00378E  EFCA  F01B         	goto	u4030
  5113  003792                     u4020:
  5114  003792  0E00               	movlw	0
  5115  003794                     u4030:
  5116  003794  6E0D               	movwf	_tolower$1168^0,c
  5117  003796  6A0E               	clrf	(_tolower$1168+1)^0,c
  5118  003798  500D               	movf	_tolower$1168^0,w,c
  5119  00379A  100E               	iorwf	(_tolower$1168+1)^0,w,c
  5120  00379C  B4D8               	btfsc	status,2,c
  5121  00379E  EFD3  F01B         	goto	u4041
  5122  0037A2  EFD5  F01B         	goto	u4040
  5123  0037A6                     u4041:
  5124  0037A6  EFDC  F01B         	goto	l1220
  5125  0037AA                     u4040:
  5126  0037AA  0E20               	movlw	32
  5127  0037AC  1007               	iorwf	tolower@c^0,w,c
  5128  0037AE  6E07               	movwf	?_tolower^0,c
  5129  0037B0  5008               	movf	(tolower@c+1)^0,w,c
  5130  0037B2  6E08               	movwf	(?_tolower+1)^0,c
  5131  0037B4  EFE0  F01B         	goto	l1225
  5132  0037B8                     l1220:
  5133  0037B8  C007  F007         	movff	tolower@c,?_tolower
  5134  0037BC  C008  F008         	movff	tolower@c+1,?_tolower+1
  5135  0037C0                     l1225:
  5136  0037C0  0012               	return		;funcret
  5137  0037C2                     __end_of_tolower:
  5138                           	callstack 0
  5139                           
  5140 ;; *************** function _isupper *****************
  5141 ;; Defined at:
  5142 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  c               2    0[COMRAM] int 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  2    0[COMRAM] int 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5156 ;;      Params:         2       0       0       0       0       0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5158 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5159 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5160 ;;Total ram usage:        6 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_efgtoa
  5166 ;;		_vfpfcnvrt
  5167 ;;		_tolower
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text17
  5172  003ACC                     __ptext17:
  5173                           	callstack 0
  5174  003ACC                     _isupper:
  5175                           	callstack 25
  5176  003ACC  0EBF               	movlw	191
  5177  003ACE  6E03               	movwf	??_isupper^0,c
  5178  003AD0  0EFF               	movlw	255
  5179  003AD2  6E04               	movwf	(??_isupper+1)^0,c
  5180  003AD4  C001  F005         	movff	isupper@c,??_isupper+2
  5181  003AD8  C002  F006         	movff	isupper@c+1,??_isupper+3
  5182  003ADC  5003               	movf	??_isupper^0,w,c
  5183  003ADE  2605               	addwf	(??_isupper+2)^0,f,c
  5184  003AE0  5004               	movf	(??_isupper+1)^0,w,c
  5185  003AE2  2206               	addwfc	(??_isupper+3)^0,f,c
  5186  003AE4  5006               	movf	(??_isupper+3)^0,w,c
  5187  003AE6  E10A               	bnz	u3170
  5188  003AE8  0E1A               	movlw	26
  5189  003AEA  5C05               	subwf	(??_isupper+2)^0,w,c
  5190  003AEC  A0D8               	btfss	status,0,c
  5191  003AEE  EF7B  F01D         	goto	u3171
  5192  003AF2  EF7E  F01D         	goto	u3170
  5193  003AF6                     u3171:
  5194  003AF6  0E01               	movlw	1
  5195  003AF8  EF7F  F01D         	goto	u3180
  5196  003AFC                     u3170:
  5197  003AFC  0E00               	movlw	0
  5198  003AFE                     u3180:
  5199  003AFE  6E01               	movwf	?_isupper^0,c
  5200  003B00  6A02               	clrf	(?_isupper+1)^0,c
  5201  003B02  0012               	return		;funcret
  5202  003B04                     __end_of_isupper:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function _strcpy *****************
  5206 ;; Defined at:
  5207 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5210 ;;		 -> dbuf(80), 
  5211 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5212 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5213 ;;		 -> dbuf(80), 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  d               2    8[COMRAM] PTR unsigned char 
  5216 ;;		 -> dbuf(80), 
  5217 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5218 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  5219 ;;		 -> dbuf(80), 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2    0[COMRAM] PTR unsigned char 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5229 ;;      Params:         4       0       0       0       0       0       0       0       0
  5230 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5231 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5232 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5233 ;;Total ram usage:       10 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_efgtoa
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text18
  5243  003820                     __ptext18:
  5244                           	callstack 0
  5245  003820                     _strcpy:
  5246                           	callstack 25
  5247  003820  C003  F007         	movff	strcpy@src,strcpy@s
  5248  003824  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5249  003828  C001  F009         	movff	strcpy@dest,strcpy@d
  5250  00382C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5251  003830                     l3632:
  5252  003830  5007               	movf	strcpy@s^0,w,c
  5253  003832  6E05               	movwf	??_strcpy^0,c
  5254  003834  5008               	movf	(strcpy@s+1)^0,w,c
  5255  003836  6E06               	movwf	(??_strcpy+1)^0,c
  5256  003838  4A07               	infsnz	strcpy@s^0,f,c
  5257  00383A  2A08               	incf	(strcpy@s+1)^0,f,c
  5258  00383C  C005  FFF6         	movff	??_strcpy,tblptrl
  5259  003840  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5260  003844  6AF8               	clrf	tblptru,c
  5261  003846  C009  FFD9         	movff	strcpy@d,fsr2l
  5262  00384A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5263  00384E  4A09               	infsnz	strcpy@d^0,f,c
  5264  003850  2A0A               	incf	(strcpy@d+1)^0,f,c
  5265  003852  0E07               	movlw	(high __ramtop+-1)
  5266  003854  64F7               	cpfsgt	tblptrh,c
  5267  003856  D003               	bra	u4007
  5268  003858  0008               	tblrd		*
  5269  00385A  50F5               	movf	tablat,w,c
  5270  00385C  D005               	bra	u4000
  5271  00385E                     u4007:
  5272  00385E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5273  003862  CFF7 FFE2          	movff	tblptrh,fsr1h
  5274  003866  50E7               	movf	indf1,w,c
  5275  003868                     u4000:
  5276  003868  6EDF               	movwf	indf2,c
  5277  00386A  50DF               	movf	indf2,w,c
  5278  00386C  A4D8               	btfss	status,2,c
  5279  00386E  EF3B  F01C         	goto	u4011
  5280  003872  EF3D  F01C         	goto	u4010
  5281  003876                     u4011:
  5282  003876  EF18  F01C         	goto	l3632
  5283  00387A                     u4010:
  5284  00387A  0012               	return		;funcret
  5285  00387C                     __end_of_strcpy:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function _pad *****************
  5289 ;; Defined at:
  5290 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5293 ;;		 -> sprintf@f(6), 
  5294 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5295 ;;		 -> dbuf(80), 
  5296 ;;  p               2   20[COMRAM] int 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  w               2   25[COMRAM] int 
  5299 ;;  i               2   23[COMRAM] int 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  2   16[COMRAM] int 
  5302 ;; Registers used:
  5303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5309 ;;      Params:         6       0       0       0       0       0       0       0       0
  5310 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5311 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5312 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5313 ;;Total ram usage:       11 bytes
  5314 ;; Hardware stack levels used: 1
  5315 ;; Hardware stack levels required when called: 3
  5316 ;; This function calls:
  5317 ;;		_fputc
  5318 ;;		_fputs
  5319 ;;		_strlen
  5320 ;; This function is called by:
  5321 ;;		_efgtoa
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text19
  5326  0032E0                     __ptext19:
  5327                           	callstack 0
  5328  0032E0                     _pad:
  5329                           	callstack 22
  5330  0032E0                     
  5331                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5332  0032E0  0100               	movlb	0	; () banked
  5333  0032E2  A1BF               	btfss	_flags& (0+255),0,b
  5334  0032E4  EF76  F019         	goto	u3891
  5335  0032E8  EF78  F019         	goto	u3890
  5336  0032EC                     u3891:
  5337  0032EC  EF82  F019         	goto	l3590
  5338  0032F0                     u3890:
  5339  0032F0                     
  5340                           ; BSR set to: 0
  5341                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5342  0032F0  C013  F00A         	movff	pad@buf,fputs@s
  5343  0032F4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5344  0032F8  C011  F00C         	movff	pad@fp,fputs@fp
  5345  0032FC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5346  003300  EC03  F01D         	call	_fputs	;wreg free
  5347  003304                     l3590:
  5348                           
  5349                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5350  003304  BE16               	btfsc	(pad@p+1)^0,7,c
  5351  003306  EF87  F019         	goto	u3901
  5352  00330A  EF89  F019         	goto	u3900
  5353  00330E                     u3901:
  5354  00330E  EF8F  F019         	goto	l3594
  5355  003312                     u3900:
  5356  003312  C015  F01A         	movff	pad@p,pad@w
  5357  003316  C016  F01B         	movff	pad@p+1,pad@w+1
  5358  00331A  EF93  F019         	goto	l967
  5359  00331E                     l3594:
  5360  00331E  0E00               	movlw	0
  5361  003320  6E1B               	movwf	(pad@w+1)^0,c
  5362  003322  0E00               	movlw	0
  5363  003324  6E1A               	movwf	pad@w^0,c
  5364  003326                     l967:
  5365                           
  5366                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5367  003326  0E00               	movlw	0
  5368  003328  6E19               	movwf	(pad@i+1)^0,c
  5369  00332A  0E00               	movlw	0
  5370  00332C  6E18               	movwf	pad@i^0,c
  5371                           
  5372                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5373  00332E  EFA5  F019         	goto	l3600
  5374  003332                     l3596:
  5375                           
  5376                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5377  003332  0E00               	movlw	0
  5378  003334  6E02               	movwf	(fputc@c+1)^0,c
  5379  003336  0E20               	movlw	32
  5380  003338  6E01               	movwf	fputc@c^0,c
  5381  00333A  C011  F003         	movff	pad@fp,fputc@fp
  5382  00333E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5383  003342  EC0B  F019         	call	_fputc	;wreg free
  5384  003346                     
  5385                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5386  003346  4A18               	infsnz	pad@i^0,f,c
  5387  003348  2A19               	incf	(pad@i+1)^0,f,c
  5388  00334A                     l3600:
  5389                           
  5390                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5391  00334A  501A               	movf	pad@w^0,w,c
  5392  00334C  5C18               	subwf	pad@i^0,w,c
  5393  00334E  5019               	movf	(pad@i+1)^0,w,c
  5394  003350  0A80               	xorlw	128
  5395  003352  6E17               	movwf	??_pad^0,c
  5396  003354  501B               	movf	(pad@w+1)^0,w,c
  5397  003356  0A80               	xorlw	128
  5398  003358  5817               	subwfb	??_pad^0,w,c
  5399  00335A  A0D8               	btfss	status,0,c
  5400  00335C  EFB2  F019         	goto	u3911
  5401  003360  EFB4  F019         	goto	u3910
  5402  003364                     u3911:
  5403  003364  EF99  F019         	goto	l3596
  5404  003368                     u3910:
  5405  003368                     
  5406                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5407  003368  0100               	movlb	0	; () banked
  5408  00336A  B1BF               	btfsc	_flags& (0+255),0,b
  5409  00336C  EFBA  F019         	goto	u3921
  5410  003370  EFBC  F019         	goto	u3920
  5411  003374                     u3921:
  5412  003374  EFC6  F019         	goto	l3604
  5413  003378                     u3920:
  5414  003378                     
  5415                           ; BSR set to: 0
  5416                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5417  003378  C013  F00A         	movff	pad@buf,fputs@s
  5418  00337C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5419  003380  C011  F00C         	movff	pad@fp,fputs@fp
  5420  003384  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5421  003388  EC03  F01D         	call	_fputs	;wreg free
  5422  00338C                     l3604:
  5423                           
  5424                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5425  00338C  C013  F001         	movff	pad@buf,strlen@s
  5426  003390  C014  F002         	movff	pad@buf+1,strlen@s+1
  5427  003394  ECF0  F01D         	call	_strlen	;wreg free
  5428  003398  501A               	movf	pad@w^0,w,c
  5429  00339A  2401               	addwf	?_strlen^0,w,c
  5430  00339C  6E11               	movwf	?_pad^0,c
  5431  00339E  501B               	movf	(pad@w+1)^0,w,c
  5432  0033A0  2002               	addwfc	(?_strlen+1)^0,w,c
  5433  0033A2  6E12               	movwf	(?_pad+1)^0,c
  5434  0033A4  0012               	return		;funcret
  5435  0033A6                     __end_of_pad:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _strlen *****************
  5439 ;; Defined at:
  5440 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5443 ;;		 -> dbuf(80), 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5446 ;;		 -> dbuf(80), 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  2    0[COMRAM] unsigned int 
  5449 ;; Registers used:
  5450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5456 ;;      Params:         2       0       0       0       0       0       0       0       0
  5457 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5459 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5460 ;;Total ram usage:        4 bytes
  5461 ;; Hardware stack levels used: 1
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_pad
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text20
  5470  003BE0                     __ptext20:
  5471                           	callstack 0
  5472  003BE0                     _strlen:
  5473                           	callstack 24
  5474  003BE0  C001  F003         	movff	strlen@s,strlen@a
  5475  003BE4  C002  F004         	movff	strlen@s+1,strlen@a+1
  5476  003BE8  EFF8  F01D         	goto	l3126
  5477  003BEC                     l3124:
  5478  003BEC  4A01               	infsnz	strlen@s^0,f,c
  5479  003BEE  2A02               	incf	(strlen@s+1)^0,f,c
  5480  003BF0                     l3126:
  5481  003BF0  C001  FFD9         	movff	strlen@s,fsr2l
  5482  003BF4  C002  FFDA         	movff	strlen@s+1,fsr2h
  5483  003BF8  50DF               	movf	indf2,w,c
  5484  003BFA  A4D8               	btfss	status,2,c
  5485  003BFC  EF02  F01E         	goto	u3161
  5486  003C00  EF04  F01E         	goto	u3160
  5487  003C04                     u3161:
  5488  003C04  EFF6  F01D         	goto	l3124
  5489  003C08                     u3160:
  5490  003C08  5003               	movf	strlen@a^0,w,c
  5491  003C0A  5C01               	subwf	strlen@s^0,w,c
  5492  003C0C  6E01               	movwf	?_strlen^0,c
  5493  003C0E  5004               	movf	(strlen@a+1)^0,w,c
  5494  003C10  5802               	subwfb	(strlen@s+1)^0,w,c
  5495  003C12  6E02               	movwf	(?_strlen+1)^0,c
  5496  003C14  0012               	return		;funcret
  5497  003C16                     __end_of_strlen:
  5498                           	callstack 0
  5499                           
  5500 ;; *************** function _fputs *****************
  5501 ;; Defined at:
  5502 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5505 ;;		 -> dbuf(80), 
  5506 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5507 ;;		 -> sprintf@f(6), 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  i               2   14[COMRAM] int 
  5510 ;;  c               1   13[COMRAM] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  2    9[COMRAM] int 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5520 ;;      Params:         4       0       0       0       0       0       0       0       0
  5521 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5523 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5524 ;;Total ram usage:        7 bytes
  5525 ;; Hardware stack levels used: 1
  5526 ;; Hardware stack levels required when called: 2
  5527 ;; This function calls:
  5528 ;;		_fputc
  5529 ;; This function is called by:
  5530 ;;		_pad
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text21
  5535  003A06                     __ptext21:
  5536                           	callstack 0
  5537  003A06                     _fputs:
  5538                           	callstack 22
  5539  003A06  0E00               	movlw	0
  5540  003A08  6E10               	movwf	(fputs@i+1)^0,c
  5541  003A0A  0E00               	movlw	0
  5542  003A0C  6E0F               	movwf	fputs@i^0,c
  5543  003A0E  EF14  F01D         	goto	l3120
  5544  003A12                     l3116:
  5545  003A12  C00E  F001         	movff	fputs@c,fputc@c
  5546  003A16  6A02               	clrf	(fputc@c+1)^0,c
  5547  003A18  C00C  F003         	movff	fputs@fp,fputc@fp
  5548  003A1C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5549  003A20  EC0B  F019         	call	_fputc	;wreg free
  5550  003A24  4A0F               	infsnz	fputs@i^0,f,c
  5551  003A26  2A10               	incf	(fputs@i+1)^0,f,c
  5552  003A28                     l3120:
  5553  003A28  500F               	movf	fputs@i^0,w,c
  5554  003A2A  240A               	addwf	fputs@s^0,w,c
  5555  003A2C  6ED9               	movwf	fsr2l,c
  5556  003A2E  5010               	movf	(fputs@i+1)^0,w,c
  5557  003A30  200B               	addwfc	(fputs@s+1)^0,w,c
  5558  003A32  6EDA               	movwf	fsr2h,c
  5559  003A34  50DF               	movf	indf2,w,c
  5560  003A36  6E0E               	movwf	fputs@c^0,c
  5561  003A38  500E               	movf	fputs@c^0,w,c
  5562  003A3A  A4D8               	btfss	status,2,c
  5563  003A3C  EF22  F01D         	goto	u3151
  5564  003A40  EF24  F01D         	goto	u3150
  5565  003A44                     u3151:
  5566  003A44  EF09  F01D         	goto	l3116
  5567  003A48                     u3150:
  5568  003A48  0012               	return		;funcret
  5569  003A4A                     __end_of_fputs:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function _fputc *****************
  5573 ;; Defined at:
  5574 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  c               2    0[COMRAM] int 
  5577 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5578 ;;		 -> sprintf@f(6), 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  2    0[COMRAM] int 
  5583 ;; Registers used:
  5584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5590 ;;      Params:         4       0       0       0       0       0       0       0       0
  5591 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5592 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5593 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5594 ;;Total ram usage:        9 bytes
  5595 ;; Hardware stack levels used: 1
  5596 ;; Hardware stack levels required when called: 1
  5597 ;; This function calls:
  5598 ;;		_putch
  5599 ;; This function is called by:
  5600 ;;		_pad
  5601 ;;		_vfpfcnvrt
  5602 ;;		_fputs
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text22
  5607  003216                     __ptext22:
  5608                           	callstack 0
  5609  003216                     _fputc:
  5610                           	callstack 25
  5611  003216  5003               	movf	fputc@fp^0,w,c
  5612  003218  1004               	iorwf	(fputc@fp+1)^0,w,c
  5613  00321A  B4D8               	btfsc	status,2,c
  5614  00321C  EF12  F019         	goto	u2721
  5615  003220  EF14  F019         	goto	u2720
  5616  003224                     u2721:
  5617  003224  EF1D  F019         	goto	l2902
  5618  003228                     u2720:
  5619  003228  5003               	movf	fputc@fp^0,w,c
  5620  00322A  1004               	iorwf	(fputc@fp+1)^0,w,c
  5621  00322C  A4D8               	btfss	status,2,c
  5622  00322E  EF1B  F019         	goto	u2731
  5623  003232  EF1D  F019         	goto	u2730
  5624  003236                     u2731:
  5625  003236  EF22  F019         	goto	l2904
  5626  00323A                     u2730:
  5627  00323A                     l2902:
  5628  00323A  5001               	movf	fputc@c^0,w,c
  5629  00323C  EC8F  F01E         	call	_putch
  5630  003240  EF6F  F019         	goto	l1183
  5631  003244                     l2904:
  5632  003244  EE20 F004          	lfsr	2,4
  5633  003248  5003               	movf	fputc@fp^0,w,c
  5634  00324A  26D9               	addwf	fsr2l,f,c
  5635  00324C  5004               	movf	(fputc@fp+1)^0,w,c
  5636  00324E  22DA               	addwfc	fsr2h,f,c
  5637  003250  50DE               	movf	postinc2,w,c
  5638  003252  10DE               	iorwf	postinc2,w,c
  5639  003254  B4D8               	btfsc	status,2,c
  5640  003256  EF2F  F019         	goto	u2741
  5641  00325A  EF31  F019         	goto	u2740
  5642  00325E                     u2741:
  5643  00325E  EF4C  F019         	goto	l2908
  5644  003262                     u2740:
  5645  003262  EE20 F004          	lfsr	2,4
  5646  003266  5003               	movf	fputc@fp^0,w,c
  5647  003268  26D9               	addwf	fsr2l,f,c
  5648  00326A  5004               	movf	(fputc@fp+1)^0,w,c
  5649  00326C  22DA               	addwfc	fsr2h,f,c
  5650  00326E  EE10 F002          	lfsr	1,2
  5651  003272  5003               	movf	fputc@fp^0,w,c
  5652  003274  26E1               	addwf	fsr1l,f,c
  5653  003276  5004               	movf	(fputc@fp+1)^0,w,c
  5654  003278  22E2               	addwfc	fsr1h,f,c
  5655  00327A  50DE               	movf	postinc2,w,c
  5656  00327C  5CE6               	subwf	postinc1,w,c
  5657  00327E  50E6               	movf	postinc1,w,c
  5658  003280  0A80               	xorlw	128
  5659  003282  6E09               	movwf	(??_fputc+4)^0,c
  5660  003284  50DE               	movf	postinc2,w,c
  5661  003286  0A80               	xorlw	128
  5662  003288  5809               	subwfb	(??_fputc+4)^0,w,c
  5663  00328A  B0D8               	btfsc	status,0,c
  5664  00328C  EF4A  F019         	goto	u2751
  5665  003290  EF4C  F019         	goto	u2750
  5666  003294                     u2751:
  5667  003294  EF6F  F019         	goto	l1183
  5668  003298                     u2750:
  5669  003298                     l2908:
  5670  003298  EE20 F002          	lfsr	2,2
  5671  00329C  5003               	movf	fputc@fp^0,w,c
  5672  00329E  26D9               	addwf	fsr2l,f,c
  5673  0032A0  5004               	movf	(fputc@fp+1)^0,w,c
  5674  0032A2  22DA               	addwfc	fsr2h,f,c
  5675  0032A4  CFDE F005          	movff	postinc2,??_fputc
  5676  0032A8  CFDD F006          	movff	postdec2,??_fputc+1
  5677  0032AC  C003  FFD9         	movff	fputc@fp,fsr2l
  5678  0032B0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5679  0032B4  CFDE F007          	movff	postinc2,??_fputc+2
  5680  0032B8  CFDD F008          	movff	postdec2,??_fputc+3
  5681  0032BC  5005               	movf	??_fputc^0,w,c
  5682  0032BE  2407               	addwf	(??_fputc+2)^0,w,c
  5683  0032C0  6ED9               	movwf	fsr2l,c
  5684  0032C2  5006               	movf	(??_fputc+1)^0,w,c
  5685  0032C4  2008               	addwfc	(??_fputc+3)^0,w,c
  5686  0032C6  6EDA               	movwf	fsr2h,c
  5687  0032C8  C001  FFDF         	movff	fputc@c,indf2
  5688  0032CC  EE20 F002          	lfsr	2,2
  5689  0032D0  5003               	movf	fputc@fp^0,w,c
  5690  0032D2  26D9               	addwf	fsr2l,f,c
  5691  0032D4  5004               	movf	(fputc@fp+1)^0,w,c
  5692  0032D6  22DA               	addwfc	fsr2h,f,c
  5693  0032D8  2ADE               	incf	postinc2,f,c
  5694  0032DA  0E00               	movlw	0
  5695  0032DC  22DD               	addwfc	postdec2,f,c
  5696  0032DE                     l1183:
  5697  0032DE  0012               	return		;funcret
  5698  0032E0                     __end_of_fputc:
  5699                           	callstack 0
  5700                           
  5701 ;; *************** function _putch *****************
  5702 ;; Defined at:
  5703 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  c               1    wreg     unsigned char 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  c               1    0[COMRAM] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5720 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5721 ;;Total ram usage:        0 bytes
  5722 ;; Hardware stack levels used: 1
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_fputc
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text23
  5731  003D1E                     __ptext23:
  5732                           	callstack 0
  5733  003D1E                     _putch:
  5734                           	callstack 25
  5735  003D1E  0012               	return		;funcret
  5736  003D20                     __end_of_putch:
  5737                           	callstack 0
  5738                           
  5739 ;; *************** function _floorf *****************
  5740 ;; Defined at:
  5741 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  x               4   25[COMRAM] float 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  u               4   41[COMRAM] struct .
  5746 ;;  m               4   35[COMRAM] unsigned long 
  5747 ;;  e               2   39[COMRAM] int 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  4   25[COMRAM] float 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5757 ;;      Params:         4       0       0       0       0       0       0       0       0
  5758 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5759 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5760 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5761 ;;Total ram usage:       20 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_efgtoa
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text24
  5771  0027B4                     __ptext24:
  5772                           	callstack 0
  5773  0027B4                     _floorf:
  5774                           	callstack 25
  5775  0027B4  C0AD  F02A         	movff	floorf@F527,floorf@u
  5776  0027B8  C0AE  F02B         	movff	floorf@F527+1,floorf@u+1
  5777  0027BC  C0AF  F02C         	movff	floorf@F527+2,floorf@u+2
  5778  0027C0  C0B0  F02D         	movff	floorf@F527+3,floorf@u+3
  5779  0027C4  C01A  F02A         	movff	floorf@x,floorf@u
  5780  0027C8  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5781  0027CC  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5782  0027D0  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5783  0027D4  0E81               	movlw	129
  5784  0027D6  6E1E               	movwf	??_floorf^0,c
  5785  0027D8  0EFF               	movlw	255
  5786  0027DA  6E1F               	movwf	(??_floorf+1)^0,c
  5787  0027DC  C02A  F020         	movff	floorf@u,??_floorf+2
  5788  0027E0  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5789  0027E4  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5790  0027E8  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5791  0027EC  0E18               	movlw	24
  5792  0027EE  EFFE  F013         	goto	u4050
  5793  0027F2                     u4055:
  5794  0027F2  90D8               	bcf	status,0,c
  5795  0027F4  3223               	rrcf	(??_floorf+5)^0,f,c
  5796  0027F6  3222               	rrcf	(??_floorf+4)^0,f,c
  5797  0027F8  3221               	rrcf	(??_floorf+3)^0,f,c
  5798  0027FA  3220               	rrcf	(??_floorf+2)^0,f,c
  5799  0027FC                     u4050:
  5800  0027FC  2EE8               	decfsz	wreg,f,c
  5801  0027FE  EFF9  F013         	goto	u4055
  5802  002802  5020               	movf	(??_floorf+2)^0,w,c
  5803  002804  241E               	addwf	??_floorf^0,w,c
  5804  002806  6E28               	movwf	floorf@e^0,c
  5805  002808  0E00               	movlw	0
  5806  00280A  201F               	addwfc	(??_floorf+1)^0,w,c
  5807  00280C  6E29               	movwf	(floorf@e+1)^0,c
  5808  00280E  BE29               	btfsc	(floorf@e+1)^0,7,c
  5809  002810  EF13  F014         	goto	u4061
  5810  002814  5029               	movf	(floorf@e+1)^0,w,c
  5811  002816  E109               	bnz	u4060
  5812  002818  0E17               	movlw	23
  5813  00281A  5C28               	subwf	floorf@e^0,w,c
  5814  00281C  A0D8               	btfss	status,0,c
  5815  00281E  EF13  F014         	goto	u4061
  5816  002822  EF15  F014         	goto	u4060
  5817  002826                     u4061:
  5818  002826  EF1F  F014         	goto	l3650
  5819  00282A                     u4060:
  5820  00282A                     l3648:
  5821  00282A  C01A  F01A         	movff	floorf@x,?_floorf
  5822  00282E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5823  002832  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5824  002836  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5825  00283A  EFE2  F014         	goto	l1144
  5826  00283E                     l3650:
  5827  00283E  BE29               	btfsc	(floorf@e+1)^0,7,c
  5828  002840  EF24  F014         	goto	u4071
  5829  002844  EF26  F014         	goto	u4070
  5830  002848                     u4071:
  5831  002848  EF96  F014         	goto	l3660
  5832  00284C                     u4070:
  5833  00284C  C028  F01E         	movff	floorf@e,??_floorf
  5834  002850  0EFF               	movlw	255
  5835  002852  6E1F               	movwf	(??_floorf+1)^0,c
  5836  002854  0EFF               	movlw	255
  5837  002856  6E20               	movwf	(??_floorf+2)^0,c
  5838  002858  0E7F               	movlw	127
  5839  00285A  6E21               	movwf	(??_floorf+3)^0,c
  5840  00285C  0E00               	movlw	0
  5841  00285E  6E22               	movwf	(??_floorf+4)^0,c
  5842  002860                     u4085:
  5843  002860  661E               	tstfsz	??_floorf^0,c
  5844  002862  EF35  F014         	goto	u4086
  5845  002866  EF3D  F014         	goto	u4087
  5846  00286A                     u4086:
  5847  00286A  3422               	rlcf	(??_floorf+4)^0,w,c
  5848  00286C  3222               	rrcf	(??_floorf+4)^0,f,c
  5849  00286E  3221               	rrcf	(??_floorf+3)^0,f,c
  5850  002870  3220               	rrcf	(??_floorf+2)^0,f,c
  5851  002872  321F               	rrcf	(??_floorf+1)^0,f,c
  5852  002874  2E1E               	decfsz	??_floorf^0,f,c
  5853  002876  EF30  F014         	goto	u4085
  5854  00287A                     u4087:
  5855  00287A  C01F  F024         	movff	??_floorf+1,floorf@m
  5856  00287E  C020  F025         	movff	??_floorf+2,floorf@m+1
  5857  002882  C021  F026         	movff	??_floorf+3,floorf@m+2
  5858  002886  C022  F027         	movff	??_floorf+4,floorf@m+3
  5859  00288A  5024               	movf	floorf@m^0,w,c
  5860  00288C  142A               	andwf	floorf@u^0,w,c
  5861  00288E  6E1E               	movwf	??_floorf^0,c
  5862  002890  5025               	movf	(floorf@m+1)^0,w,c
  5863  002892  142B               	andwf	(floorf@u+1)^0,w,c
  5864  002894  6E1F               	movwf	(??_floorf+1)^0,c
  5865  002896  5026               	movf	(floorf@m+2)^0,w,c
  5866  002898  142C               	andwf	(floorf@u+2)^0,w,c
  5867  00289A  6E20               	movwf	(??_floorf+2)^0,c
  5868  00289C  5027               	movf	(floorf@m+3)^0,w,c
  5869  00289E  142D               	andwf	(floorf@u+3)^0,w,c
  5870  0028A0  6E21               	movwf	(??_floorf+3)^0,c
  5871  0028A2  501E               	movf	??_floorf^0,w,c
  5872  0028A4  101F               	iorwf	(??_floorf+1)^0,w,c
  5873  0028A6  1020               	iorwf	(??_floorf+2)^0,w,c
  5874  0028A8  1021               	iorwf	(??_floorf+3)^0,w,c
  5875  0028AA  A4D8               	btfss	status,2,c
  5876  0028AC  EF5A  F014         	goto	u4091
  5877  0028B0  EF5C  F014         	goto	u4090
  5878  0028B4                     u4091:
  5879  0028B4  EF5E  F014         	goto	l3656
  5880  0028B8                     u4090:
  5881  0028B8  EF15  F014         	goto	l3648
  5882  0028BC                     l3656:
  5883  0028BC  C02A  F01E         	movff	floorf@u,??_floorf
  5884  0028C0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5885  0028C4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5886  0028C8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5887  0028CC  0E20               	movlw	32
  5888  0028CE  EF6E  F014         	goto	u4100
  5889  0028D2                     u4105:
  5890  0028D2  90D8               	bcf	status,0,c
  5891  0028D4  3221               	rrcf	(??_floorf+3)^0,f,c
  5892  0028D6  3220               	rrcf	(??_floorf+2)^0,f,c
  5893  0028D8  321F               	rrcf	(??_floorf+1)^0,f,c
  5894  0028DA  321E               	rrcf	??_floorf^0,f,c
  5895  0028DC                     u4100:
  5896  0028DC  2EE8               	decfsz	wreg,f,c
  5897  0028DE  EF69  F014         	goto	u4105
  5898  0028E2  501E               	movf	??_floorf^0,w,c
  5899  0028E4  101F               	iorwf	(??_floorf+1)^0,w,c
  5900  0028E6  1020               	iorwf	(??_floorf+2)^0,w,c
  5901  0028E8  1021               	iorwf	(??_floorf+3)^0,w,c
  5902  0028EA  B4D8               	btfsc	status,2,c
  5903  0028EC  EF7A  F014         	goto	u4111
  5904  0028F0  EF7C  F014         	goto	u4110
  5905  0028F4                     u4111:
  5906  0028F4  EF84  F014         	goto	l1147
  5907  0028F8                     u4110:
  5908  0028F8  5024               	movf	floorf@m^0,w,c
  5909  0028FA  262A               	addwf	floorf@u^0,f,c
  5910  0028FC  5025               	movf	(floorf@m+1)^0,w,c
  5911  0028FE  222B               	addwfc	(floorf@u+1)^0,f,c
  5912  002900  5026               	movf	(floorf@m+2)^0,w,c
  5913  002902  222C               	addwfc	(floorf@u+2)^0,f,c
  5914  002904  5027               	movf	(floorf@m+3)^0,w,c
  5915  002906  222D               	addwfc	(floorf@u+3)^0,f,c
  5916  002908                     l1147:
  5917  002908  1C24               	comf	floorf@m^0,w,c
  5918  00290A  6E1E               	movwf	??_floorf^0,c
  5919  00290C  1C25               	comf	(floorf@m+1)^0,w,c
  5920  00290E  6E1F               	movwf	(??_floorf+1)^0,c
  5921  002910  1C26               	comf	(floorf@m+2)^0,w,c
  5922  002912  6E20               	movwf	(??_floorf+2)^0,c
  5923  002914  1C27               	comf	(floorf@m+3)^0,w,c
  5924  002916  6E21               	movwf	(??_floorf+3)^0,c
  5925  002918  501E               	movf	??_floorf^0,w,c
  5926  00291A  162A               	andwf	floorf@u^0,f,c
  5927  00291C  501F               	movf	(??_floorf+1)^0,w,c
  5928  00291E  162B               	andwf	(floorf@u+1)^0,f,c
  5929  002920  5020               	movf	(??_floorf+2)^0,w,c
  5930  002922  162C               	andwf	(floorf@u+2)^0,f,c
  5931  002924  5021               	movf	(??_floorf+3)^0,w,c
  5932  002926  162D               	andwf	(floorf@u+3)^0,f,c
  5933  002928  EFDA  F014         	goto	l3668
  5934  00292C                     l3660:
  5935  00292C  C02A  F01E         	movff	floorf@u,??_floorf
  5936  002930  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5937  002934  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5938  002938  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5939  00293C  0E20               	movlw	32
  5940  00293E  EFA6  F014         	goto	u4120
  5941  002942                     u4125:
  5942  002942  90D8               	bcf	status,0,c
  5943  002944  3221               	rrcf	(??_floorf+3)^0,f,c
  5944  002946  3220               	rrcf	(??_floorf+2)^0,f,c
  5945  002948  321F               	rrcf	(??_floorf+1)^0,f,c
  5946  00294A  321E               	rrcf	??_floorf^0,f,c
  5947  00294C                     u4120:
  5948  00294C  2EE8               	decfsz	wreg,f,c
  5949  00294E  EFA1  F014         	goto	u4125
  5950  002952  501E               	movf	??_floorf^0,w,c
  5951  002954  101F               	iorwf	(??_floorf+1)^0,w,c
  5952  002956  1020               	iorwf	(??_floorf+2)^0,w,c
  5953  002958  1021               	iorwf	(??_floorf+3)^0,w,c
  5954  00295A  A4D8               	btfss	status,2,c
  5955  00295C  EFB2  F014         	goto	u4131
  5956  002960  EFB4  F014         	goto	u4130
  5957  002964                     u4131:
  5958  002964  EFBE  F014         	goto	l3664
  5959  002968                     u4130:
  5960  002968  0E00               	movlw	0
  5961  00296A  6E2A               	movwf	floorf@u^0,c
  5962  00296C  0E00               	movlw	0
  5963  00296E  6E2B               	movwf	(floorf@u+1)^0,c
  5964  002970  0E00               	movlw	0
  5965  002972  6E2C               	movwf	(floorf@u+2)^0,c
  5966  002974  0E00               	movlw	0
  5967  002976  6E2D               	movwf	(floorf@u+3)^0,c
  5968  002978  EFDA  F014         	goto	l3668
  5969  00297C                     l3664:
  5970  00297C  90D8               	bcf	status,0,c
  5971  00297E  342A               	rlcf	floorf@u^0,w,c
  5972  002980  6E1E               	movwf	??_floorf^0,c
  5973  002982  342B               	rlcf	(floorf@u+1)^0,w,c
  5974  002984  6E1F               	movwf	(??_floorf+1)^0,c
  5975  002986  342C               	rlcf	(floorf@u+2)^0,w,c
  5976  002988  6E20               	movwf	(??_floorf+2)^0,c
  5977  00298A  342D               	rlcf	(floorf@u+3)^0,w,c
  5978  00298C  6E21               	movwf	(??_floorf+3)^0,c
  5979  00298E  501E               	movf	??_floorf^0,w,c
  5980  002990  101F               	iorwf	(??_floorf+1)^0,w,c
  5981  002992  1020               	iorwf	(??_floorf+2)^0,w,c
  5982  002994  1021               	iorwf	(??_floorf+3)^0,w,c
  5983  002996  B4D8               	btfsc	status,2,c
  5984  002998  EFD0  F014         	goto	u4141
  5985  00299C  EFD2  F014         	goto	u4140
  5986  0029A0                     u4141:
  5987  0029A0  EFDA  F014         	goto	l3668
  5988  0029A4                     u4140:
  5989  0029A4  0E00               	movlw	0
  5990  0029A6  6E2A               	movwf	floorf@u^0,c
  5991  0029A8  0E00               	movlw	0
  5992  0029AA  6E2B               	movwf	(floorf@u+1)^0,c
  5993  0029AC  0E80               	movlw	128
  5994  0029AE  6E2C               	movwf	(floorf@u+2)^0,c
  5995  0029B0  0EBF               	movlw	191
  5996  0029B2  6E2D               	movwf	(floorf@u+3)^0,c
  5997  0029B4                     l3668:
  5998  0029B4  C02A  F01A         	movff	floorf@u,?_floorf
  5999  0029B8  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6000  0029BC  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6001  0029C0  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6002  0029C4                     l1144:
  6003  0029C4  0012               	return		;funcret
  6004  0029C6                     __end_of_floorf:
  6005                           	callstack 0
  6006                           
  6007 ;; *************** function ___fpclassifyf *****************
  6008 ;; Defined at:
  6009 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  x               4    0[COMRAM] float 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  u               4   10[COMRAM] struct .
  6014 ;;  e               2    8[COMRAM] int 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  2    0[COMRAM] int 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6024 ;;      Params:         4       0       0       0       0       0       0       0       0
  6025 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6026 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6027 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6028 ;;Total ram usage:       14 bytes
  6029 ;; Hardware stack levels used: 1
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_efgtoa
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text25
  6038  003042                     __ptext25:
  6039                           	callstack 0
  6040  003042                     ___fpclassifyf:
  6041                           	callstack 25
  6042  003042  C0B1  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6043  003046  C0B2  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6044  00304A  C0B3  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6045  00304E  C0B4  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6046  003052  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6047  003056  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6048  00305A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6049  00305E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6050  003062  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6051  003066  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6052  00306A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6053  00306E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6054  003072  0E18               	movlw	24
  6055  003074  EF41  F018         	goto	u3930
  6056  003078                     u3935:
  6057  003078  90D8               	bcf	status,0,c
  6058  00307A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6059  00307C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6060  00307E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6061  003080  3205               	rrcf	??___fpclassifyf^0,f,c
  6062  003082                     u3930:
  6063  003082  2EE8               	decfsz	wreg,f,c
  6064  003084  EF3C  F018         	goto	u3935
  6065  003088  5005               	movf	??___fpclassifyf^0,w,c
  6066  00308A  6E09               	movwf	___fpclassifyf@e^0,c
  6067  00308C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6068  00308E  5009               	movf	___fpclassifyf@e^0,w,c
  6069  003090  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6070  003092  A4D8               	btfss	status,2,c
  6071  003094  EF4E  F018         	goto	u3941
  6072  003098  EF50  F018         	goto	u3940
  6073  00309C                     u3941:
  6074  00309C  EF70  F018         	goto	l3620
  6075  0030A0                     u3940:
  6076  0030A0  90D8               	bcf	status,0,c
  6077  0030A2  340B               	rlcf	___fpclassifyf@u^0,w,c
  6078  0030A4  6E05               	movwf	??___fpclassifyf^0,c
  6079  0030A6  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6080  0030A8  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6081  0030AA  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6082  0030AC  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6083  0030AE  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6084  0030B0  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6085  0030B2  5005               	movf	??___fpclassifyf^0,w,c
  6086  0030B4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6087  0030B6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6088  0030B8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6089  0030BA  A4D8               	btfss	status,2,c
  6090  0030BC  EF62  F018         	goto	u3951
  6091  0030C0  EF64  F018         	goto	u3950
  6092  0030C4                     u3951:
  6093  0030C4  EF6A  F018         	goto	l3616
  6094  0030C8                     u3950:
  6095  0030C8  0E00               	movlw	0
  6096  0030CA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6097  0030CC  0E02               	movlw	2
  6098  0030CE  6E01               	movwf	?___fpclassifyf^0,c
  6099  0030D0  EF9F  F018         	goto	l1106
  6100  0030D4                     l3616:
  6101  0030D4  0E00               	movlw	0
  6102  0030D6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6103  0030D8  0E03               	movlw	3
  6104  0030DA  6E01               	movwf	?___fpclassifyf^0,c
  6105  0030DC  EF9F  F018         	goto	l1106
  6106  0030E0                     l3620:
  6107  0030E0  2809               	incf	___fpclassifyf@e^0,w,c
  6108  0030E2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6109  0030E4  A4D8               	btfss	status,2,c
  6110  0030E6  EF77  F018         	goto	u3961
  6111  0030EA  EF79  F018         	goto	u3960
  6112  0030EE                     u3961:
  6113  0030EE  EF9B  F018         	goto	l3626
  6114  0030F2                     u3960:
  6115  0030F2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6116  0030F6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6117  0030FA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6118  0030FE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6119  003102  0E09               	movlw	9
  6120  003104                     u3975:
  6121  003104  90D8               	bcf	status,0,c
  6122  003106  3605               	rlcf	??___fpclassifyf^0,f,c
  6123  003108  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6124  00310A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6125  00310C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6126  00310E  2EE8               	decfsz	wreg,f,c
  6127  003110  EF82  F018         	goto	u3975
  6128  003114  5005               	movf	??___fpclassifyf^0,w,c
  6129  003116  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6130  003118  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6131  00311A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6132  00311C  B4D8               	btfsc	status,2,c
  6133  00311E  EF93  F018         	goto	u3981
  6134  003122  EF96  F018         	goto	u3980
  6135  003126                     u3981:
  6136  003126  0E01               	movlw	1
  6137  003128  EF97  F018         	goto	u3990
  6138  00312C                     u3980:
  6139  00312C  0E00               	movlw	0
  6140  00312E                     u3990:
  6141  00312E  6E01               	movwf	?___fpclassifyf^0,c
  6142  003130  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6143  003132  EF9F  F018         	goto	l1106
  6144  003136                     l3626:
  6145  003136  0E00               	movlw	0
  6146  003138  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6147  00313A  0E04               	movlw	4
  6148  00313C  6E01               	movwf	?___fpclassifyf^0,c
  6149  00313E                     l1106:
  6150  00313E  0012               	return		;funcret
  6151  003140                     __end_of___fpclassifyf:
  6152                           	callstack 0
  6153                           
  6154 ;; *************** function ___fltol *****************
  6155 ;; Defined at:
  6156 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  f1              4    0[COMRAM] int 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  exp1            1    9[COMRAM] unsigned char 
  6161 ;;  sign1           1    8[COMRAM] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  4    0[COMRAM] long 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6171 ;;      Params:         4       0       0       0       0       0       0       0       0
  6172 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6173 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6174 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6175 ;;Total ram usage:       10 bytes
  6176 ;; Hardware stack levels used: 1
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_efgtoa
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text26
  6185  002E38                     __ptext26:
  6186                           	callstack 0
  6187  002E38                     ___fltol:
  6188                           	callstack 25
  6189  002E38  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6190  002E3A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6191  002E3C  6E0A               	movwf	___fltol@exp1^0,c
  6192  002E3E  500A               	movf	___fltol@exp1^0,w,c
  6193  002E40  A4D8               	btfss	status,2,c
  6194  002E42  EF25  F017         	goto	u3821
  6195  002E46  EF27  F017         	goto	u3820
  6196  002E4A                     u3821:
  6197  002E4A  EF31  F017         	goto	l3548
  6198  002E4E                     u3820:
  6199  002E4E                     l3544:
  6200  002E4E  0E00               	movlw	0
  6201  002E50  6E01               	movwf	?___fltol^0,c
  6202  002E52  0E00               	movlw	0
  6203  002E54  6E02               	movwf	(?___fltol+1)^0,c
  6204  002E56  0E00               	movlw	0
  6205  002E58  6E03               	movwf	(?___fltol+2)^0,c
  6206  002E5A  0E00               	movlw	0
  6207  002E5C  6E04               	movwf	(?___fltol+3)^0,c
  6208  002E5E  EF9E  F017         	goto	l545
  6209  002E62                     l3548:
  6210  002E62  C001  F005         	movff	___fltol@f1,??___fltol
  6211  002E66  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6212  002E6A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6213  002E6E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6214  002E72  0E20               	movlw	32
  6215  002E74  EF41  F017         	goto	u3830
  6216  002E78                     u3835:
  6217  002E78  90D8               	bcf	status,0,c
  6218  002E7A  3208               	rrcf	(??___fltol+3)^0,f,c
  6219  002E7C  3207               	rrcf	(??___fltol+2)^0,f,c
  6220  002E7E  3206               	rrcf	(??___fltol+1)^0,f,c
  6221  002E80  3205               	rrcf	??___fltol^0,f,c
  6222  002E82                     u3830:
  6223  002E82  2EE8               	decfsz	wreg,f,c
  6224  002E84  EF3C  F017         	goto	u3835
  6225  002E88  5005               	movf	??___fltol^0,w,c
  6226  002E8A  6E09               	movwf	___fltol@sign1^0,c
  6227  002E8C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6228  002E8E  0EFF               	movlw	255
  6229  002E90  1601               	andwf	___fltol@f1^0,f,c
  6230  002E92  0EFF               	movlw	255
  6231  002E94  1602               	andwf	(___fltol@f1+1)^0,f,c
  6232  002E96  0EFF               	movlw	255
  6233  002E98  1603               	andwf	(___fltol@f1+2)^0,f,c
  6234  002E9A  0E00               	movlw	0
  6235  002E9C  1604               	andwf	(___fltol@f1+3)^0,f,c
  6236  002E9E  0E96               	movlw	150
  6237  002EA0  5E0A               	subwf	___fltol@exp1^0,f,c
  6238  002EA2  BE0A               	btfsc	___fltol@exp1^0,7,c
  6239  002EA4  EF58  F017         	goto	u3840
  6240  002EA8  EF56  F017         	goto	u3841
  6241  002EAC                     u3841:
  6242  002EAC  EF6E  F017         	goto	l3568
  6243  002EB0                     u3840:
  6244  002EB0  500A               	movf	___fltol@exp1^0,w,c
  6245  002EB2  0A80               	xorlw	128
  6246  002EB4  0F97               	addlw	151
  6247  002EB6  B0D8               	btfsc	status,0,c
  6248  002EB8  EF60  F017         	goto	u3851
  6249  002EBC  EF62  F017         	goto	u3850
  6250  002EC0                     u3851:
  6251  002EC0  EF64  F017         	goto	l3564
  6252  002EC4                     u3850:
  6253  002EC4  EF27  F017         	goto	l3544
  6254  002EC8                     l3564:
  6255  002EC8  90D8               	bcf	status,0,c
  6256  002ECA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6257  002ECC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6258  002ECE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6259  002ED0  3201               	rrcf	___fltol@f1^0,f,c
  6260  002ED2  3E0A               	incfsz	___fltol@exp1^0,f,c
  6261  002ED4  EF64  F017         	goto	l3564
  6262  002ED8  EF86  F017         	goto	l3578
  6263  002EDC                     l3568:
  6264  002EDC  0E1F               	movlw	31
  6265  002EDE  640A               	cpfsgt	___fltol@exp1^0,c
  6266  002EE0  EF74  F017         	goto	u3861
  6267  002EE4  EF76  F017         	goto	u3860
  6268  002EE8                     u3861:
  6269  002EE8  EF7E  F017         	goto	l3576
  6270  002EEC                     u3860:
  6271  002EEC  EF27  F017         	goto	l3544
  6272  002EF0                     l3574:
  6273  002EF0  90D8               	bcf	status,0,c
  6274  002EF2  3601               	rlcf	___fltol@f1^0,f,c
  6275  002EF4  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6276  002EF6  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6277  002EF8  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6278  002EFA  060A               	decf	___fltol@exp1^0,f,c
  6279  002EFC                     l3576:
  6280  002EFC  500A               	movf	___fltol@exp1^0,w,c
  6281  002EFE  A4D8               	btfss	status,2,c
  6282  002F00  EF84  F017         	goto	u3871
  6283  002F04  EF86  F017         	goto	u3870
  6284  002F08                     u3871:
  6285  002F08  EF78  F017         	goto	l3574
  6286  002F0C                     u3870:
  6287  002F0C                     l3578:
  6288  002F0C  5009               	movf	___fltol@sign1^0,w,c
  6289  002F0E  B4D8               	btfsc	status,2,c
  6290  002F10  EF8C  F017         	goto	u3881
  6291  002F14  EF8E  F017         	goto	u3880
  6292  002F18                     u3881:
  6293  002F18  EF96  F017         	goto	l3582
  6294  002F1C                     u3880:
  6295  002F1C  1E04               	comf	(___fltol@f1+3)^0,f,c
  6296  002F1E  1E03               	comf	(___fltol@f1+2)^0,f,c
  6297  002F20  1E02               	comf	(___fltol@f1+1)^0,f,c
  6298  002F22  6C01               	negf	___fltol@f1^0,c
  6299  002F24  0E00               	movlw	0
  6300  002F26  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6301  002F28  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6302  002F2A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6303  002F2C                     l3582:
  6304  002F2C  C001  F001         	movff	___fltol@f1,?___fltol
  6305  002F30  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6306  002F34  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6307  002F38  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6308  002F3C                     l545:
  6309  002F3C  0012               	return		;funcret
  6310  002F3E                     __end_of___fltol:
  6311                           	callstack 0
  6312                           
  6313 ;; *************** function ___flsub *****************
  6314 ;; Defined at:
  6315 ;;		line 245 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  b               4   39[COMRAM] long 
  6318 ;;  a               4   43[COMRAM] long 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  4   39[COMRAM] long 
  6323 ;; Registers used:
  6324 ;;		wreg, status,2, status,0, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6330 ;;      Params:         8       0       0       0       0       0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6333 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6334 ;;Total ram usage:        8 bytes
  6335 ;; Hardware stack levels used: 1
  6336 ;; Hardware stack levels required when called: 1
  6337 ;; This function calls:
  6338 ;;		___fladd
  6339 ;; This function is called by:
  6340 ;;		_efgtoa
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text27
  6345  0039C0                     __ptext27:
  6346                           	callstack 0
  6347  0039C0                     ___flsub:
  6348                           	callstack 24
  6349  0039C0  0E00               	movlw	0
  6350  0039C2  1A2C               	xorwf	___flsub@a^0,f,c
  6351  0039C4  0E00               	movlw	0
  6352  0039C6  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  6353  0039C8  0E00               	movlw	0
  6354  0039CA  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  6355  0039CC  0E80               	movlw	128
  6356  0039CE  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  6357  0039D0  C028  F001         	movff	___flsub@b,___fladd@b
  6358  0039D4  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  6359  0039D8  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  6360  0039DC  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  6361  0039E0  C02C  F005         	movff	___flsub@a,___fladd@a
  6362  0039E4  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  6363  0039E8  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  6364  0039EC  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  6365  0039F0  EC52  F00A         	call	___fladd	;wreg free
  6366  0039F4  C001  F028         	movff	?___fladd,?___flsub
  6367  0039F8  C002  F029         	movff	?___fladd+1,?___flsub+1
  6368  0039FC  C003  F02A         	movff	?___fladd+2,?___flsub+2
  6369  003A00  C004  F02B         	movff	?___fladd+3,?___flsub+3
  6370  003A04  0012               	return		;funcret
  6371  003A06                     __end_of___flsub:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function ___fladd *****************
  6375 ;; Defined at:
  6376 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  b               4    0[COMRAM] long 
  6379 ;;  a               4    4[COMRAM] long 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  grs             1   15[COMRAM] unsigned char 
  6382 ;;  bexp            1   14[COMRAM] unsigned char 
  6383 ;;  aexp            1   13[COMRAM] unsigned char 
  6384 ;;  signs           1   12[COMRAM] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  4    0[COMRAM] unsigned char 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6394 ;;      Params:         8       0       0       0       0       0       0       0       0
  6395 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6396 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6397 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6398 ;;Total ram usage:       16 bytes
  6399 ;; Hardware stack levels used: 1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		___flsub
  6404 ;;		_efgtoa
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text28
  6409  0014A4                     __ptext28:
  6410                           	callstack 0
  6411  0014A4                     ___fladd:
  6412                           	callstack 24
  6413  0014A4  5004               	movf	(___fladd@b+3)^0,w,c
  6414  0014A6  0B80               	andlw	128
  6415  0014A8  6E0D               	movwf	___fladd@signs^0,c
  6416  0014AA  5004               	movf	(___fladd@b+3)^0,w,c
  6417  0014AC  2404               	addwf	(___fladd@b+3)^0,w,c
  6418  0014AE  6E0F               	movwf	___fladd@bexp^0,c
  6419  0014B0  AE03               	btfss	(___fladd@b+2)^0,7,c
  6420  0014B2  EF5D  F00A         	goto	u2761
  6421  0014B6  EF5F  F00A         	goto	u2760
  6422  0014BA                     u2761:
  6423  0014BA  EF60  F00A         	goto	l2918
  6424  0014BE                     u2760:
  6425  0014BE  800F               	bsf	___fladd@bexp^0,0,c
  6426  0014C0                     l2918:
  6427  0014C0  500F               	movf	___fladd@bexp^0,w,c
  6428  0014C2  B4D8               	btfsc	status,2,c
  6429  0014C4  EF66  F00A         	goto	u2771
  6430  0014C8  EF68  F00A         	goto	u2770
  6431  0014CC                     u2771:
  6432  0014CC  EF7D  F00A         	goto	l2928
  6433  0014D0                     u2770:
  6434  0014D0  280F               	incf	___fladd@bexp^0,w,c
  6435  0014D2  A4D8               	btfss	status,2,c
  6436  0014D4  EF6E  F00A         	goto	u2781
  6437  0014D8  EF70  F00A         	goto	u2780
  6438  0014DC                     u2781:
  6439  0014DC  EF78  F00A         	goto	l2924
  6440  0014E0                     u2780:
  6441  0014E0  0E00               	movlw	0
  6442  0014E2  6E01               	movwf	___fladd@b^0,c
  6443  0014E4  0E00               	movlw	0
  6444  0014E6  6E02               	movwf	(___fladd@b+1)^0,c
  6445  0014E8  0E00               	movlw	0
  6446  0014EA  6E03               	movwf	(___fladd@b+2)^0,c
  6447  0014EC  0E00               	movlw	0
  6448  0014EE  6E04               	movwf	(___fladd@b+3)^0,c
  6449  0014F0                     l2924:
  6450  0014F0  8E03               	bsf	(___fladd@b+2)^0,7,c
  6451  0014F2  0E00               	movlw	0
  6452  0014F4  6E04               	movwf	(___fladd@b+3)^0,c
  6453  0014F6  EF85  F00A         	goto	l2930
  6454  0014FA                     l2928:
  6455  0014FA  0E00               	movlw	0
  6456  0014FC  6E01               	movwf	___fladd@b^0,c
  6457  0014FE  0E00               	movlw	0
  6458  001500  6E02               	movwf	(___fladd@b+1)^0,c
  6459  001502  0E00               	movlw	0
  6460  001504  6E03               	movwf	(___fladd@b+2)^0,c
  6461  001506  0E00               	movlw	0
  6462  001508  6E04               	movwf	(___fladd@b+3)^0,c
  6463  00150A                     l2930:
  6464  00150A  5008               	movf	(___fladd@a+3)^0,w,c
  6465  00150C  0B80               	andlw	128
  6466  00150E  6E0E               	movwf	___fladd@aexp^0,c
  6467  001510  500D               	movf	___fladd@signs^0,w,c
  6468  001512  180E               	xorwf	___fladd@aexp^0,w,c
  6469  001514  B4D8               	btfsc	status,2,c
  6470  001516  EF8F  F00A         	goto	u2791
  6471  00151A  EF91  F00A         	goto	u2790
  6472  00151E                     u2791:
  6473  00151E  EF92  F00A         	goto	l2936
  6474  001522                     u2790:
  6475  001522  8C0D               	bsf	___fladd@signs^0,6,c
  6476  001524                     l2936:
  6477  001524  5008               	movf	(___fladd@a+3)^0,w,c
  6478  001526  2408               	addwf	(___fladd@a+3)^0,w,c
  6479  001528  6E0E               	movwf	___fladd@aexp^0,c
  6480  00152A  AE07               	btfss	(___fladd@a+2)^0,7,c
  6481  00152C  EF9A  F00A         	goto	u2801
  6482  001530  EF9C  F00A         	goto	u2800
  6483  001534                     u2801:
  6484  001534  EF9D  F00A         	goto	l2942
  6485  001538                     u2800:
  6486  001538  800E               	bsf	___fladd@aexp^0,0,c
  6487  00153A                     l2942:
  6488  00153A  500E               	movf	___fladd@aexp^0,w,c
  6489  00153C  B4D8               	btfsc	status,2,c
  6490  00153E  EFA3  F00A         	goto	u2811
  6491  001542  EFA5  F00A         	goto	u2810
  6492  001546                     u2811:
  6493  001546  EFBA  F00A         	goto	l2952
  6494  00154A                     u2810:
  6495  00154A  280E               	incf	___fladd@aexp^0,w,c
  6496  00154C  A4D8               	btfss	status,2,c
  6497  00154E  EFAB  F00A         	goto	u2821
  6498  001552  EFAD  F00A         	goto	u2820
  6499  001556                     u2821:
  6500  001556  EFB5  F00A         	goto	l2948
  6501  00155A                     u2820:
  6502  00155A  0E00               	movlw	0
  6503  00155C  6E05               	movwf	___fladd@a^0,c
  6504  00155E  0E00               	movlw	0
  6505  001560  6E06               	movwf	(___fladd@a+1)^0,c
  6506  001562  0E00               	movlw	0
  6507  001564  6E07               	movwf	(___fladd@a+2)^0,c
  6508  001566  0E00               	movlw	0
  6509  001568  6E08               	movwf	(___fladd@a+3)^0,c
  6510  00156A                     l2948:
  6511  00156A  8E07               	bsf	(___fladd@a+2)^0,7,c
  6512  00156C  0E00               	movlw	0
  6513  00156E  6E08               	movwf	(___fladd@a+3)^0,c
  6514  001570  EFC2  F00A         	goto	l2954
  6515  001574                     l2952:
  6516  001574  0E00               	movlw	0
  6517  001576  6E05               	movwf	___fladd@a^0,c
  6518  001578  0E00               	movlw	0
  6519  00157A  6E06               	movwf	(___fladd@a+1)^0,c
  6520  00157C  0E00               	movlw	0
  6521  00157E  6E07               	movwf	(___fladd@a+2)^0,c
  6522  001580  0E00               	movlw	0
  6523  001582  6E08               	movwf	(___fladd@a+3)^0,c
  6524  001584                     l2954:
  6525  001584  500F               	movf	___fladd@bexp^0,w,c
  6526  001586  5C0E               	subwf	___fladd@aexp^0,w,c
  6527  001588  B0D8               	btfsc	status,0,c
  6528  00158A  EFC9  F00A         	goto	u2831
  6529  00158E  EFCB  F00A         	goto	u2830
  6530  001592                     u2831:
  6531  001592  EFF2  F00A         	goto	l2990
  6532  001596                     u2830:
  6533  001596  AC0D               	btfss	___fladd@signs^0,6,c
  6534  001598  EFD0  F00A         	goto	u2841
  6535  00159C  EFD2  F00A         	goto	u2840
  6536  0015A0                     u2841:
  6537  0015A0  EFD4  F00A         	goto	l2960
  6538  0015A4                     u2840:
  6539  0015A4  0E80               	movlw	128
  6540  0015A6  1A0D               	xorwf	___fladd@signs^0,f,c
  6541  0015A8                     l2960:
  6542  0015A8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6543  0015AC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6544  0015B0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6545  0015B4  C001  F010         	movff	___fladd@b,___fladd@grs
  6546  0015B8  C005  F001         	movff	___fladd@a,___fladd@b
  6547  0015BC  C010  F005         	movff	___fladd@grs,___fladd@a
  6548  0015C0  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6549  0015C4  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6550  0015C8  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6551  0015CC  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6552  0015D0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6553  0015D4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6554  0015D8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6555  0015DC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6556  0015E0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6557  0015E4                     l2990:
  6558  0015E4  0E00               	movlw	0
  6559  0015E6  6E10               	movwf	___fladd@grs^0,c
  6560  0015E8  500F               	movf	___fladd@bexp^0,w,c
  6561  0015EA  C00E  F009         	movff	___fladd@aexp,??___fladd
  6562  0015EE  6A0A               	clrf	(??___fladd+1)^0,c
  6563  0015F0  5E09               	subwf	??___fladd^0,f,c
  6564  0015F2  0E00               	movlw	0
  6565  0015F4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6566  0015F6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6567  0015F8  EF07  F00B         	goto	u2851
  6568  0015FC  500A               	movf	(??___fladd+1)^0,w,c
  6569  0015FE  E109               	bnz	u2850
  6570  001600  0E1A               	movlw	26
  6571  001602  5C09               	subwf	??___fladd^0,w,c
  6572  001604  A0D8               	btfss	status,0,c
  6573  001606  EF07  F00B         	goto	u2851
  6574  00160A  EF09  F00B         	goto	u2850
  6575  00160E                     u2851:
  6576  00160E  EF40  F00B         	goto	l777
  6577  001612                     u2850:
  6578  001612  5001               	movf	___fladd@b^0,w,c
  6579  001614  1002               	iorwf	(___fladd@b+1)^0,w,c
  6580  001616  1003               	iorwf	(___fladd@b+2)^0,w,c
  6581  001618  1004               	iorwf	(___fladd@b+3)^0,w,c
  6582  00161A  A4D8               	btfss	status,2,c
  6583  00161C  EF12  F00B         	goto	u2861
  6584  001620  EF15  F00B         	goto	u2860
  6585  001624                     u2861:
  6586  001624  0E01               	movlw	1
  6587  001626  EF16  F00B         	goto	u2870
  6588  00162A                     u2860:
  6589  00162A  0E00               	movlw	0
  6590  00162C                     u2870:
  6591  00162C  6E10               	movwf	___fladd@grs^0,c
  6592  00162E  0E00               	movlw	0
  6593  001630  6E01               	movwf	___fladd@b^0,c
  6594  001632  0E00               	movlw	0
  6595  001634  6E02               	movwf	(___fladd@b+1)^0,c
  6596  001636  0E00               	movlw	0
  6597  001638  6E03               	movwf	(___fladd@b+2)^0,c
  6598  00163A  0E00               	movlw	0
  6599  00163C  6E04               	movwf	(___fladd@b+3)^0,c
  6600  00163E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6601  001642  EF49  F00B         	goto	l776
  6602  001646                     l778:
  6603  001646  A010               	btfss	___fladd@grs^0,0,c
  6604  001648  EF28  F00B         	goto	u2881
  6605  00164C  EF2A  F00B         	goto	u2880
  6606  001650                     u2881:
  6607  001650  EF30  F00B         	goto	l3002
  6608  001654                     u2880:
  6609  001654  90D8               	bcf	status,0,c
  6610  001656  3010               	rrcf	___fladd@grs^0,w,c
  6611  001658  0901               	iorlw	1
  6612  00165A  6E10               	movwf	___fladd@grs^0,c
  6613  00165C  EF32  F00B         	goto	l3004
  6614  001660                     l3002:
  6615  001660  90D8               	bcf	status,0,c
  6616  001662  3210               	rrcf	___fladd@grs^0,f,c
  6617  001664                     l3004:
  6618  001664  A001               	btfss	___fladd@b^0,0,c
  6619  001666  EF37  F00B         	goto	u2891
  6620  00166A  EF39  F00B         	goto	u2890
  6621  00166E                     u2891:
  6622  00166E  EF3A  F00B         	goto	l3008
  6623  001672                     u2890:
  6624  001672  8E10               	bsf	___fladd@grs^0,7,c
  6625  001674                     l3008:
  6626  001674  3404               	rlcf	(___fladd@b+3)^0,w,c
  6627  001676  3204               	rrcf	(___fladd@b+3)^0,f,c
  6628  001678  3203               	rrcf	(___fladd@b+2)^0,f,c
  6629  00167A  3202               	rrcf	(___fladd@b+1)^0,f,c
  6630  00167C  3201               	rrcf	___fladd@b^0,f,c
  6631  00167E  2A0F               	incf	___fladd@bexp^0,f,c
  6632  001680                     l777:
  6633  001680  500E               	movf	___fladd@aexp^0,w,c
  6634  001682  5C0F               	subwf	___fladd@bexp^0,w,c
  6635  001684  A0D8               	btfss	status,0,c
  6636  001686  EF47  F00B         	goto	u2901
  6637  00168A  EF49  F00B         	goto	u2900
  6638  00168E                     u2901:
  6639  00168E  EF23  F00B         	goto	l778
  6640  001692                     u2900:
  6641  001692                     l776:
  6642  001692  BC0D               	btfsc	___fladd@signs^0,6,c
  6643  001694  EF4E  F00B         	goto	u2911
  6644  001698  EF50  F00B         	goto	u2910
  6645  00169C                     u2911:
  6646  00169C  EF90  F00B         	goto	l3036
  6647  0016A0                     u2910:
  6648  0016A0  500F               	movf	___fladd@bexp^0,w,c
  6649  0016A2  A4D8               	btfss	status,2,c
  6650  0016A4  EF56  F00B         	goto	u2921
  6651  0016A8  EF58  F00B         	goto	u2920
  6652  0016AC                     u2921:
  6653  0016AC  EF62  F00B         	goto	l3018
  6654  0016B0                     u2920:
  6655  0016B0  0E00               	movlw	0
  6656  0016B2  6E01               	movwf	?___fladd^0,c
  6657  0016B4  0E00               	movlw	0
  6658  0016B6  6E02               	movwf	(?___fladd+1)^0,c
  6659  0016B8  0E00               	movlw	0
  6660  0016BA  6E03               	movwf	(?___fladd+2)^0,c
  6661  0016BC  0E00               	movlw	0
  6662  0016BE  6E04               	movwf	(?___fladd+3)^0,c
  6663  0016C0  EFB1  F00C         	goto	l785
  6664  0016C4                     l3018:
  6665  0016C4  5005               	movf	___fladd@a^0,w,c
  6666  0016C6  2601               	addwf	___fladd@b^0,f,c
  6667  0016C8  5006               	movf	(___fladd@a+1)^0,w,c
  6668  0016CA  2202               	addwfc	(___fladd@b+1)^0,f,c
  6669  0016CC  5007               	movf	(___fladd@a+2)^0,w,c
  6670  0016CE  2203               	addwfc	(___fladd@b+2)^0,f,c
  6671  0016D0  5008               	movf	(___fladd@a+3)^0,w,c
  6672  0016D2  2204               	addwfc	(___fladd@b+3)^0,f,c
  6673  0016D4  A004               	btfss	(___fladd@b+3)^0,0,c
  6674  0016D6  EF6F  F00B         	goto	u2931
  6675  0016DA  EF71  F00B         	goto	u2930
  6676  0016DE                     u2931:
  6677  0016DE  EF1D  F00C         	goto	l3072
  6678  0016E2                     u2930:
  6679  0016E2  A010               	btfss	___fladd@grs^0,0,c
  6680  0016E4  EF76  F00B         	goto	u2941
  6681  0016E8  EF78  F00B         	goto	u2940
  6682  0016EC                     u2941:
  6683  0016EC  EF7E  F00B         	goto	l3026
  6684  0016F0                     u2940:
  6685  0016F0  90D8               	bcf	status,0,c
  6686  0016F2  3010               	rrcf	___fladd@grs^0,w,c
  6687  0016F4  0901               	iorlw	1
  6688  0016F6  6E10               	movwf	___fladd@grs^0,c
  6689  0016F8  EF80  F00B         	goto	l3028
  6690  0016FC                     l3026:
  6691  0016FC  90D8               	bcf	status,0,c
  6692  0016FE  3210               	rrcf	___fladd@grs^0,f,c
  6693  001700                     l3028:
  6694  001700  A001               	btfss	___fladd@b^0,0,c
  6695  001702  EF85  F00B         	goto	u2951
  6696  001706  EF87  F00B         	goto	u2950
  6697  00170A                     u2951:
  6698  00170A  EF88  F00B         	goto	l3032
  6699  00170E                     u2950:
  6700  00170E  8E10               	bsf	___fladd@grs^0,7,c
  6701  001710                     l3032:
  6702  001710  3404               	rlcf	(___fladd@b+3)^0,w,c
  6703  001712  3204               	rrcf	(___fladd@b+3)^0,f,c
  6704  001714  3203               	rrcf	(___fladd@b+2)^0,f,c
  6705  001716  3202               	rrcf	(___fladd@b+1)^0,f,c
  6706  001718  3201               	rrcf	___fladd@b^0,f,c
  6707  00171A  2A0F               	incf	___fladd@bexp^0,f,c
  6708  00171C  EF1D  F00C         	goto	l3072
  6709  001720                     l3036:
  6710  001720  5005               	movf	___fladd@a^0,w,c
  6711  001722  5C01               	subwf	___fladd@b^0,w,c
  6712  001724  5006               	movf	(___fladd@a+1)^0,w,c
  6713  001726  5802               	subwfb	(___fladd@b+1)^0,w,c
  6714  001728  5007               	movf	(___fladd@a+2)^0,w,c
  6715  00172A  5803               	subwfb	(___fladd@b+2)^0,w,c
  6716  00172C  5004               	movf	(___fladd@b+3)^0,w,c
  6717  00172E  0A80               	xorlw	128
  6718  001730  6E09               	movwf	??___fladd^0,c
  6719  001732  5008               	movf	(___fladd@a+3)^0,w,c
  6720  001734  0A80               	xorlw	128
  6721  001736  5809               	subwfb	??___fladd^0,w,c
  6722  001738  B0D8               	btfsc	status,0,c
  6723  00173A  EFA1  F00B         	goto	u2961
  6724  00173E  EFA3  F00B         	goto	u2960
  6725  001742                     u2961:
  6726  001742  EFCE  F00B         	goto	l3046
  6727  001746                     u2960:
  6728  001746  5001               	movf	___fladd@b^0,w,c
  6729  001748  5C05               	subwf	___fladd@a^0,w,c
  6730  00174A  6E09               	movwf	??___fladd^0,c
  6731  00174C  5002               	movf	(___fladd@b+1)^0,w,c
  6732  00174E  5806               	subwfb	(___fladd@a+1)^0,w,c
  6733  001750  6E0A               	movwf	(??___fladd+1)^0,c
  6734  001752  5003               	movf	(___fladd@b+2)^0,w,c
  6735  001754  5807               	subwfb	(___fladd@a+2)^0,w,c
  6736  001756  6E0B               	movwf	(??___fladd+2)^0,c
  6737  001758  5004               	movf	(___fladd@b+3)^0,w,c
  6738  00175A  5808               	subwfb	(___fladd@a+3)^0,w,c
  6739  00175C  6E0C               	movwf	(??___fladd+3)^0,c
  6740  00175E  0EFF               	movlw	255
  6741  001760  2409               	addwf	??___fladd^0,w,c
  6742  001762  6E01               	movwf	___fladd@b^0,c
  6743  001764  0EFF               	movlw	255
  6744  001766  200A               	addwfc	(??___fladd+1)^0,w,c
  6745  001768  6E02               	movwf	(___fladd@b+1)^0,c
  6746  00176A  0EFF               	movlw	255
  6747  00176C  200B               	addwfc	(??___fladd+2)^0,w,c
  6748  00176E  6E03               	movwf	(___fladd@b+2)^0,c
  6749  001770  0EFF               	movlw	255
  6750  001772  200C               	addwfc	(??___fladd+3)^0,w,c
  6751  001774  6E04               	movwf	(___fladd@b+3)^0,c
  6752  001776  0E80               	movlw	128
  6753  001778  1A0D               	xorwf	___fladd@signs^0,f,c
  6754  00177A  6C10               	negf	___fladd@grs^0,c
  6755  00177C  5010               	movf	___fladd@grs^0,w,c
  6756  00177E  A4D8               	btfss	status,2,c
  6757  001780  EFC4  F00B         	goto	u2971
  6758  001784  EFC6  F00B         	goto	u2970
  6759  001788                     u2971:
  6760  001788  EFD6  F00B         	goto	l793
  6761  00178C                     u2970:
  6762  00178C  0E01               	movlw	1
  6763  00178E  2601               	addwf	___fladd@b^0,f,c
  6764  001790  0E00               	movlw	0
  6765  001792  2202               	addwfc	(___fladd@b+1)^0,f,c
  6766  001794  2203               	addwfc	(___fladd@b+2)^0,f,c
  6767  001796  2204               	addwfc	(___fladd@b+3)^0,f,c
  6768  001798  EFD6  F00B         	goto	l793
  6769  00179C                     l3046:
  6770  00179C  5005               	movf	___fladd@a^0,w,c
  6771  00179E  5E01               	subwf	___fladd@b^0,f,c
  6772  0017A0  5006               	movf	(___fladd@a+1)^0,w,c
  6773  0017A2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6774  0017A4  5007               	movf	(___fladd@a+2)^0,w,c
  6775  0017A6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6776  0017A8  5008               	movf	(___fladd@a+3)^0,w,c
  6777  0017AA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6778  0017AC                     l793:
  6779  0017AC  5001               	movf	___fladd@b^0,w,c
  6780  0017AE  1002               	iorwf	(___fladd@b+1)^0,w,c
  6781  0017B0  1003               	iorwf	(___fladd@b+2)^0,w,c
  6782  0017B2  1004               	iorwf	(___fladd@b+3)^0,w,c
  6783  0017B4  A4D8               	btfss	status,2,c
  6784  0017B6  EFDF  F00B         	goto	u2981
  6785  0017BA  EFE1  F00B         	goto	u2980
  6786  0017BE                     u2981:
  6787  0017BE  EF16  F00C         	goto	l3070
  6788  0017C2                     u2980:
  6789  0017C2  5010               	movf	___fladd@grs^0,w,c
  6790  0017C4  A4D8               	btfss	status,2,c
  6791  0017C6  EFE7  F00B         	goto	u2991
  6792  0017CA  EFE9  F00B         	goto	u2990
  6793  0017CE                     u2991:
  6794  0017CE  EF16  F00C         	goto	l3070
  6795  0017D2                     u2990:
  6796  0017D2  0E00               	movlw	0
  6797  0017D4  6E01               	movwf	?___fladd^0,c
  6798  0017D6  0E00               	movlw	0
  6799  0017D8  6E02               	movwf	(?___fladd+1)^0,c
  6800  0017DA  0E00               	movlw	0
  6801  0017DC  6E03               	movwf	(?___fladd+2)^0,c
  6802  0017DE  0E00               	movlw	0
  6803  0017E0  6E04               	movwf	(?___fladd+3)^0,c
  6804  0017E2  EFB1  F00C         	goto	l785
  6805  0017E6                     l3054:
  6806  0017E6  90D8               	bcf	status,0,c
  6807  0017E8  3601               	rlcf	___fladd@b^0,f,c
  6808  0017EA  3602               	rlcf	(___fladd@b+1)^0,f,c
  6809  0017EC  3603               	rlcf	(___fladd@b+2)^0,f,c
  6810  0017EE  3604               	rlcf	(___fladd@b+3)^0,f,c
  6811  0017F0  AE10               	btfss	___fladd@grs^0,7,c
  6812  0017F2  EFFD  F00B         	goto	u3001
  6813  0017F6  EFFF  F00B         	goto	u3000
  6814  0017FA                     u3001:
  6815  0017FA  EF00  F00C         	goto	l3060
  6816  0017FE                     u3000:
  6817  0017FE  8001               	bsf	___fladd@b^0,0,c
  6818  001800                     l3060:
  6819  001800  A010               	btfss	___fladd@grs^0,0,c
  6820  001802  EF05  F00C         	goto	u3011
  6821  001806  EF07  F00C         	goto	u3010
  6822  00180A                     u3011:
  6823  00180A  EF0B  F00C         	goto	l3064
  6824  00180E                     u3010:
  6825  00180E  80D8               	bsf	status,0,c
  6826  001810  3610               	rlcf	___fladd@grs^0,f,c
  6827  001812  EF0D  F00C         	goto	l3066
  6828  001816                     l3064:
  6829  001816  90D8               	bcf	status,0,c
  6830  001818  3610               	rlcf	___fladd@grs^0,f,c
  6831  00181A                     l3066:
  6832  00181A  500F               	movf	___fladd@bexp^0,w,c
  6833  00181C  B4D8               	btfsc	status,2,c
  6834  00181E  EF13  F00C         	goto	u3021
  6835  001822  EF15  F00C         	goto	u3020
  6836  001826                     u3021:
  6837  001826  EF16  F00C         	goto	l3070
  6838  00182A                     u3020:
  6839  00182A  060F               	decf	___fladd@bexp^0,f,c
  6840  00182C                     l3070:
  6841  00182C  AE03               	btfss	(___fladd@b+2)^0,7,c
  6842  00182E  EF1B  F00C         	goto	u3031
  6843  001832  EF1D  F00C         	goto	u3030
  6844  001836                     u3031:
  6845  001836  EFF3  F00B         	goto	l3054
  6846  00183A                     u3030:
  6847  00183A                     l3072:
  6848  00183A  0E00               	movlw	0
  6849  00183C  6E0E               	movwf	___fladd@aexp^0,c
  6850  00183E  AE10               	btfss	___fladd@grs^0,7,c
  6851  001840  EF24  F00C         	goto	u3041
  6852  001844  EF26  F00C         	goto	u3040
  6853  001848                     u3041:
  6854  001848  EF3E  F00C         	goto	l802
  6855  00184C                     u3040:
  6856  00184C  C010  F009         	movff	___fladd@grs,??___fladd
  6857  001850  0E7F               	movlw	127
  6858  001852  1609               	andwf	??___fladd^0,f,c
  6859  001854  B4D8               	btfsc	status,2,c
  6860  001856  EF2F  F00C         	goto	u3051
  6861  00185A  EF31  F00C         	goto	u3050
  6862  00185E                     u3051:
  6863  00185E  EF35  F00C         	goto	l803
  6864  001862                     u3050:
  6865  001862                     l3078:
  6866  001862  0E01               	movlw	1
  6867  001864  6E0E               	movwf	___fladd@aexp^0,c
  6868  001866  EF3E  F00C         	goto	l802
  6869  00186A                     l803:
  6870  00186A  A001               	btfss	___fladd@b^0,0,c
  6871  00186C  EF3A  F00C         	goto	u3061
  6872  001870  EF3C  F00C         	goto	u3060
  6873  001874                     u3061:
  6874  001874  EF3E  F00C         	goto	l802
  6875  001878                     u3060:
  6876  001878  EF31  F00C         	goto	l3078
  6877  00187C                     l802:
  6878  00187C  500E               	movf	___fladd@aexp^0,w,c
  6879  00187E  B4D8               	btfsc	status,2,c
  6880  001880  EF44  F00C         	goto	u3071
  6881  001884  EF46  F00C         	goto	u3070
  6882  001888                     u3071:
  6883  001888  EF71  F00C         	goto	l3090
  6884  00188C                     u3070:
  6885  00188C  0E01               	movlw	1
  6886  00188E  2601               	addwf	___fladd@b^0,f,c
  6887  001890  0E00               	movlw	0
  6888  001892  2202               	addwfc	(___fladd@b+1)^0,f,c
  6889  001894  2203               	addwfc	(___fladd@b+2)^0,f,c
  6890  001896  2204               	addwfc	(___fladd@b+3)^0,f,c
  6891  001898  A004               	btfss	(___fladd@b+3)^0,0,c
  6892  00189A  EF51  F00C         	goto	u3081
  6893  00189E  EF53  F00C         	goto	u3080
  6894  0018A2                     u3081:
  6895  0018A2  EF71  F00C         	goto	l3090
  6896  0018A6                     u3080:
  6897  0018A6  C001  F009         	movff	___fladd@b,??___fladd
  6898  0018AA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6899  0018AE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6900  0018B2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6901  0018B6  340C               	rlcf	(??___fladd+3)^0,w,c
  6902  0018B8  320C               	rrcf	(??___fladd+3)^0,f,c
  6903  0018BA  320B               	rrcf	(??___fladd+2)^0,f,c
  6904  0018BC  320A               	rrcf	(??___fladd+1)^0,f,c
  6905  0018BE  3209               	rrcf	??___fladd^0,f,c
  6906  0018C0  C009  F001         	movff	??___fladd,___fladd@b
  6907  0018C4  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6908  0018C8  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6909  0018CC  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6910  0018D0  280F               	incf	___fladd@bexp^0,w,c
  6911  0018D2  B4D8               	btfsc	status,2,c
  6912  0018D4  EF6E  F00C         	goto	u3091
  6913  0018D8  EF70  F00C         	goto	u3090
  6914  0018DC                     u3091:
  6915  0018DC  EF71  F00C         	goto	l3090
  6916  0018E0                     u3090:
  6917  0018E0  2A0F               	incf	___fladd@bexp^0,f,c
  6918  0018E2                     l3090:
  6919  0018E2  280F               	incf	___fladd@bexp^0,w,c
  6920  0018E4  B4D8               	btfsc	status,2,c
  6921  0018E6  EF77  F00C         	goto	u3101
  6922  0018EA  EF79  F00C         	goto	u3100
  6923  0018EE                     u3101:
  6924  0018EE  EF81  F00C         	goto	l3094
  6925  0018F2                     u3100:
  6926  0018F2  500F               	movf	___fladd@bexp^0,w,c
  6927  0018F4  A4D8               	btfss	status,2,c
  6928  0018F6  EF7F  F00C         	goto	u3111
  6929  0018FA  EF81  F00C         	goto	u3110
  6930  0018FE                     u3111:
  6931  0018FE  EF93  F00C         	goto	l3098
  6932  001902                     u3110:
  6933  001902                     l3094:
  6934  001902  0E00               	movlw	0
  6935  001904  6E01               	movwf	___fladd@b^0,c
  6936  001906  0E00               	movlw	0
  6937  001908  6E02               	movwf	(___fladd@b+1)^0,c
  6938  00190A  0E00               	movlw	0
  6939  00190C  6E03               	movwf	(___fladd@b+2)^0,c
  6940  00190E  0E00               	movlw	0
  6941  001910  6E04               	movwf	(___fladd@b+3)^0,c
  6942  001912  500F               	movf	___fladd@bexp^0,w,c
  6943  001914  A4D8               	btfss	status,2,c
  6944  001916  EF8F  F00C         	goto	u3121
  6945  00191A  EF91  F00C         	goto	u3120
  6946  00191E                     u3121:
  6947  00191E  EF93  F00C         	goto	l3098
  6948  001922                     u3120:
  6949  001922  0E00               	movlw	0
  6950  001924  6E0D               	movwf	___fladd@signs^0,c
  6951  001926                     l3098:
  6952  001926  A00F               	btfss	___fladd@bexp^0,0,c
  6953  001928  EF98  F00C         	goto	u3131
  6954  00192C  EF9A  F00C         	goto	u3130
  6955  001930                     u3131:
  6956  001930  EF9D  F00C         	goto	l3102
  6957  001934                     u3130:
  6958  001934  8E03               	bsf	(___fladd@b+2)^0,7,c
  6959  001936  EF9E  F00C         	goto	l3104
  6960  00193A                     l3102:
  6961  00193A  9E03               	bcf	(___fladd@b+2)^0,7,c
  6962  00193C                     l3104:
  6963  00193C  90D8               	bcf	status,0,c
  6964  00193E  300F               	rrcf	___fladd@bexp^0,w,c
  6965  001940  6E04               	movwf	(___fladd@b+3)^0,c
  6966  001942  AE0D               	btfss	___fladd@signs^0,7,c
  6967  001944  EFA6  F00C         	goto	u3141
  6968  001948  EFA8  F00C         	goto	u3140
  6969  00194C                     u3141:
  6970  00194C  EFA9  F00C         	goto	l3110
  6971  001950                     u3140:
  6972  001950  8E04               	bsf	(___fladd@b+3)^0,7,c
  6973  001952                     l3110:
  6974  001952  C001  F001         	movff	___fladd@b,?___fladd
  6975  001956  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6976  00195A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6977  00195E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6978  001962                     l785:
  6979  001962  0012               	return		;funcret
  6980  001964                     __end_of___fladd:
  6981                           	callstack 0
  6982                           
  6983 ;; *************** function ___flneg *****************
  6984 ;; Defined at:
  6985 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  f1              4    0[COMRAM] unsigned char 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  4    0[COMRAM] unsigned char 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6999 ;;      Params:         4       0       0       0       0       0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7002 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7003 ;;Total ram usage:        4 bytes
  7004 ;; Hardware stack levels used: 1
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_efgtoa
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text29
  7013  003B04                     __ptext29:
  7014                           	callstack 0
  7015  003B04                     ___flneg:
  7016                           	callstack 25
  7017  003B04  5001               	movf	___flneg@f1^0,w,c
  7018  003B06  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7019  003B08  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7020  003B0A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7021  003B0C  B4D8               	btfsc	status,2,c
  7022  003B0E  EF8B  F01D         	goto	u3811
  7023  003B12  EF8D  F01D         	goto	u3810
  7024  003B16                     u3811:
  7025  003B16  EF95  F01D         	goto	l3538
  7026  003B1A                     u3810:
  7027  003B1A  0E00               	movlw	0
  7028  003B1C  1A01               	xorwf	___flneg@f1^0,f,c
  7029  003B1E  0E00               	movlw	0
  7030  003B20  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7031  003B22  0E00               	movlw	0
  7032  003B24  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7033  003B26  0E80               	movlw	128
  7034  003B28  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7035  003B2A                     l3538:
  7036  003B2A  C001  F001         	movff	___flneg@f1,?___flneg
  7037  003B2E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7038  003B32  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7039  003B36  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7040  003B3A  0012               	return		;funcret
  7041  003B3C                     __end_of___flneg:
  7042                           	callstack 0
  7043                           
  7044 ;; *************** function ___flmul *****************
  7045 ;; Defined at:
  7046 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  b               4   14[COMRAM] unsigned char 
  7049 ;;  a               4   18[COMRAM] unsigned char 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  prod            4   33[COMRAM] struct .
  7052 ;;  grs             4   27[COMRAM] unsigned long 
  7053 ;;  temp            2   37[COMRAM] struct .
  7054 ;;  bexp            1   32[COMRAM] unsigned char 
  7055 ;;  aexp            1   31[COMRAM] unsigned char 
  7056 ;;  sign            1   26[COMRAM] unsigned char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  4   14[COMRAM] unsigned char 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0, prodl, prodh
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7066 ;;      Params:         8       0       0       0       0       0       0       0       0
  7067 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7068 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7069 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7070 ;;Total ram usage:       25 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_actDesactRelay
  7076 ;;		_efgtoa
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text30
  7081  001DC4                     __ptext30:
  7082                           	callstack 0
  7083  001DC4                     ___flmul:
  7084                           	callstack 25
  7085  001DC4  5012               	movf	(___flmul@b+3)^0,w,c
  7086  001DC6  0B80               	andlw	128
  7087  001DC8  6E1B               	movwf	___flmul@sign^0,c
  7088  001DCA  5012               	movf	(___flmul@b+3)^0,w,c
  7089  001DCC  2412               	addwf	(___flmul@b+3)^0,w,c
  7090  001DCE  6E21               	movwf	___flmul@bexp^0,c
  7091  001DD0  AE11               	btfss	(___flmul@b+2)^0,7,c
  7092  001DD2  EFED  F00E         	goto	u3421
  7093  001DD6  EFEF  F00E         	goto	u3420
  7094  001DDA                     u3421:
  7095  001DDA  EFF0  F00E         	goto	l3286
  7096  001DDE                     u3420:
  7097  001DDE  8021               	bsf	___flmul@bexp^0,0,c
  7098  001DE0                     l3286:
  7099  001DE0  5021               	movf	___flmul@bexp^0,w,c
  7100  001DE2  B4D8               	btfsc	status,2,c
  7101  001DE4  EFF6  F00E         	goto	u3431
  7102  001DE8  EFF8  F00E         	goto	u3430
  7103  001DEC                     u3431:
  7104  001DEC  EF0B  F00F         	goto	l3294
  7105  001DF0                     u3430:
  7106  001DF0  2821               	incf	___flmul@bexp^0,w,c
  7107  001DF2  A4D8               	btfss	status,2,c
  7108  001DF4  EFFE  F00E         	goto	u3441
  7109  001DF8  EF00  F00F         	goto	u3440
  7110  001DFC                     u3441:
  7111  001DFC  EF08  F00F         	goto	l3292
  7112  001E00                     u3440:
  7113  001E00  0E00               	movlw	0
  7114  001E02  6E0F               	movwf	___flmul@b^0,c
  7115  001E04  0E00               	movlw	0
  7116  001E06  6E10               	movwf	(___flmul@b+1)^0,c
  7117  001E08  0E00               	movlw	0
  7118  001E0A  6E11               	movwf	(___flmul@b+2)^0,c
  7119  001E0C  0E00               	movlw	0
  7120  001E0E  6E12               	movwf	(___flmul@b+3)^0,c
  7121  001E10                     l3292:
  7122  001E10  8E11               	bsf	(___flmul@b+2)^0,7,c
  7123  001E12  EF13  F00F         	goto	l3296
  7124  001E16                     l3294:
  7125  001E16  0E00               	movlw	0
  7126  001E18  6E0F               	movwf	___flmul@b^0,c
  7127  001E1A  0E00               	movlw	0
  7128  001E1C  6E10               	movwf	(___flmul@b+1)^0,c
  7129  001E1E  0E00               	movlw	0
  7130  001E20  6E11               	movwf	(___flmul@b+2)^0,c
  7131  001E22  0E00               	movlw	0
  7132  001E24  6E12               	movwf	(___flmul@b+3)^0,c
  7133  001E26                     l3296:
  7134  001E26  5016               	movf	(___flmul@a+3)^0,w,c
  7135  001E28  0B80               	andlw	128
  7136  001E2A  1A1B               	xorwf	___flmul@sign^0,f,c
  7137  001E2C  5016               	movf	(___flmul@a+3)^0,w,c
  7138  001E2E  2416               	addwf	(___flmul@a+3)^0,w,c
  7139  001E30  6E20               	movwf	___flmul@aexp^0,c
  7140  001E32  AE15               	btfss	(___flmul@a+2)^0,7,c
  7141  001E34  EF1E  F00F         	goto	u3451
  7142  001E38  EF20  F00F         	goto	u3450
  7143  001E3C                     u3451:
  7144  001E3C  EF21  F00F         	goto	l3304
  7145  001E40                     u3450:
  7146  001E40  8020               	bsf	___flmul@aexp^0,0,c
  7147  001E42                     l3304:
  7148  001E42  5020               	movf	___flmul@aexp^0,w,c
  7149  001E44  B4D8               	btfsc	status,2,c
  7150  001E46  EF27  F00F         	goto	u3461
  7151  001E4A  EF29  F00F         	goto	u3460
  7152  001E4E                     u3461:
  7153  001E4E  EF3C  F00F         	goto	l3312
  7154  001E52                     u3460:
  7155  001E52  2820               	incf	___flmul@aexp^0,w,c
  7156  001E54  A4D8               	btfss	status,2,c
  7157  001E56  EF2F  F00F         	goto	u3471
  7158  001E5A  EF31  F00F         	goto	u3470
  7159  001E5E                     u3471:
  7160  001E5E  EF39  F00F         	goto	l3310
  7161  001E62                     u3470:
  7162  001E62  0E00               	movlw	0
  7163  001E64  6E13               	movwf	___flmul@a^0,c
  7164  001E66  0E00               	movlw	0
  7165  001E68  6E14               	movwf	(___flmul@a+1)^0,c
  7166  001E6A  0E00               	movlw	0
  7167  001E6C  6E15               	movwf	(___flmul@a+2)^0,c
  7168  001E6E  0E00               	movlw	0
  7169  001E70  6E16               	movwf	(___flmul@a+3)^0,c
  7170  001E72                     l3310:
  7171  001E72  8E15               	bsf	(___flmul@a+2)^0,7,c
  7172  001E74  EF44  F00F         	goto	l862
  7173  001E78                     l3312:
  7174  001E78  0E00               	movlw	0
  7175  001E7A  6E13               	movwf	___flmul@a^0,c
  7176  001E7C  0E00               	movlw	0
  7177  001E7E  6E14               	movwf	(___flmul@a+1)^0,c
  7178  001E80  0E00               	movlw	0
  7179  001E82  6E15               	movwf	(___flmul@a+2)^0,c
  7180  001E84  0E00               	movlw	0
  7181  001E86  6E16               	movwf	(___flmul@a+3)^0,c
  7182  001E88                     l862:
  7183  001E88  5020               	movf	___flmul@aexp^0,w,c
  7184  001E8A  B4D8               	btfsc	status,2,c
  7185  001E8C  EF4A  F00F         	goto	u3481
  7186  001E90  EF4C  F00F         	goto	u3480
  7187  001E94                     u3481:
  7188  001E94  EF54  F00F         	goto	l3316
  7189  001E98                     u3480:
  7190  001E98  5021               	movf	___flmul@bexp^0,w,c
  7191  001E9A  A4D8               	btfss	status,2,c
  7192  001E9C  EF52  F00F         	goto	u3491
  7193  001EA0  EF54  F00F         	goto	u3490
  7194  001EA4                     u3491:
  7195  001EA4  EF5E  F00F         	goto	l3320
  7196  001EA8                     u3490:
  7197  001EA8                     l3316:
  7198  001EA8  0E00               	movlw	0
  7199  001EAA  6E0F               	movwf	?___flmul^0,c
  7200  001EAC  0E00               	movlw	0
  7201  001EAE  6E10               	movwf	(?___flmul+1)^0,c
  7202  001EB0  0E00               	movlw	0
  7203  001EB2  6E11               	movwf	(?___flmul+2)^0,c
  7204  001EB4  0E00               	movlw	0
  7205  001EB6  6E12               	movwf	(?___flmul+3)^0,c
  7206  001EB8  EFF6  F010         	goto	l866
  7207  001EBC                     l3320:
  7208  001EBC  5015               	movf	(___flmul@a+2)^0,w,c
  7209  001EBE  020F               	mulwf	___flmul@b^0,c
  7210  001EC0  CFF3 F026          	movff	prodl,___flmul@temp
  7211  001EC4  CFF4 F027          	movff	prodh,___flmul@temp+1
  7212  001EC8  5026               	movf	___flmul@temp^0,w,c
  7213  001ECA  6E1C               	movwf	___flmul@grs^0,c
  7214  001ECC  6A1D               	clrf	(___flmul@grs+1)^0,c
  7215  001ECE  6A1E               	clrf	(___flmul@grs+2)^0,c
  7216  001ED0  6A1F               	clrf	(___flmul@grs+3)^0,c
  7217  001ED2  5027               	movf	(___flmul@temp+1)^0,w,c
  7218  001ED4  6E22               	movwf	___flmul@prod^0,c
  7219  001ED6  6A23               	clrf	(___flmul@prod+1)^0,c
  7220  001ED8  6A24               	clrf	(___flmul@prod+2)^0,c
  7221  001EDA  6A25               	clrf	(___flmul@prod+3)^0,c
  7222  001EDC  5014               	movf	(___flmul@a+1)^0,w,c
  7223  001EDE  0210               	mulwf	(___flmul@b+1)^0,c
  7224  001EE0  CFF3 F026          	movff	prodl,___flmul@temp
  7225  001EE4  CFF4 F027          	movff	prodh,___flmul@temp+1
  7226  001EE8  5026               	movf	___flmul@temp^0,w,c
  7227  001EEA  261C               	addwf	___flmul@grs^0,f,c
  7228  001EEC  0E00               	movlw	0
  7229  001EEE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7230  001EF0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7231  001EF2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7232  001EF4  5027               	movf	(___flmul@temp+1)^0,w,c
  7233  001EF6  2622               	addwf	___flmul@prod^0,f,c
  7234  001EF8  0E00               	movlw	0
  7235  001EFA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7236  001EFC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7237  001EFE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7238  001F00  5013               	movf	___flmul@a^0,w,c
  7239  001F02  0211               	mulwf	(___flmul@b+2)^0,c
  7240  001F04  CFF3 F026          	movff	prodl,___flmul@temp
  7241  001F08  CFF4 F027          	movff	prodh,___flmul@temp+1
  7242  001F0C  5026               	movf	___flmul@temp^0,w,c
  7243  001F0E  261C               	addwf	___flmul@grs^0,f,c
  7244  001F10  0E00               	movlw	0
  7245  001F12  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7246  001F14  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7247  001F16  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7248  001F18  5027               	movf	(___flmul@temp+1)^0,w,c
  7249  001F1A  2622               	addwf	___flmul@prod^0,f,c
  7250  001F1C  0E00               	movlw	0
  7251  001F1E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7252  001F20  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7253  001F22  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7254  001F24  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7255  001F28  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7256  001F2C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7257  001F30  6A1C               	clrf	___flmul@grs^0,c
  7258  001F32  5013               	movf	___flmul@a^0,w,c
  7259  001F34  0210               	mulwf	(___flmul@b+1)^0,c
  7260  001F36  CFF3 F026          	movff	prodl,___flmul@temp
  7261  001F3A  CFF4 F027          	movff	prodh,___flmul@temp+1
  7262  001F3E  5026               	movf	___flmul@temp^0,w,c
  7263  001F40  261C               	addwf	___flmul@grs^0,f,c
  7264  001F42  5027               	movf	(___flmul@temp+1)^0,w,c
  7265  001F44  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7266  001F46  0E00               	movlw	0
  7267  001F48  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7268  001F4A  0E00               	movlw	0
  7269  001F4C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7270  001F4E  5014               	movf	(___flmul@a+1)^0,w,c
  7271  001F50  020F               	mulwf	___flmul@b^0,c
  7272  001F52  CFF3 F026          	movff	prodl,___flmul@temp
  7273  001F56  CFF4 F027          	movff	prodh,___flmul@temp+1
  7274  001F5A  5026               	movf	___flmul@temp^0,w,c
  7275  001F5C  261C               	addwf	___flmul@grs^0,f,c
  7276  001F5E  5027               	movf	(___flmul@temp+1)^0,w,c
  7277  001F60  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7278  001F62  0E00               	movlw	0
  7279  001F64  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7280  001F66  0E00               	movlw	0
  7281  001F68  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7282  001F6A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7283  001F6E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7284  001F72  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7285  001F76  6A1C               	clrf	___flmul@grs^0,c
  7286  001F78  5013               	movf	___flmul@a^0,w,c
  7287  001F7A  020F               	mulwf	___flmul@b^0,c
  7288  001F7C  CFF3 F026          	movff	prodl,___flmul@temp
  7289  001F80  CFF4 F027          	movff	prodh,___flmul@temp+1
  7290  001F84  5026               	movf	___flmul@temp^0,w,c
  7291  001F86  261C               	addwf	___flmul@grs^0,f,c
  7292  001F88  5027               	movf	(___flmul@temp+1)^0,w,c
  7293  001F8A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7294  001F8C  0E00               	movlw	0
  7295  001F8E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7296  001F90  0E00               	movlw	0
  7297  001F92  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7298  001F94  5015               	movf	(___flmul@a+2)^0,w,c
  7299  001F96  0210               	mulwf	(___flmul@b+1)^0,c
  7300  001F98  CFF3 F026          	movff	prodl,___flmul@temp
  7301  001F9C  CFF4 F027          	movff	prodh,___flmul@temp+1
  7302  001FA0  5026               	movf	___flmul@temp^0,w,c
  7303  001FA2  2622               	addwf	___flmul@prod^0,f,c
  7304  001FA4  5027               	movf	(___flmul@temp+1)^0,w,c
  7305  001FA6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7306  001FA8  0E00               	movlw	0
  7307  001FAA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7308  001FAC  0E00               	movlw	0
  7309  001FAE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7310  001FB0  5014               	movf	(___flmul@a+1)^0,w,c
  7311  001FB2  0211               	mulwf	(___flmul@b+2)^0,c
  7312  001FB4  CFF3 F026          	movff	prodl,___flmul@temp
  7313  001FB8  CFF4 F027          	movff	prodh,___flmul@temp+1
  7314  001FBC  5026               	movf	___flmul@temp^0,w,c
  7315  001FBE  2622               	addwf	___flmul@prod^0,f,c
  7316  001FC0  5027               	movf	(___flmul@temp+1)^0,w,c
  7317  001FC2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7318  001FC4  0E00               	movlw	0
  7319  001FC6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7320  001FC8  0E00               	movlw	0
  7321  001FCA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7322  001FCC  5015               	movf	(___flmul@a+2)^0,w,c
  7323  001FCE  0211               	mulwf	(___flmul@b+2)^0,c
  7324  001FD0  CFF3 F026          	movff	prodl,___flmul@temp
  7325  001FD4  CFF4 F027          	movff	prodh,___flmul@temp+1
  7326  001FD8  5026               	movf	___flmul@temp^0,w,c
  7327  001FDA  6E17               	movwf	??___flmul^0,c
  7328  001FDC  5027               	movf	(___flmul@temp+1)^0,w,c
  7329  001FDE  6E18               	movwf	(??___flmul+1)^0,c
  7330  001FE0  6A19               	clrf	(??___flmul+2)^0,c
  7331  001FE2  6A1A               	clrf	(??___flmul+3)^0,c
  7332  001FE4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  7333  001FE8  C018  F019         	movff	??___flmul+1,??___flmul+2
  7334  001FEC  C017  F018         	movff	??___flmul,??___flmul+1
  7335  001FF0  6A17               	clrf	??___flmul^0,c
  7336  001FF2  5017               	movf	??___flmul^0,w,c
  7337  001FF4  2622               	addwf	___flmul@prod^0,f,c
  7338  001FF6  5018               	movf	(??___flmul+1)^0,w,c
  7339  001FF8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7340  001FFA  5019               	movf	(??___flmul+2)^0,w,c
  7341  001FFC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7342  001FFE  501A               	movf	(??___flmul+3)^0,w,c
  7343  002000  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7344  002002  C01C  F017         	movff	___flmul@grs,??___flmul
  7345  002006  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  7346  00200A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  7347  00200E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  7348  002012  0E19               	movlw	25
  7349  002014  EF11  F010         	goto	u3500
  7350  002018                     u3505:
  7351  002018  90D8               	bcf	status,0,c
  7352  00201A  321A               	rrcf	(??___flmul+3)^0,f,c
  7353  00201C  3219               	rrcf	(??___flmul+2)^0,f,c
  7354  00201E  3218               	rrcf	(??___flmul+1)^0,f,c
  7355  002020  3217               	rrcf	??___flmul^0,f,c
  7356  002022                     u3500:
  7357  002022  2EE8               	decfsz	wreg,f,c
  7358  002024  EF0C  F010         	goto	u3505
  7359  002028  5017               	movf	??___flmul^0,w,c
  7360  00202A  2622               	addwf	___flmul@prod^0,f,c
  7361  00202C  5018               	movf	(??___flmul+1)^0,w,c
  7362  00202E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7363  002030  5019               	movf	(??___flmul+2)^0,w,c
  7364  002032  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7365  002034  501A               	movf	(??___flmul+3)^0,w,c
  7366  002036  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7367  002038  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7368  00203C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7369  002040  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7370  002044  6A1C               	clrf	___flmul@grs^0,c
  7371  002046  5020               	movf	___flmul@aexp^0,w,c
  7372  002048  C021  F017         	movff	___flmul@bexp,??___flmul
  7373  00204C  6A18               	clrf	(??___flmul+1)^0,c
  7374  00204E  2617               	addwf	??___flmul^0,f,c
  7375  002050  0E00               	movlw	0
  7376  002052  2218               	addwfc	(??___flmul+1)^0,f,c
  7377  002054  0E82               	movlw	130
  7378  002056  2417               	addwf	??___flmul^0,w,c
  7379  002058  6E26               	movwf	___flmul@temp^0,c
  7380  00205A  0EFF               	movlw	255
  7381  00205C  2018               	addwfc	(??___flmul+1)^0,w,c
  7382  00205E  6E27               	movwf	(___flmul@temp+1)^0,c
  7383  002060  EF47  F010         	goto	l3368
  7384  002064                     l3362:
  7385  002064  90D8               	bcf	status,0,c
  7386  002066  3622               	rlcf	___flmul@prod^0,f,c
  7387  002068  3623               	rlcf	(___flmul@prod+1)^0,f,c
  7388  00206A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  7389  00206C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  7390  00206E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  7391  002070  EF3C  F010         	goto	u3511
  7392  002074  EF3E  F010         	goto	u3510
  7393  002078                     u3511:
  7394  002078  EF3F  F010         	goto	l869
  7395  00207C                     u3510:
  7396  00207C  8022               	bsf	___flmul@prod^0,0,c
  7397  00207E                     l869:
  7398  00207E  90D8               	bcf	status,0,c
  7399  002080  361C               	rlcf	___flmul@grs^0,f,c
  7400  002082  361D               	rlcf	(___flmul@grs+1)^0,f,c
  7401  002084  361E               	rlcf	(___flmul@grs+2)^0,f,c
  7402  002086  361F               	rlcf	(___flmul@grs+3)^0,f,c
  7403  002088  0626               	decf	___flmul@temp^0,f,c
  7404  00208A  A0D8               	btfss	status,0,c
  7405  00208C  0627               	decf	(___flmul@temp+1)^0,f,c
  7406  00208E                     l3368:
  7407  00208E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  7408  002090  EF4C  F010         	goto	u3521
  7409  002094  EF4E  F010         	goto	u3520
  7410  002098                     u3521:
  7411  002098  EF32  F010         	goto	l3362
  7412  00209C                     u3520:
  7413  00209C  0E00               	movlw	0
  7414  00209E  6E20               	movwf	___flmul@aexp^0,c
  7415  0020A0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  7416  0020A2  EF55  F010         	goto	u3531
  7417  0020A6  EF57  F010         	goto	u3530
  7418  0020AA                     u3531:
  7419  0020AA  EF7B  F010         	goto	l871
  7420  0020AE                     u3530:
  7421  0020AE  0EFF               	movlw	255
  7422  0020B0  141C               	andwf	___flmul@grs^0,w,c
  7423  0020B2  6E17               	movwf	??___flmul^0,c
  7424  0020B4  0EFF               	movlw	255
  7425  0020B6  141D               	andwf	(___flmul@grs+1)^0,w,c
  7426  0020B8  6E18               	movwf	(??___flmul+1)^0,c
  7427  0020BA  0EFF               	movlw	255
  7428  0020BC  141E               	andwf	(___flmul@grs+2)^0,w,c
  7429  0020BE  6E19               	movwf	(??___flmul+2)^0,c
  7430  0020C0  0E7F               	movlw	127
  7431  0020C2  141F               	andwf	(___flmul@grs+3)^0,w,c
  7432  0020C4  6E1A               	movwf	(??___flmul+3)^0,c
  7433  0020C6  5017               	movf	??___flmul^0,w,c
  7434  0020C8  1018               	iorwf	(??___flmul+1)^0,w,c
  7435  0020CA  1019               	iorwf	(??___flmul+2)^0,w,c
  7436  0020CC  101A               	iorwf	(??___flmul+3)^0,w,c
  7437  0020CE  B4D8               	btfsc	status,2,c
  7438  0020D0  EF6C  F010         	goto	u3541
  7439  0020D4  EF6E  F010         	goto	u3540
  7440  0020D8                     u3541:
  7441  0020D8  EF72  F010         	goto	l872
  7442  0020DC                     u3540:
  7443  0020DC                     l3376:
  7444  0020DC  0E01               	movlw	1
  7445  0020DE  6E20               	movwf	___flmul@aexp^0,c
  7446  0020E0  EF7B  F010         	goto	l871
  7447  0020E4                     l872:
  7448  0020E4  A022               	btfss	___flmul@prod^0,0,c
  7449  0020E6  EF77  F010         	goto	u3551
  7450  0020EA  EF79  F010         	goto	u3550
  7451  0020EE                     u3551:
  7452  0020EE  EF7B  F010         	goto	l871
  7453  0020F2                     u3550:
  7454  0020F2  EF6E  F010         	goto	l3376
  7455  0020F6                     l871:
  7456  0020F6  5020               	movf	___flmul@aexp^0,w,c
  7457  0020F8  B4D8               	btfsc	status,2,c
  7458  0020FA  EF81  F010         	goto	u3561
  7459  0020FE  EF83  F010         	goto	u3560
  7460  002102                     u3561:
  7461  002102  EFA7  F010         	goto	l3388
  7462  002106                     u3560:
  7463  002106  0E01               	movlw	1
  7464  002108  2622               	addwf	___flmul@prod^0,f,c
  7465  00210A  0E00               	movlw	0
  7466  00210C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7467  00210E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7468  002110  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7469  002112  A025               	btfss	(___flmul@prod+3)^0,0,c
  7470  002114  EF8E  F010         	goto	u3571
  7471  002118  EF90  F010         	goto	u3570
  7472  00211C                     u3571:
  7473  00211C  EFA7  F010         	goto	l3388
  7474  002120                     u3570:
  7475  002120  C022  F017         	movff	___flmul@prod,??___flmul
  7476  002124  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  7477  002128  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  7478  00212C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  7479  002130  341A               	rlcf	(??___flmul+3)^0,w,c
  7480  002132  321A               	rrcf	(??___flmul+3)^0,f,c
  7481  002134  3219               	rrcf	(??___flmul+2)^0,f,c
  7482  002136  3218               	rrcf	(??___flmul+1)^0,f,c
  7483  002138  3217               	rrcf	??___flmul^0,f,c
  7484  00213A  C017  F022         	movff	??___flmul,___flmul@prod
  7485  00213E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  7486  002142  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  7487  002146  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  7488  00214A  4A26               	infsnz	___flmul@temp^0,f,c
  7489  00214C  2A27               	incf	(___flmul@temp+1)^0,f,c
  7490  00214E                     l3388:
  7491  00214E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7492  002150  EFB2  F010         	goto	u3581
  7493  002154  5027               	movf	(___flmul@temp+1)^0,w,c
  7494  002156  E108               	bnz	u3580
  7495  002158  2826               	incf	___flmul@temp^0,w,c
  7496  00215A  A0D8               	btfss	status,0,c
  7497  00215C  EFB2  F010         	goto	u3581
  7498  002160  EFB4  F010         	goto	u3580
  7499  002164                     u3581:
  7500  002164  EFBE  F010         	goto	l3392
  7501  002168                     u3580:
  7502  002168  0E00               	movlw	0
  7503  00216A  6E22               	movwf	___flmul@prod^0,c
  7504  00216C  0E00               	movlw	0
  7505  00216E  6E23               	movwf	(___flmul@prod+1)^0,c
  7506  002170  0E80               	movlw	128
  7507  002172  6E24               	movwf	(___flmul@prod+2)^0,c
  7508  002174  0E7F               	movlw	127
  7509  002176  6E25               	movwf	(___flmul@prod+3)^0,c
  7510  002178  EFEC  F010         	goto	l3404
  7511  00217C                     l3392:
  7512  00217C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7513  00217E  EFCB  F010         	goto	u3590
  7514  002182  5027               	movf	(___flmul@temp+1)^0,w,c
  7515  002184  E106               	bnz	u3591
  7516  002186  0426               	decf	___flmul@temp^0,w,c
  7517  002188  B0D8               	btfsc	status,0,c
  7518  00218A  EFC9  F010         	goto	u3591
  7519  00218E  EFCB  F010         	goto	u3590
  7520  002192                     u3591:
  7521  002192  EFD7  F010         	goto	l879
  7522  002196                     u3590:
  7523  002196  0E00               	movlw	0
  7524  002198  6E22               	movwf	___flmul@prod^0,c
  7525  00219A  0E00               	movlw	0
  7526  00219C  6E23               	movwf	(___flmul@prod+1)^0,c
  7527  00219E  0E00               	movlw	0
  7528  0021A0  6E24               	movwf	(___flmul@prod+2)^0,c
  7529  0021A2  0E00               	movlw	0
  7530  0021A4  6E25               	movwf	(___flmul@prod+3)^0,c
  7531  0021A6  0E00               	movlw	0
  7532  0021A8  6E1B               	movwf	___flmul@sign^0,c
  7533  0021AA  EFEC  F010         	goto	l3404
  7534  0021AE                     l879:
  7535  0021AE  C026  F021         	movff	___flmul@temp,___flmul@bexp
  7536  0021B2  0EFF               	movlw	255
  7537  0021B4  1622               	andwf	___flmul@prod^0,f,c
  7538  0021B6  0EFF               	movlw	255
  7539  0021B8  1623               	andwf	(___flmul@prod+1)^0,f,c
  7540  0021BA  0E7F               	movlw	127
  7541  0021BC  1624               	andwf	(___flmul@prod+2)^0,f,c
  7542  0021BE  0E00               	movlw	0
  7543  0021C0  1625               	andwf	(___flmul@prod+3)^0,f,c
  7544  0021C2  A021               	btfss	___flmul@bexp^0,0,c
  7545  0021C4  EFE6  F010         	goto	u3601
  7546  0021C8  EFE8  F010         	goto	u3600
  7547  0021CC                     u3601:
  7548  0021CC  EFE9  F010         	goto	l3402
  7549  0021D0                     u3600:
  7550  0021D0  8E24               	bsf	(___flmul@prod+2)^0,7,c
  7551  0021D2                     l3402:
  7552  0021D2  90D8               	bcf	status,0,c
  7553  0021D4  3021               	rrcf	___flmul@bexp^0,w,c
  7554  0021D6  6E25               	movwf	(___flmul@prod+3)^0,c
  7555  0021D8                     l3404:
  7556  0021D8  501B               	movf	___flmul@sign^0,w,c
  7557  0021DA  1225               	iorwf	(___flmul@prod+3)^0,f,c
  7558  0021DC  C022  F00F         	movff	___flmul@prod,?___flmul
  7559  0021E0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7560  0021E4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7561  0021E8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7562  0021EC                     l866:
  7563  0021EC  0012               	return		;funcret
  7564  0021EE                     __end_of___flmul:
  7565                           	callstack 0
  7566                           
  7567 ;; *************** function ___flge *****************
  7568 ;; Defined at:
  7569 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  ff1             4   39[COMRAM] unsigned char 
  7572 ;;  ff2             4   43[COMRAM] unsigned char 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;		None               void
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7584 ;;      Params:         8       0       0       0       0       0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7586 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7587 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7588 ;;Total ram usage:       12 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; This function calls:
  7591 ;;		Nothing
  7592 ;; This function is called by:
  7593 ;;		_actDesactRelay
  7594 ;;		_efgtoa
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text31
  7599  002F3E                     __ptext31:
  7600                           	callstack 0
  7601  002F3E                     ___flge:
  7602                           	callstack 25
  7603  002F3E  0E00               	movlw	0
  7604  002F40  1428               	andwf	___flge@ff1^0,w,c
  7605  002F42  6E30               	movwf	??___flge^0,c
  7606  002F44  0E00               	movlw	0
  7607  002F46  1429               	andwf	(___flge@ff1+1)^0,w,c
  7608  002F48  6E31               	movwf	(??___flge+1)^0,c
  7609  002F4A  0E80               	movlw	128
  7610  002F4C  142A               	andwf	(___flge@ff1+2)^0,w,c
  7611  002F4E  6E32               	movwf	(??___flge+2)^0,c
  7612  002F50  0E7F               	movlw	127
  7613  002F52  142B               	andwf	(___flge@ff1+3)^0,w,c
  7614  002F54  6E33               	movwf	(??___flge+3)^0,c
  7615  002F56  5030               	movf	??___flge^0,w,c
  7616  002F58  1031               	iorwf	(??___flge+1)^0,w,c
  7617  002F5A  1032               	iorwf	(??___flge+2)^0,w,c
  7618  002F5C  1033               	iorwf	(??___flge+3)^0,w,c
  7619  002F5E  A4D8               	btfss	status,2,c
  7620  002F60  EFB4  F017         	goto	u3761
  7621  002F64  EFB6  F017         	goto	u3760
  7622  002F68                     u3761:
  7623  002F68  EFBE  F017         	goto	l3516
  7624  002F6C                     u3760:
  7625  002F6C  0E00               	movlw	0
  7626  002F6E  6E28               	movwf	___flge@ff1^0,c
  7627  002F70  0E00               	movlw	0
  7628  002F72  6E29               	movwf	(___flge@ff1+1)^0,c
  7629  002F74  0E00               	movlw	0
  7630  002F76  6E2A               	movwf	(___flge@ff1+2)^0,c
  7631  002F78  0E00               	movlw	0
  7632  002F7A  6E2B               	movwf	(___flge@ff1+3)^0,c
  7633  002F7C                     l3516:
  7634  002F7C  0E00               	movlw	0
  7635  002F7E  142C               	andwf	___flge@ff2^0,w,c
  7636  002F80  6E30               	movwf	??___flge^0,c
  7637  002F82  0E00               	movlw	0
  7638  002F84  142D               	andwf	(___flge@ff2+1)^0,w,c
  7639  002F86  6E31               	movwf	(??___flge+1)^0,c
  7640  002F88  0E80               	movlw	128
  7641  002F8A  142E               	andwf	(___flge@ff2+2)^0,w,c
  7642  002F8C  6E32               	movwf	(??___flge+2)^0,c
  7643  002F8E  0E7F               	movlw	127
  7644  002F90  142F               	andwf	(___flge@ff2+3)^0,w,c
  7645  002F92  6E33               	movwf	(??___flge+3)^0,c
  7646  002F94  5030               	movf	??___flge^0,w,c
  7647  002F96  1031               	iorwf	(??___flge+1)^0,w,c
  7648  002F98  1032               	iorwf	(??___flge+2)^0,w,c
  7649  002F9A  1033               	iorwf	(??___flge+3)^0,w,c
  7650  002F9C  A4D8               	btfss	status,2,c
  7651  002F9E  EFD3  F017         	goto	u3771
  7652  002FA2  EFD5  F017         	goto	u3770
  7653  002FA6                     u3771:
  7654  002FA6  EFDD  F017         	goto	l3520
  7655  002FAA                     u3770:
  7656  002FAA  0E00               	movlw	0
  7657  002FAC  6E2C               	movwf	___flge@ff2^0,c
  7658  002FAE  0E00               	movlw	0
  7659  002FB0  6E2D               	movwf	(___flge@ff2+1)^0,c
  7660  002FB2  0E00               	movlw	0
  7661  002FB4  6E2E               	movwf	(___flge@ff2+2)^0,c
  7662  002FB6  0E00               	movlw	0
  7663  002FB8  6E2F               	movwf	(___flge@ff2+3)^0,c
  7664  002FBA                     l3520:
  7665  002FBA  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  7666  002FBC  EFE2  F017         	goto	u3781
  7667  002FC0  EFE4  F017         	goto	u3780
  7668  002FC4                     u3781:
  7669  002FC4  EFED  F017         	goto	l3524
  7670  002FC8                     u3780:
  7671  002FC8  6C28               	negf	___flge@ff1^0,c
  7672  002FCA  1E29               	comf	(___flge@ff1+1)^0,f,c
  7673  002FCC  B0D8               	btfsc	status,0,c
  7674  002FCE  2A29               	incf	(___flge@ff1+1)^0,f,c
  7675  002FD0  1E2A               	comf	(___flge@ff1+2)^0,f,c
  7676  002FD2  B0D8               	btfsc	status,0,c
  7677  002FD4  2A2A               	incf	(___flge@ff1+2)^0,f,c
  7678  002FD6  0E80               	movlw	128
  7679  002FD8  562B               	subfwb	(___flge@ff1+3)^0,f,c
  7680  002FDA                     l3524:
  7681  002FDA  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  7682  002FDC  EFF2  F017         	goto	u3791
  7683  002FE0  EFF4  F017         	goto	u3790
  7684  002FE4                     u3791:
  7685  002FE4  EFFD  F017         	goto	l513
  7686  002FE8                     u3790:
  7687  002FE8  6C2C               	negf	___flge@ff2^0,c
  7688  002FEA  1E2D               	comf	(___flge@ff2+1)^0,f,c
  7689  002FEC  B0D8               	btfsc	status,0,c
  7690  002FEE  2A2D               	incf	(___flge@ff2+1)^0,f,c
  7691  002FF0  1E2E               	comf	(___flge@ff2+2)^0,f,c
  7692  002FF2  B0D8               	btfsc	status,0,c
  7693  002FF4  2A2E               	incf	(___flge@ff2+2)^0,f,c
  7694  002FF6  0E80               	movlw	128
  7695  002FF8  562F               	subfwb	(___flge@ff2+3)^0,f,c
  7696  002FFA                     l513:
  7697  002FFA  0E00               	movlw	0
  7698  002FFC  1A28               	xorwf	___flge@ff1^0,f,c
  7699  002FFE  0E00               	movlw	0
  7700  003000  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  7701  003002  0E00               	movlw	0
  7702  003004  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  7703  003006  0E80               	movlw	128
  7704  003008  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  7705  00300A  0E00               	movlw	0
  7706  00300C  1A2C               	xorwf	___flge@ff2^0,f,c
  7707  00300E  0E00               	movlw	0
  7708  003010  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  7709  003012  0E00               	movlw	0
  7710  003014  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  7711  003016  0E80               	movlw	128
  7712  003018  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  7713  00301A  502C               	movf	___flge@ff2^0,w,c
  7714  00301C  5C28               	subwf	___flge@ff1^0,w,c
  7715  00301E  502D               	movf	(___flge@ff2+1)^0,w,c
  7716  003020  5829               	subwfb	(___flge@ff1+1)^0,w,c
  7717  003022  502E               	movf	(___flge@ff2+2)^0,w,c
  7718  003024  582A               	subwfb	(___flge@ff1+2)^0,w,c
  7719  003026  502F               	movf	(___flge@ff2+3)^0,w,c
  7720  003028  582B               	subwfb	(___flge@ff1+3)^0,w,c
  7721  00302A  B0D8               	btfsc	status,0,c
  7722  00302C  EF1A  F018         	goto	u3801
  7723  003030  EF1C  F018         	goto	u3800
  7724  003034                     u3801:
  7725  003034  EF1F  F018         	goto	l3530
  7726  003038                     u3800:
  7727  003038  90D8               	bcf	status,0,c
  7728  00303A  EF20  F018         	goto	l518
  7729  00303E                     l3530:
  7730  00303E  80D8               	bsf	status,0,c
  7731  003040                     l518:
  7732  003040  0012               	return		;funcret
  7733  003042                     __end_of___flge:
  7734                           	callstack 0
  7735                           
  7736 ;; *************** function ___fleq *****************
  7737 ;; Defined at:
  7738 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  ff1             4    0[COMRAM] unsigned char 
  7741 ;;  ff2             4    4[COMRAM] unsigned char 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;		None
  7744 ;; Return value:  Size  Location     Type
  7745 ;;		None               void
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7753 ;;      Params:         8       0       0       0       0       0       0       0       0
  7754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7755 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7756 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7757 ;;Total ram usage:       12 bytes
  7758 ;; Hardware stack levels used: 1
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_efgtoa
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text32
  7767  0035DE                     __ptext32:
  7768                           	callstack 0
  7769  0035DE                     ___fleq:
  7770                           	callstack 25
  7771  0035DE  0E00               	movlw	0
  7772  0035E0  1401               	andwf	___fleq@ff1^0,w,c
  7773  0035E2  6E09               	movwf	??___fleq^0,c
  7774  0035E4  0E00               	movlw	0
  7775  0035E6  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7776  0035E8  6E0A               	movwf	(??___fleq+1)^0,c
  7777  0035EA  0E80               	movlw	128
  7778  0035EC  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7779  0035EE  6E0B               	movwf	(??___fleq+2)^0,c
  7780  0035F0  0E7F               	movlw	127
  7781  0035F2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7782  0035F4  6E0C               	movwf	(??___fleq+3)^0,c
  7783  0035F6  5009               	movf	??___fleq^0,w,c
  7784  0035F8  100A               	iorwf	(??___fleq+1)^0,w,c
  7785  0035FA  100B               	iorwf	(??___fleq+2)^0,w,c
  7786  0035FC  100C               	iorwf	(??___fleq+3)^0,w,c
  7787  0035FE  A4D8               	btfss	status,2,c
  7788  003600  EF04  F01B         	goto	u3731
  7789  003604  EF06  F01B         	goto	u3730
  7790  003608                     u3731:
  7791  003608  EF0E  F01B         	goto	l3500
  7792  00360C                     u3730:
  7793  00360C  0E00               	movlw	0
  7794  00360E  6E01               	movwf	___fleq@ff1^0,c
  7795  003610  0E00               	movlw	0
  7796  003612  6E02               	movwf	(___fleq@ff1+1)^0,c
  7797  003614  0E00               	movlw	0
  7798  003616  6E03               	movwf	(___fleq@ff1+2)^0,c
  7799  003618  0E00               	movlw	0
  7800  00361A  6E04               	movwf	(___fleq@ff1+3)^0,c
  7801  00361C                     l3500:
  7802  00361C  0E00               	movlw	0
  7803  00361E  1405               	andwf	___fleq@ff2^0,w,c
  7804  003620  6E09               	movwf	??___fleq^0,c
  7805  003622  0E00               	movlw	0
  7806  003624  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7807  003626  6E0A               	movwf	(??___fleq+1)^0,c
  7808  003628  0E80               	movlw	128
  7809  00362A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7810  00362C  6E0B               	movwf	(??___fleq+2)^0,c
  7811  00362E  0E7F               	movlw	127
  7812  003630  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7813  003632  6E0C               	movwf	(??___fleq+3)^0,c
  7814  003634  5009               	movf	??___fleq^0,w,c
  7815  003636  100A               	iorwf	(??___fleq+1)^0,w,c
  7816  003638  100B               	iorwf	(??___fleq+2)^0,w,c
  7817  00363A  100C               	iorwf	(??___fleq+3)^0,w,c
  7818  00363C  A4D8               	btfss	status,2,c
  7819  00363E  EF23  F01B         	goto	u3741
  7820  003642  EF25  F01B         	goto	u3740
  7821  003646                     u3741:
  7822  003646  EF2D  F01B         	goto	l3504
  7823  00364A                     u3740:
  7824  00364A  0E00               	movlw	0
  7825  00364C  6E05               	movwf	___fleq@ff2^0,c
  7826  00364E  0E00               	movlw	0
  7827  003650  6E06               	movwf	(___fleq@ff2+1)^0,c
  7828  003652  0E00               	movlw	0
  7829  003654  6E07               	movwf	(___fleq@ff2+2)^0,c
  7830  003656  0E00               	movlw	0
  7831  003658  6E08               	movwf	(___fleq@ff2+3)^0,c
  7832  00365A                     l3504:
  7833  00365A  5005               	movf	___fleq@ff2^0,w,c
  7834  00365C  1801               	xorwf	___fleq@ff1^0,w,c
  7835  00365E  E10F               	bnz	u3750
  7836  003660  5006               	movf	(___fleq@ff2+1)^0,w,c
  7837  003662  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7838  003664  E10C               	bnz	u3750
  7839  003666  5007               	movf	(___fleq@ff2+2)^0,w,c
  7840  003668  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7841  00366A  E109               	bnz	u3750
  7842  00366C  5008               	movf	(___fleq@ff2+3)^0,w,c
  7843  00366E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7844  003670  B4D8               	btfsc	status,2,c
  7845  003672  EF3D  F01B         	goto	u3751
  7846  003676  EF3F  F01B         	goto	u3750
  7847  00367A                     u3751:
  7848  00367A  EF42  F01B         	goto	l3508
  7849  00367E                     u3750:
  7850  00367E  90D8               	bcf	status,0,c
  7851  003680  EF43  F01B         	goto	l507
  7852  003684                     l3508:
  7853  003684  80D8               	bsf	status,0,c
  7854  003686                     l507:
  7855  003686  0012               	return		;funcret
  7856  003688                     __end_of___fleq:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function ___fldiv *****************
  7860 ;; Defined at:
  7861 ;;		line 11 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  b               4    0[COMRAM] unsigned char 
  7864 ;;  a               4    4[COMRAM] unsigned char 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  grs             4   19[COMRAM] unsigned long 
  7867 ;;  rem             4   12[COMRAM] unsigned long 
  7868 ;;  new_exp         2   17[COMRAM] short 
  7869 ;;  aexp            1   24[COMRAM] unsigned char 
  7870 ;;  bexp            1   23[COMRAM] unsigned char 
  7871 ;;  sign            1   16[COMRAM] unsigned char 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  4    0[COMRAM] unsigned char 
  7874 ;; Registers used:
  7875 ;;		wreg, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7881 ;;      Params:         8       0       0       0       0       0       0       0       0
  7882 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7883 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7884 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7885 ;;Total ram usage:       25 bytes
  7886 ;; Hardware stack levels used: 1
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_efgtoa
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text33
  7895  0021EE                     __ptext33:
  7896                           	callstack 0
  7897  0021EE                     ___fldiv:
  7898                           	callstack 25
  7899  0021EE  5004               	movf	(___fldiv@b+3)^0,w,c
  7900  0021F0  0B80               	andlw	128
  7901  0021F2  6E11               	movwf	___fldiv@sign^0,c
  7902  0021F4  5004               	movf	(___fldiv@b+3)^0,w,c
  7903  0021F6  2404               	addwf	(___fldiv@b+3)^0,w,c
  7904  0021F8  6E18               	movwf	___fldiv@bexp^0,c
  7905  0021FA  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7906  0021FC  EF02  F011         	goto	u3191
  7907  002200  EF04  F011         	goto	u3190
  7908  002204                     u3191:
  7909  002204  EF05  F011         	goto	l3148
  7910  002208                     u3190:
  7911  002208  8018               	bsf	___fldiv@bexp^0,0,c
  7912  00220A                     l3148:
  7913  00220A  5018               	movf	___fldiv@bexp^0,w,c
  7914  00220C  B4D8               	btfsc	status,2,c
  7915  00220E  EF0B  F011         	goto	u3201
  7916  002212  EF0D  F011         	goto	u3200
  7917  002216                     u3201:
  7918  002216  EF22  F011         	goto	l3158
  7919  00221A                     u3200:
  7920  00221A  2818               	incf	___fldiv@bexp^0,w,c
  7921  00221C  A4D8               	btfss	status,2,c
  7922  00221E  EF13  F011         	goto	u3211
  7923  002222  EF15  F011         	goto	u3210
  7924  002226                     u3211:
  7925  002226  EF1D  F011         	goto	l3154
  7926  00222A                     u3210:
  7927  00222A  0E00               	movlw	0
  7928  00222C  6E01               	movwf	___fldiv@b^0,c
  7929  00222E  0E00               	movlw	0
  7930  002230  6E02               	movwf	(___fldiv@b+1)^0,c
  7931  002232  0E00               	movlw	0
  7932  002234  6E03               	movwf	(___fldiv@b+2)^0,c
  7933  002236  0E00               	movlw	0
  7934  002238  6E04               	movwf	(___fldiv@b+3)^0,c
  7935  00223A                     l3154:
  7936  00223A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7937  00223C  0E00               	movlw	0
  7938  00223E  6E04               	movwf	(___fldiv@b+3)^0,c
  7939  002240  EF2A  F011         	goto	l3160
  7940  002244                     l3158:
  7941  002244  0E00               	movlw	0
  7942  002246  6E01               	movwf	___fldiv@b^0,c
  7943  002248  0E00               	movlw	0
  7944  00224A  6E02               	movwf	(___fldiv@b+1)^0,c
  7945  00224C  0E00               	movlw	0
  7946  00224E  6E03               	movwf	(___fldiv@b+2)^0,c
  7947  002250  0E00               	movlw	0
  7948  002252  6E04               	movwf	(___fldiv@b+3)^0,c
  7949  002254                     l3160:
  7950  002254  5008               	movf	(___fldiv@a+3)^0,w,c
  7951  002256  0B80               	andlw	128
  7952  002258  1A11               	xorwf	___fldiv@sign^0,f,c
  7953  00225A  5008               	movf	(___fldiv@a+3)^0,w,c
  7954  00225C  2408               	addwf	(___fldiv@a+3)^0,w,c
  7955  00225E  6E19               	movwf	___fldiv@aexp^0,c
  7956  002260  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7957  002262  EF35  F011         	goto	u3221
  7958  002266  EF37  F011         	goto	u3220
  7959  00226A                     u3221:
  7960  00226A  EF38  F011         	goto	l3168
  7961  00226E                     u3220:
  7962  00226E  8019               	bsf	___fldiv@aexp^0,0,c
  7963  002270                     l3168:
  7964  002270  5019               	movf	___fldiv@aexp^0,w,c
  7965  002272  B4D8               	btfsc	status,2,c
  7966  002274  EF3E  F011         	goto	u3231
  7967  002278  EF40  F011         	goto	u3230
  7968  00227C                     u3231:
  7969  00227C  EF55  F011         	goto	l3178
  7970  002280                     u3230:
  7971  002280  2819               	incf	___fldiv@aexp^0,w,c
  7972  002282  A4D8               	btfss	status,2,c
  7973  002284  EF46  F011         	goto	u3241
  7974  002288  EF48  F011         	goto	u3240
  7975  00228C                     u3241:
  7976  00228C  EF50  F011         	goto	l3174
  7977  002290                     u3240:
  7978  002290  0E00               	movlw	0
  7979  002292  6E05               	movwf	___fldiv@a^0,c
  7980  002294  0E00               	movlw	0
  7981  002296  6E06               	movwf	(___fldiv@a+1)^0,c
  7982  002298  0E00               	movlw	0
  7983  00229A  6E07               	movwf	(___fldiv@a+2)^0,c
  7984  00229C  0E00               	movlw	0
  7985  00229E  6E08               	movwf	(___fldiv@a+3)^0,c
  7986  0022A0                     l3174:
  7987  0022A0  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7988  0022A2  0E00               	movlw	0
  7989  0022A4  6E08               	movwf	(___fldiv@a+3)^0,c
  7990  0022A6  EF5D  F011         	goto	l3180
  7991  0022AA                     l3178:
  7992  0022AA  0E00               	movlw	0
  7993  0022AC  6E05               	movwf	___fldiv@a^0,c
  7994  0022AE  0E00               	movlw	0
  7995  0022B0  6E06               	movwf	(___fldiv@a+1)^0,c
  7996  0022B2  0E00               	movlw	0
  7997  0022B4  6E07               	movwf	(___fldiv@a+2)^0,c
  7998  0022B6  0E00               	movlw	0
  7999  0022B8  6E08               	movwf	(___fldiv@a+3)^0,c
  8000  0022BA                     l3180:
  8001  0022BA  5005               	movf	___fldiv@a^0,w,c
  8002  0022BC  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8003  0022BE  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8004  0022C0  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8005  0022C2  A4D8               	btfss	status,2,c
  8006  0022C4  EF66  F011         	goto	u3251
  8007  0022C8  EF68  F011         	goto	u3250
  8008  0022CC                     u3251:
  8009  0022CC  EF80  F011         	goto	l3192
  8010  0022D0                     u3250:
  8011  0022D0  0E00               	movlw	0
  8012  0022D2  6E01               	movwf	___fldiv@b^0,c
  8013  0022D4  0E00               	movlw	0
  8014  0022D6  6E02               	movwf	(___fldiv@b+1)^0,c
  8015  0022D8  0E00               	movlw	0
  8016  0022DA  6E03               	movwf	(___fldiv@b+2)^0,c
  8017  0022DC  0E00               	movlw	0
  8018  0022DE  6E04               	movwf	(___fldiv@b+3)^0,c
  8019  0022E0  0E80               	movlw	128
  8020  0022E2  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8021  0022E4  0E7F               	movlw	127
  8022  0022E6  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8023  0022E8                     l3186:
  8024  0022E8  5011               	movf	___fldiv@sign^0,w,c
  8025  0022EA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8026  0022EC  C001  F001         	movff	___fldiv@b,?___fldiv
  8027  0022F0  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8028  0022F4  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8029  0022F8  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8030  0022FC  EFC3  F012         	goto	l830
  8031  002300                     l3192:
  8032  002300  5018               	movf	___fldiv@bexp^0,w,c
  8033  002302  A4D8               	btfss	status,2,c
  8034  002304  EF86  F011         	goto	u3261
  8035  002308  EF88  F011         	goto	u3260
  8036  00230C                     u3261:
  8037  00230C  EF92  F011         	goto	l3200
  8038  002310                     u3260:
  8039  002310  0E00               	movlw	0
  8040  002312  6E01               	movwf	?___fldiv^0,c
  8041  002314  0E00               	movlw	0
  8042  002316  6E02               	movwf	(?___fldiv+1)^0,c
  8043  002318  0E00               	movlw	0
  8044  00231A  6E03               	movwf	(?___fldiv+2)^0,c
  8045  00231C  0E00               	movlw	0
  8046  00231E  6E04               	movwf	(?___fldiv+3)^0,c
  8047  002320  EFC3  F012         	goto	l830
  8048  002324                     l3200:
  8049  002324  5019               	movf	___fldiv@aexp^0,w,c
  8050  002326  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8051  00232A  6A0A               	clrf	(??___fldiv+1)^0,c
  8052  00232C  5E09               	subwf	??___fldiv^0,f,c
  8053  00232E  0E00               	movlw	0
  8054  002330  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8055  002332  0E7F               	movlw	127
  8056  002334  2409               	addwf	??___fldiv^0,w,c
  8057  002336  6E12               	movwf	___fldiv@new_exp^0,c
  8058  002338  0E00               	movlw	0
  8059  00233A  200A               	addwfc	(??___fldiv+1)^0,w,c
  8060  00233C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8061  00233E  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8062  002342  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8063  002346  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8064  00234A  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8065  00234E  0E00               	movlw	0
  8066  002350  6E01               	movwf	___fldiv@b^0,c
  8067  002352  0E00               	movlw	0
  8068  002354  6E02               	movwf	(___fldiv@b+1)^0,c
  8069  002356  0E00               	movlw	0
  8070  002358  6E03               	movwf	(___fldiv@b+2)^0,c
  8071  00235A  0E00               	movlw	0
  8072  00235C  6E04               	movwf	(___fldiv@b+3)^0,c
  8073  00235E  0E00               	movlw	0
  8074  002360  6E14               	movwf	___fldiv@grs^0,c
  8075  002362  0E00               	movlw	0
  8076  002364  6E15               	movwf	(___fldiv@grs+1)^0,c
  8077  002366  0E00               	movlw	0
  8078  002368  6E16               	movwf	(___fldiv@grs+2)^0,c
  8079  00236A  0E00               	movlw	0
  8080  00236C  6E17               	movwf	(___fldiv@grs+3)^0,c
  8081  00236E  0E00               	movlw	0
  8082  002370  6E19               	movwf	___fldiv@aexp^0,c
  8083  002372  EFF3  F011         	goto	l832
  8084  002376                     l3210:
  8085  002376  5019               	movf	___fldiv@aexp^0,w,c
  8086  002378  B4D8               	btfsc	status,2,c
  8087  00237A  EFC1  F011         	goto	u3271
  8088  00237E  EFC3  F011         	goto	u3270
  8089  002382                     u3271:
  8090  002382  EFDA  F011         	goto	l3218
  8091  002386                     u3270:
  8092  002386  90D8               	bcf	status,0,c
  8093  002388  360D               	rlcf	___fldiv@rem^0,f,c
  8094  00238A  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8095  00238C  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8096  00238E  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8097  002390  90D8               	bcf	status,0,c
  8098  002392  3601               	rlcf	___fldiv@b^0,f,c
  8099  002394  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8100  002396  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8101  002398  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8102  00239A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8103  00239C  EFD2  F011         	goto	u3281
  8104  0023A0  EFD4  F011         	goto	u3280
  8105  0023A4                     u3281:
  8106  0023A4  EFD5  F011         	goto	l835
  8107  0023A8                     u3280:
  8108  0023A8  8001               	bsf	___fldiv@b^0,0,c
  8109  0023AA                     l835:
  8110  0023AA  90D8               	bcf	status,0,c
  8111  0023AC  3614               	rlcf	___fldiv@grs^0,f,c
  8112  0023AE  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8113  0023B0  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8114  0023B2  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8115  0023B4                     l3218:
  8116  0023B4  5005               	movf	___fldiv@a^0,w,c
  8117  0023B6  5C0D               	subwf	___fldiv@rem^0,w,c
  8118  0023B8  5006               	movf	(___fldiv@a+1)^0,w,c
  8119  0023BA  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8120  0023BC  5007               	movf	(___fldiv@a+2)^0,w,c
  8121  0023BE  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8122  0023C0  5008               	movf	(___fldiv@a+3)^0,w,c
  8123  0023C2  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8124  0023C4  A0D8               	btfss	status,0,c
  8125  0023C6  EFE7  F011         	goto	u3291
  8126  0023CA  EFE9  F011         	goto	u3290
  8127  0023CE                     u3291:
  8128  0023CE  EFF2  F011         	goto	l3224
  8129  0023D2                     u3290:
  8130  0023D2  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8131  0023D4  5005               	movf	___fldiv@a^0,w,c
  8132  0023D6  5E0D               	subwf	___fldiv@rem^0,f,c
  8133  0023D8  5006               	movf	(___fldiv@a+1)^0,w,c
  8134  0023DA  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8135  0023DC  5007               	movf	(___fldiv@a+2)^0,w,c
  8136  0023DE  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8137  0023E0  5008               	movf	(___fldiv@a+3)^0,w,c
  8138  0023E2  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8139  0023E4                     l3224:
  8140  0023E4  2A19               	incf	___fldiv@aexp^0,f,c
  8141  0023E6                     l832:
  8142  0023E6  0E19               	movlw	25
  8143  0023E8  6419               	cpfsgt	___fldiv@aexp^0,c
  8144  0023EA  EFF9  F011         	goto	u3301
  8145  0023EE  EFFB  F011         	goto	u3300
  8146  0023F2                     u3301:
  8147  0023F2  EFBB  F011         	goto	l3210
  8148  0023F6                     u3300:
  8149  0023F6  500D               	movf	___fldiv@rem^0,w,c
  8150  0023F8  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8151  0023FA  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8152  0023FC  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8153  0023FE  B4D8               	btfsc	status,2,c
  8154  002400  EF04  F012         	goto	u3311
  8155  002404  EF06  F012         	goto	u3310
  8156  002408                     u3311:
  8157  002408  EF1E  F012         	goto	l3236
  8158  00240C                     u3310:
  8159  00240C  8014               	bsf	___fldiv@grs^0,0,c
  8160  00240E  EF1E  F012         	goto	l3236
  8161  002412                     l3230:
  8162  002412  90D8               	bcf	status,0,c
  8163  002414  3601               	rlcf	___fldiv@b^0,f,c
  8164  002416  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8165  002418  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8166  00241A  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8167  00241C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8168  00241E  EF13  F012         	goto	u3321
  8169  002422  EF15  F012         	goto	u3320
  8170  002426                     u3321:
  8171  002426  EF16  F012         	goto	l841
  8172  00242A                     u3320:
  8173  00242A  8001               	bsf	___fldiv@b^0,0,c
  8174  00242C                     l841:
  8175  00242C  90D8               	bcf	status,0,c
  8176  00242E  3614               	rlcf	___fldiv@grs^0,f,c
  8177  002430  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8178  002432  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8179  002434  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8180  002436  0612               	decf	___fldiv@new_exp^0,f,c
  8181  002438  A0D8               	btfss	status,0,c
  8182  00243A  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8183  00243C                     l3236:
  8184  00243C  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8185  00243E  EF23  F012         	goto	u3331
  8186  002442  EF25  F012         	goto	u3330
  8187  002446                     u3331:
  8188  002446  EF09  F012         	goto	l3230
  8189  00244A                     u3330:
  8190  00244A  0E00               	movlw	0
  8191  00244C  6E19               	movwf	___fldiv@aexp^0,c
  8192  00244E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8193  002450  EF2C  F012         	goto	u3341
  8194  002454  EF2E  F012         	goto	u3340
  8195  002458                     u3341:
  8196  002458  EF52  F012         	goto	l843
  8197  00245C                     u3340:
  8198  00245C  0EFF               	movlw	255
  8199  00245E  1414               	andwf	___fldiv@grs^0,w,c
  8200  002460  6E09               	movwf	??___fldiv^0,c
  8201  002462  0EFF               	movlw	255
  8202  002464  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8203  002466  6E0A               	movwf	(??___fldiv+1)^0,c
  8204  002468  0EFF               	movlw	255
  8205  00246A  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8206  00246C  6E0B               	movwf	(??___fldiv+2)^0,c
  8207  00246E  0E7F               	movlw	127
  8208  002470  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8209  002472  6E0C               	movwf	(??___fldiv+3)^0,c
  8210  002474  5009               	movf	??___fldiv^0,w,c
  8211  002476  100A               	iorwf	(??___fldiv+1)^0,w,c
  8212  002478  100B               	iorwf	(??___fldiv+2)^0,w,c
  8213  00247A  100C               	iorwf	(??___fldiv+3)^0,w,c
  8214  00247C  B4D8               	btfsc	status,2,c
  8215  00247E  EF43  F012         	goto	u3351
  8216  002482  EF45  F012         	goto	u3350
  8217  002486                     u3351:
  8218  002486  EF49  F012         	goto	l844
  8219  00248A                     u3350:
  8220  00248A                     l3244:
  8221  00248A  0E01               	movlw	1
  8222  00248C  6E19               	movwf	___fldiv@aexp^0,c
  8223  00248E  EF52  F012         	goto	l843
  8224  002492                     l844:
  8225  002492  A001               	btfss	___fldiv@b^0,0,c
  8226  002494  EF4E  F012         	goto	u3361
  8227  002498  EF50  F012         	goto	u3360
  8228  00249C                     u3361:
  8229  00249C  EF52  F012         	goto	l843
  8230  0024A0                     u3360:
  8231  0024A0  EF45  F012         	goto	l3244
  8232  0024A4                     l843:
  8233  0024A4  5019               	movf	___fldiv@aexp^0,w,c
  8234  0024A6  B4D8               	btfsc	status,2,c
  8235  0024A8  EF58  F012         	goto	u3371
  8236  0024AC  EF5A  F012         	goto	u3370
  8237  0024B0                     u3371:
  8238  0024B0  EF7E  F012         	goto	l3256
  8239  0024B4                     u3370:
  8240  0024B4  0E01               	movlw	1
  8241  0024B6  2601               	addwf	___fldiv@b^0,f,c
  8242  0024B8  0E00               	movlw	0
  8243  0024BA  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8244  0024BC  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8245  0024BE  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8246  0024C0  A004               	btfss	(___fldiv@b+3)^0,0,c
  8247  0024C2  EF65  F012         	goto	u3381
  8248  0024C6  EF67  F012         	goto	u3380
  8249  0024CA                     u3381:
  8250  0024CA  EF7E  F012         	goto	l3256
  8251  0024CE                     u3380:
  8252  0024CE  C001  F009         	movff	___fldiv@b,??___fldiv
  8253  0024D2  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8254  0024D6  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8255  0024DA  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8256  0024DE  340C               	rlcf	(??___fldiv+3)^0,w,c
  8257  0024E0  320C               	rrcf	(??___fldiv+3)^0,f,c
  8258  0024E2  320B               	rrcf	(??___fldiv+2)^0,f,c
  8259  0024E4  320A               	rrcf	(??___fldiv+1)^0,f,c
  8260  0024E6  3209               	rrcf	??___fldiv^0,f,c
  8261  0024E8  C009  F001         	movff	??___fldiv,___fldiv@b
  8262  0024EC  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8263  0024F0  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8264  0024F4  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8265  0024F8  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8266  0024FA  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8267  0024FC                     l3256:
  8268  0024FC  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8269  0024FE  EF89  F012         	goto	u3391
  8270  002502  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8271  002504  E108               	bnz	u3390
  8272  002506  2812               	incf	___fldiv@new_exp^0,w,c
  8273  002508  A0D8               	btfss	status,0,c
  8274  00250A  EF89  F012         	goto	u3391
  8275  00250E  EF8B  F012         	goto	u3390
  8276  002512                     u3391:
  8277  002512  EF96  F012         	goto	l3260
  8278  002516                     u3390:
  8279  002516  0E00               	movlw	0
  8280  002518  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8281  00251A  6812               	setf	___fldiv@new_exp^0,c
  8282  00251C  0E00               	movlw	0
  8283  00251E  6E01               	movwf	___fldiv@b^0,c
  8284  002520  0E00               	movlw	0
  8285  002522  6E02               	movwf	(___fldiv@b+1)^0,c
  8286  002524  0E00               	movlw	0
  8287  002526  6E03               	movwf	(___fldiv@b+2)^0,c
  8288  002528  0E00               	movlw	0
  8289  00252A  6E04               	movwf	(___fldiv@b+3)^0,c
  8290  00252C                     l3260:
  8291  00252C  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8292  00252E  EFA3  F012         	goto	u3400
  8293  002532  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8294  002534  E106               	bnz	u3401
  8295  002536  0412               	decf	___fldiv@new_exp^0,w,c
  8296  002538  B0D8               	btfsc	status,0,c
  8297  00253A  EFA1  F012         	goto	u3401
  8298  00253E  EFA3  F012         	goto	u3400
  8299  002542                     u3401:
  8300  002542  EFB1  F012         	goto	l3264
  8301  002546                     u3400:
  8302  002546  0E00               	movlw	0
  8303  002548  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8304  00254A  0E00               	movlw	0
  8305  00254C  6E12               	movwf	___fldiv@new_exp^0,c
  8306  00254E  0E00               	movlw	0
  8307  002550  6E01               	movwf	___fldiv@b^0,c
  8308  002552  0E00               	movlw	0
  8309  002554  6E02               	movwf	(___fldiv@b+1)^0,c
  8310  002556  0E00               	movlw	0
  8311  002558  6E03               	movwf	(___fldiv@b+2)^0,c
  8312  00255A  0E00               	movlw	0
  8313  00255C  6E04               	movwf	(___fldiv@b+3)^0,c
  8314  00255E  0E00               	movlw	0
  8315  002560  6E11               	movwf	___fldiv@sign^0,c
  8316  002562                     l3264:
  8317  002562  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8318  002566  A018               	btfss	___fldiv@bexp^0,0,c
  8319  002568  EFB8  F012         	goto	u3411
  8320  00256C  EFBA  F012         	goto	u3410
  8321  002570                     u3411:
  8322  002570  EFBD  F012         	goto	l3270
  8323  002574                     u3410:
  8324  002574  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8325  002576  EFBE  F012         	goto	l3272
  8326  00257A                     l3270:
  8327  00257A  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8328  00257C                     l3272:
  8329  00257C  90D8               	bcf	status,0,c
  8330  00257E  3018               	rrcf	___fldiv@bexp^0,w,c
  8331  002580  6E04               	movwf	(___fldiv@b+3)^0,c
  8332  002582  EF74  F011         	goto	l3186
  8333  002586                     l830:
  8334  002586  0012               	return		;funcret
  8335  002588                     __end_of___fldiv:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function ___awmod *****************
  8339 ;; Defined at:
  8340 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;  dividend        2    0[COMRAM] int 
  8343 ;;  divisor         2    2[COMRAM] int 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  sign            1    5[COMRAM] unsigned char 
  8346 ;;  counter         1    4[COMRAM] unsigned char 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  2    0[COMRAM] int 
  8349 ;; Registers used:
  8350 ;;		wreg, status,2, status,0
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8356 ;;      Params:         4       0       0       0       0       0       0       0       0
  8357 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8359 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8360 ;;Total ram usage:        6 bytes
  8361 ;; Hardware stack levels used: 1
  8362 ;; This function calls:
  8363 ;;		Nothing
  8364 ;; This function is called by:
  8365 ;;		_efgtoa
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text34
  8370  00352E                     __ptext34:
  8371                           	callstack 0
  8372  00352E                     ___awmod:
  8373                           	callstack 25
  8374  00352E  0E00               	movlw	0
  8375  003530  6E06               	movwf	___awmod@sign^0,c
  8376  003532  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8377  003534  EFA0  F01A         	goto	u3670
  8378  003538  EF9E  F01A         	goto	u3671
  8379  00353C                     u3671:
  8380  00353C  EFA6  F01A         	goto	l3468
  8381  003540                     u3670:
  8382  003540  6C01               	negf	___awmod@dividend^0,c
  8383  003542  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8384  003544  B0D8               	btfsc	status,0,c
  8385  003546  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8386  003548  0E01               	movlw	1
  8387  00354A  6E06               	movwf	___awmod@sign^0,c
  8388  00354C                     l3468:
  8389  00354C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8390  00354E  EFAD  F01A         	goto	u3680
  8391  003552  EFAB  F01A         	goto	u3681
  8392  003556                     u3681:
  8393  003556  EFB1  F01A         	goto	l3472
  8394  00355A                     u3680:
  8395  00355A  6C03               	negf	___awmod@divisor^0,c
  8396  00355C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8397  00355E  B0D8               	btfsc	status,0,c
  8398  003560  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8399  003562                     l3472:
  8400  003562  5003               	movf	___awmod@divisor^0,w,c
  8401  003564  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8402  003566  B4D8               	btfsc	status,2,c
  8403  003568  EFB8  F01A         	goto	u3691
  8404  00356C  EFBA  F01A         	goto	u3690
  8405  003570                     u3691:
  8406  003570  EFDE  F01A         	goto	l3488
  8407  003574                     u3690:
  8408  003574  0E01               	movlw	1
  8409  003576  6E05               	movwf	___awmod@counter^0,c
  8410  003578  EFC2  F01A         	goto	l3478
  8411  00357C                     l3476:
  8412  00357C  90D8               	bcf	status,0,c
  8413  00357E  3603               	rlcf	___awmod@divisor^0,f,c
  8414  003580  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8415  003582  2A05               	incf	___awmod@counter^0,f,c
  8416  003584                     l3478:
  8417  003584  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8418  003586  EFC7  F01A         	goto	u3701
  8419  00358A  EFC9  F01A         	goto	u3700
  8420  00358E                     u3701:
  8421  00358E  EFBE  F01A         	goto	l3476
  8422  003592                     u3700:
  8423  003592                     l3480:
  8424  003592  5003               	movf	___awmod@divisor^0,w,c
  8425  003594  5C01               	subwf	___awmod@dividend^0,w,c
  8426  003596  5004               	movf	(___awmod@divisor+1)^0,w,c
  8427  003598  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8428  00359A  A0D8               	btfss	status,0,c
  8429  00359C  EFD2  F01A         	goto	u3711
  8430  0035A0  EFD4  F01A         	goto	u3710
  8431  0035A4                     u3711:
  8432  0035A4  EFD8  F01A         	goto	l3484
  8433  0035A8                     u3710:
  8434  0035A8  5003               	movf	___awmod@divisor^0,w,c
  8435  0035AA  5E01               	subwf	___awmod@dividend^0,f,c
  8436  0035AC  5004               	movf	(___awmod@divisor+1)^0,w,c
  8437  0035AE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8438  0035B0                     l3484:
  8439  0035B0  90D8               	bcf	status,0,c
  8440  0035B2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8441  0035B4  3203               	rrcf	___awmod@divisor^0,f,c
  8442  0035B6  2E05               	decfsz	___awmod@counter^0,f,c
  8443  0035B8  EFC9  F01A         	goto	l3480
  8444  0035BC                     l3488:
  8445  0035BC  5006               	movf	___awmod@sign^0,w,c
  8446  0035BE  B4D8               	btfsc	status,2,c
  8447  0035C0  EFE4  F01A         	goto	u3721
  8448  0035C4  EFE6  F01A         	goto	u3720
  8449  0035C8                     u3721:
  8450  0035C8  EFEA  F01A         	goto	l3492
  8451  0035CC                     u3720:
  8452  0035CC  6C01               	negf	___awmod@dividend^0,c
  8453  0035CE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8454  0035D0  B0D8               	btfsc	status,0,c
  8455  0035D2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8456  0035D4                     l3492:
  8457  0035D4  C001  F001         	movff	___awmod@dividend,?___awmod
  8458  0035D8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8459  0035DC  0012               	return		;funcret
  8460  0035DE                     __end_of___awmod:
  8461                           	callstack 0
  8462                           
  8463 ;; *************** function ___awdiv *****************
  8464 ;; Defined at:
  8465 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  dividend        2    0[COMRAM] int 
  8468 ;;  divisor         2    2[COMRAM] int 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  quotient        2    6[COMRAM] int 
  8471 ;;  sign            1    5[COMRAM] unsigned char 
  8472 ;;  counter         1    4[COMRAM] unsigned char 
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  2    0[COMRAM] int 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2, status,0
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8482 ;;      Params:         4       0       0       0       0       0       0       0       0
  8483 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8485 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8486 ;;Total ram usage:        8 bytes
  8487 ;; Hardware stack levels used: 1
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_efgtoa
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text35
  8496  00346A                     __ptext35:
  8497                           	callstack 0
  8498  00346A                     ___awdiv:
  8499                           	callstack 25
  8500  00346A  0E00               	movlw	0
  8501  00346C  6E06               	movwf	___awdiv@sign^0,c
  8502  00346E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8503  003470  EF3E  F01A         	goto	u3610
  8504  003474  EF3C  F01A         	goto	u3611
  8505  003478                     u3611:
  8506  003478  EF44  F01A         	goto	l3424
  8507  00347C                     u3610:
  8508  00347C  6C03               	negf	___awdiv@divisor^0,c
  8509  00347E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8510  003480  B0D8               	btfsc	status,0,c
  8511  003482  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8512  003484  0E01               	movlw	1
  8513  003486  6E06               	movwf	___awdiv@sign^0,c
  8514  003488                     l3424:
  8515  003488  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8516  00348A  EF4B  F01A         	goto	u3620
  8517  00348E  EF49  F01A         	goto	u3621
  8518  003492                     u3621:
  8519  003492  EF51  F01A         	goto	l3430
  8520  003496                     u3620:
  8521  003496  6C01               	negf	___awdiv@dividend^0,c
  8522  003498  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8523  00349A  B0D8               	btfsc	status,0,c
  8524  00349C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8525  00349E  0E01               	movlw	1
  8526  0034A0  1A06               	xorwf	___awdiv@sign^0,f,c
  8527  0034A2                     l3430:
  8528  0034A2  0E00               	movlw	0
  8529  0034A4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8530  0034A6  0E00               	movlw	0
  8531  0034A8  6E07               	movwf	___awdiv@quotient^0,c
  8532  0034AA  5003               	movf	___awdiv@divisor^0,w,c
  8533  0034AC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8534  0034AE  B4D8               	btfsc	status,2,c
  8535  0034B0  EF5C  F01A         	goto	u3631
  8536  0034B4  EF5E  F01A         	goto	u3630
  8537  0034B8                     u3631:
  8538  0034B8  EF86  F01A         	goto	l3452
  8539  0034BC                     u3630:
  8540  0034BC  0E01               	movlw	1
  8541  0034BE  6E05               	movwf	___awdiv@counter^0,c
  8542  0034C0  EF66  F01A         	goto	l3438
  8543  0034C4                     l3436:
  8544  0034C4  90D8               	bcf	status,0,c
  8545  0034C6  3603               	rlcf	___awdiv@divisor^0,f,c
  8546  0034C8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8547  0034CA  2A05               	incf	___awdiv@counter^0,f,c
  8548  0034CC                     l3438:
  8549  0034CC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8550  0034CE  EF6B  F01A         	goto	u3641
  8551  0034D2  EF6D  F01A         	goto	u3640
  8552  0034D6                     u3641:
  8553  0034D6  EF62  F01A         	goto	l3436
  8554  0034DA                     u3640:
  8555  0034DA                     l3440:
  8556  0034DA  90D8               	bcf	status,0,c
  8557  0034DC  3607               	rlcf	___awdiv@quotient^0,f,c
  8558  0034DE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8559  0034E0  5003               	movf	___awdiv@divisor^0,w,c
  8560  0034E2  5C01               	subwf	___awdiv@dividend^0,w,c
  8561  0034E4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8562  0034E6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8563  0034E8  A0D8               	btfss	status,0,c
  8564  0034EA  EF79  F01A         	goto	u3651
  8565  0034EE  EF7B  F01A         	goto	u3650
  8566  0034F2                     u3651:
  8567  0034F2  EF80  F01A         	goto	l3448
  8568  0034F6                     u3650:
  8569  0034F6  5003               	movf	___awdiv@divisor^0,w,c
  8570  0034F8  5E01               	subwf	___awdiv@dividend^0,f,c
  8571  0034FA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8572  0034FC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8573  0034FE  8007               	bsf	___awdiv@quotient^0,0,c
  8574  003500                     l3448:
  8575  003500  90D8               	bcf	status,0,c
  8576  003502  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8577  003504  3203               	rrcf	___awdiv@divisor^0,f,c
  8578  003506  2E05               	decfsz	___awdiv@counter^0,f,c
  8579  003508  EF6D  F01A         	goto	l3440
  8580  00350C                     l3452:
  8581  00350C  5006               	movf	___awdiv@sign^0,w,c
  8582  00350E  B4D8               	btfsc	status,2,c
  8583  003510  EF8C  F01A         	goto	u3661
  8584  003514  EF8E  F01A         	goto	u3660
  8585  003518                     u3661:
  8586  003518  EF92  F01A         	goto	l3456
  8587  00351C                     u3660:
  8588  00351C  6C07               	negf	___awdiv@quotient^0,c
  8589  00351E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8590  003520  B0D8               	btfsc	status,0,c
  8591  003522  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8592  003524                     l3456:
  8593  003524  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8594  003528  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8595  00352C  0012               	return		;funcret
  8596  00352E                     __end_of___awdiv:
  8597                           	callstack 0
  8598                           
  8599 ;; *************** function _atoi *****************
  8600 ;; Defined at:
  8601 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8604 ;;		 -> STR_5(6), 
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;  n               2   20[COMRAM] int 
  8607 ;;  neg             2   13[COMRAM] int 
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  2    7[COMRAM] int 
  8610 ;; Registers used:
  8611 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8617 ;;      Params:         2       0       0       0       0       0       0       0       0
  8618 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8619 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8620 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8621 ;;Total ram usage:       15 bytes
  8622 ;; Hardware stack levels used: 1
  8623 ;; Hardware stack levels required when called: 1
  8624 ;; This function calls:
  8625 ;;		___wmul
  8626 ;;		_isdigit
  8627 ;;		_isspace
  8628 ;; This function is called by:
  8629 ;;		_vfpfcnvrt
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text36
  8634  002B7A                     __ptext36:
  8635                           	callstack 0
  8636  002B7A                     _atoi:
  8637                           	callstack 25
  8638  002B7A  0E00               	movlw	0
  8639  002B7C  6E16               	movwf	(atoi@n+1)^0,c
  8640  002B7E  0E00               	movlw	0
  8641  002B80  6E15               	movwf	atoi@n^0,c
  8642  002B82  0E00               	movlw	0
  8643  002B84  6E0F               	movwf	(atoi@neg+1)^0,c
  8644  002B86  0E00               	movlw	0
  8645  002B88  6E0E               	movwf	atoi@neg^0,c
  8646  002B8A  EFC9  F015         	goto	l4000
  8647  002B8E                     l3998:
  8648  002B8E  4A08               	infsnz	atoi@s^0,f,c
  8649  002B90  2A09               	incf	(atoi@s+1)^0,f,c
  8650  002B92                     l4000:
  8651  002B92  0E01               	movlw	1
  8652  002B94  6E14               	movwf	_atoi$1074^0,c
  8653  002B96  C008  FFF6         	movff	atoi@s,tblptrl
  8654  002B9A  C009  FFF7         	movff	atoi@s+1,tblptrh
  8655  002B9E                     	if	0	;tblptru may be non-zero
  8656  002B9E                     	endif
  8657  002B9E                     	if	0	;tblptru may be non-zero
  8658  002B9E                     	endif
  8659  002B9E  0008               	tblrd		*
  8660  002BA0  50F5               	movf	tablat,w,c
  8661  002BA2  0A20               	xorlw	32
  8662  002BA4  B4D8               	btfsc	status,2,c
  8663  002BA6  EFD7  F015         	goto	u4731
  8664  002BAA  EFD9  F015         	goto	u4730
  8665  002BAE                     u4731:
  8666  002BAE  EFF6  F015         	goto	l4008
  8667  002BB2                     u4730:
  8668  002BB2  0EF7               	movlw	247
  8669  002BB4  6E0A               	movwf	??_atoi^0,c
  8670  002BB6  0EFF               	movlw	255
  8671  002BB8  6E0B               	movwf	(??_atoi+1)^0,c
  8672  002BBA  C008  FFF6         	movff	atoi@s,tblptrl
  8673  002BBE  C009  FFF7         	movff	atoi@s+1,tblptrh
  8674  002BC2                     	if	0	;tblptru may be non-zero
  8675  002BC2                     	endif
  8676  002BC2                     	if	0	;tblptru may be non-zero
  8677  002BC2                     	endif
  8678  002BC2  0008               	tblrd		*
  8679  002BC4  50F5               	movf	tablat,w,c
  8680  002BC6  6E0C               	movwf	(??_atoi+2)^0,c
  8681  002BC8  6A0D               	clrf	(??_atoi+3)^0,c
  8682  002BCA  500A               	movf	??_atoi^0,w,c
  8683  002BCC  260C               	addwf	(??_atoi+2)^0,f,c
  8684  002BCE  500B               	movf	(??_atoi+1)^0,w,c
  8685  002BD0  220D               	addwfc	(??_atoi+3)^0,f,c
  8686  002BD2  500D               	movf	(??_atoi+3)^0,w,c
  8687  002BD4  E109               	bnz	u4740
  8688  002BD6  0E05               	movlw	5
  8689  002BD8  5C0C               	subwf	(??_atoi+2)^0,w,c
  8690  002BDA  A0D8               	btfss	status,0,c
  8691  002BDC  EFF2  F015         	goto	u4741
  8692  002BE0  EFF4  F015         	goto	u4740
  8693  002BE4                     u4741:
  8694  002BE4  EFF6  F015         	goto	l4008
  8695  002BE8                     u4740:
  8696  002BE8  0E00               	movlw	0
  8697  002BEA  6E14               	movwf	_atoi$1074^0,c
  8698  002BEC                     l4008:
  8699  002BEC  C014  F010         	movff	_atoi$1074,_atoi$1073
  8700  002BF0  6A11               	clrf	(_atoi$1073+1)^0,c
  8701  002BF2  5010               	movf	_atoi$1073^0,w,c
  8702  002BF4  1011               	iorwf	(_atoi$1073+1)^0,w,c
  8703  002BF6  A4D8               	btfss	status,2,c
  8704  002BF8  EF00  F016         	goto	u4751
  8705  002BFC  EF02  F016         	goto	u4750
  8706  002C00                     u4751:
  8707  002C00  EFC7  F015         	goto	l3998
  8708  002C04                     u4750:
  8709  002C04  EF0C  F016         	goto	l4018
  8710  002C08                     l4014:
  8711  002C08  0E00               	movlw	0
  8712  002C0A  6E0F               	movwf	(atoi@neg+1)^0,c
  8713  002C0C  0E01               	movlw	1
  8714  002C0E  6E0E               	movwf	atoi@neg^0,c
  8715  002C10                     l4016:
  8716  002C10  4A08               	infsnz	atoi@s^0,f,c
  8717  002C12  2A09               	incf	(atoi@s+1)^0,f,c
  8718  002C14  EF41  F016         	goto	l4024
  8719  002C18                     l4018:
  8720  002C18  C008  FFF6         	movff	atoi@s,tblptrl
  8721  002C1C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8722  002C20                     	if	0	;tblptru may be non-zero
  8723  002C20                     	endif
  8724  002C20                     	if	0	;tblptru may be non-zero
  8725  002C20                     	endif
  8726  002C20  0008               	tblrd		*
  8727  002C22  50F5               	movf	tablat,w,c
  8728  002C24  6E0A               	movwf	??_atoi^0,c
  8729  002C26  6A0B               	clrf	(??_atoi+1)^0,c
  8730                           
  8731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8732                           ; Switch size 1, requested type "simple"
  8733                           ; Number of cases is 1, Range of values is 0 to 0
  8734                           ; switch strategies available:
  8735                           ; Name         Instructions Cycles
  8736                           ; simple_byte            4     3 (average)
  8737                           ;	Chosen strategy is simple_byte
  8738  002C28  500B               	movf	(??_atoi+1)^0,w,c
  8739  002C2A  0A00               	xorlw	0	; case 0
  8740  002C2C  B4D8               	btfsc	status,2,c
  8741  002C2E  EF1B  F016         	goto	l4554
  8742  002C32  EF41  F016         	goto	l4024
  8743  002C36                     l4554:
  8744                           
  8745                           ; Switch size 1, requested type "simple"
  8746                           ; Number of cases is 2, Range of values is 43 to 45
  8747                           ; switch strategies available:
  8748                           ; Name         Instructions Cycles
  8749                           ; simple_byte            7     4 (average)
  8750                           ;	Chosen strategy is simple_byte
  8751  002C36  500A               	movf	??_atoi^0,w,c
  8752  002C38  0A2B               	xorlw	43	; case 43
  8753  002C3A  B4D8               	btfsc	status,2,c
  8754  002C3C  EF08  F016         	goto	l4016
  8755  002C40  0A06               	xorlw	6	; case 45
  8756  002C42  B4D8               	btfsc	status,2,c
  8757  002C44  EF04  F016         	goto	l4014
  8758  002C48  EF41  F016         	goto	l4024
  8759  002C4C                     l4020:
  8760  002C4C  C015  F001         	movff	atoi@n,___wmul@multiplier
  8761  002C50  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8762  002C54  0E00               	movlw	0
  8763  002C56  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8764  002C58  0E0A               	movlw	10
  8765  002C5A  6E03               	movwf	___wmul@multiplicand^0,c
  8766  002C5C  EC66  F01E         	call	___wmul	;wreg free
  8767  002C60  C008  FFF6         	movff	atoi@s,tblptrl
  8768  002C64  C009  FFF7         	movff	atoi@s+1,tblptrh
  8769  002C68                     	if	0	;tblptru may be non-zero
  8770  002C68                     	endif
  8771  002C68                     	if	0	;tblptru may be non-zero
  8772  002C68                     	endif
  8773  002C68  0008               	tblrd		*
  8774  002C6A  50F5               	movf	tablat,w,c
  8775  002C6C  5E01               	subwf	?___wmul^0,f,c
  8776  002C6E  0E00               	movlw	0
  8777  002C70  5A02               	subwfb	(?___wmul+1)^0,f,c
  8778  002C72  0E30               	movlw	48
  8779  002C74  2401               	addwf	?___wmul^0,w,c
  8780  002C76  6E15               	movwf	atoi@n^0,c
  8781  002C78  0E00               	movlw	0
  8782  002C7A  2002               	addwfc	(?___wmul+1)^0,w,c
  8783  002C7C  6E16               	movwf	(atoi@n+1)^0,c
  8784  002C7E  EF08  F016         	goto	l4016
  8785  002C82                     l4024:
  8786  002C82  0ED0               	movlw	208
  8787  002C84  6E0A               	movwf	??_atoi^0,c
  8788  002C86  0EFF               	movlw	255
  8789  002C88  6E0B               	movwf	(??_atoi+1)^0,c
  8790  002C8A  C008  FFF6         	movff	atoi@s,tblptrl
  8791  002C8E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8792  002C92                     	if	0	;tblptru may be non-zero
  8793  002C92                     	endif
  8794  002C92                     	if	0	;tblptru may be non-zero
  8795  002C92                     	endif
  8796  002C92  0008               	tblrd		*
  8797  002C94  50F5               	movf	tablat,w,c
  8798  002C96  6E0C               	movwf	(??_atoi+2)^0,c
  8799  002C98  6A0D               	clrf	(??_atoi+3)^0,c
  8800  002C9A  500A               	movf	??_atoi^0,w,c
  8801  002C9C  260C               	addwf	(??_atoi+2)^0,f,c
  8802  002C9E  500B               	movf	(??_atoi+1)^0,w,c
  8803  002CA0  220D               	addwfc	(??_atoi+3)^0,f,c
  8804  002CA2  500D               	movf	(??_atoi+3)^0,w,c
  8805  002CA4  E10A               	bnz	u4760
  8806  002CA6  0E0A               	movlw	10
  8807  002CA8  5C0C               	subwf	(??_atoi+2)^0,w,c
  8808  002CAA  A0D8               	btfss	status,0,c
  8809  002CAC  EF5A  F016         	goto	u4761
  8810  002CB0  EF5D  F016         	goto	u4760
  8811  002CB4                     u4761:
  8812  002CB4  0E01               	movlw	1
  8813  002CB6  EF5E  F016         	goto	u4770
  8814  002CBA                     u4760:
  8815  002CBA  0E00               	movlw	0
  8816  002CBC                     u4770:
  8817  002CBC  6E12               	movwf	_atoi$1075^0,c
  8818  002CBE  6A13               	clrf	(_atoi$1075+1)^0,c
  8819  002CC0  5012               	movf	_atoi$1075^0,w,c
  8820  002CC2  1013               	iorwf	(_atoi$1075+1)^0,w,c
  8821  002CC4  A4D8               	btfss	status,2,c
  8822  002CC6  EF67  F016         	goto	u4781
  8823  002CCA  EF69  F016         	goto	u4780
  8824  002CCE                     u4781:
  8825  002CCE  EF26  F016         	goto	l4020
  8826  002CD2                     u4780:
  8827  002CD2  500E               	movf	atoi@neg^0,w,c
  8828  002CD4  100F               	iorwf	(atoi@neg+1)^0,w,c
  8829  002CD6  A4D8               	btfss	status,2,c
  8830  002CD8  EF70  F016         	goto	u4791
  8831  002CDC  EF72  F016         	goto	u4790
  8832  002CE0                     u4791:
  8833  002CE0  EF80  F016         	goto	l1135
  8834  002CE4                     u4790:
  8835  002CE4  C015  F00A         	movff	atoi@n,??_atoi
  8836  002CE8  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8837  002CEC  1E0A               	comf	??_atoi^0,f,c
  8838  002CEE  1E0B               	comf	(??_atoi+1)^0,f,c
  8839  002CF0  4A0A               	infsnz	??_atoi^0,f,c
  8840  002CF2  2A0B               	incf	(??_atoi+1)^0,f,c
  8841  002CF4  C00A  F008         	movff	??_atoi,?_atoi
  8842  002CF8  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8843  002CFC  EF84  F016         	goto	l1138
  8844  002D00                     l1135:
  8845  002D00  C015  F008         	movff	atoi@n,?_atoi
  8846  002D04  C016  F009         	movff	atoi@n+1,?_atoi+1
  8847  002D08                     l1138:
  8848  002D08  0012               	return		;funcret
  8849  002D0A                     __end_of_atoi:
  8850                           	callstack 0
  8851                           
  8852 ;; *************** function _isspace *****************
  8853 ;; Defined at:
  8854 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  c               2    0[COMRAM] int 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  2    0[COMRAM] int 
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8868 ;;      Params:         2       0       0       0       0       0       0       0       0
  8869 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8870 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8871 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8872 ;;Total ram usage:        7 bytes
  8873 ;; Hardware stack levels used: 1
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_atoi
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text37
  8882  0038CE                     __ptext37:
  8883                           	callstack 0
  8884  0038CE                     _isspace:
  8885                           	callstack 25
  8886  0038CE  0E01               	movlw	1
  8887  0038D0  6E07               	movwf	_isspace$1104^0,c
  8888  0038D2  0E20               	movlw	32
  8889  0038D4  1801               	xorwf	isspace@c^0,w,c
  8890  0038D6  1002               	iorwf	(isspace@c+1)^0,w,c
  8891  0038D8  B4D8               	btfsc	status,2,c
  8892  0038DA  EF71  F01C         	goto	u4171
  8893  0038DE  EF73  F01C         	goto	u4170
  8894  0038E2                     u4171:
  8895  0038E2  EF8C  F01C         	goto	l3684
  8896  0038E6                     u4170:
  8897  0038E6  0EF7               	movlw	247
  8898  0038E8  6E03               	movwf	??_isspace^0,c
  8899  0038EA  0EFF               	movlw	255
  8900  0038EC  6E04               	movwf	(??_isspace+1)^0,c
  8901  0038EE  C001  F005         	movff	isspace@c,??_isspace+2
  8902  0038F2  C002  F006         	movff	isspace@c+1,??_isspace+3
  8903  0038F6  5003               	movf	??_isspace^0,w,c
  8904  0038F8  2605               	addwf	(??_isspace+2)^0,f,c
  8905  0038FA  5004               	movf	(??_isspace+1)^0,w,c
  8906  0038FC  2206               	addwfc	(??_isspace+3)^0,f,c
  8907  0038FE  5006               	movf	(??_isspace+3)^0,w,c
  8908  003900  E109               	bnz	u4180
  8909  003902  0E05               	movlw	5
  8910  003904  5C05               	subwf	(??_isspace+2)^0,w,c
  8911  003906  A0D8               	btfss	status,0,c
  8912  003908  EF88  F01C         	goto	u4181
  8913  00390C  EF8A  F01C         	goto	u4180
  8914  003910                     u4181:
  8915  003910  EF8C  F01C         	goto	l3684
  8916  003914                     u4180:
  8917  003914  0E00               	movlw	0
  8918  003916  6E07               	movwf	_isspace$1104^0,c
  8919  003918                     l3684:
  8920  003918  C007  F001         	movff	_isspace$1104,?_isspace
  8921  00391C  6A02               	clrf	(?_isspace+1)^0,c
  8922  00391E  0012               	return		;funcret
  8923  003920                     __end_of_isspace:
  8924                           	callstack 0
  8925                           
  8926 ;; *************** function _isdigit *****************
  8927 ;; Defined at:
  8928 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  c               2    0[COMRAM] int 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  2    0[COMRAM] int 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2, status,0
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8942 ;;      Params:         2       0       0       0       0       0       0       0       0
  8943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8944 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8945 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8946 ;;Total ram usage:        6 bytes
  8947 ;; Hardware stack levels used: 1
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_vfpfcnvrt
  8952 ;;		_atoi
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text38
  8957  003B3C                     __ptext38:
  8958                           	callstack 0
  8959  003B3C                     _isdigit:
  8960                           	callstack 26
  8961  003B3C  0ED0               	movlw	208
  8962  003B3E  6E03               	movwf	??_isdigit^0,c
  8963  003B40  0EFF               	movlw	255
  8964  003B42  6E04               	movwf	(??_isdigit+1)^0,c
  8965  003B44  C001  F005         	movff	isdigit@c,??_isdigit+2
  8966  003B48  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8967  003B4C  5003               	movf	??_isdigit^0,w,c
  8968  003B4E  2605               	addwf	(??_isdigit+2)^0,f,c
  8969  003B50  5004               	movf	(??_isdigit+1)^0,w,c
  8970  003B52  2206               	addwfc	(??_isdigit+3)^0,f,c
  8971  003B54  5006               	movf	(??_isdigit+3)^0,w,c
  8972  003B56  E10A               	bnz	u4150
  8973  003B58  0E0A               	movlw	10
  8974  003B5A  5C05               	subwf	(??_isdigit+2)^0,w,c
  8975  003B5C  A0D8               	btfss	status,0,c
  8976  003B5E  EFB3  F01D         	goto	u4151
  8977  003B62  EFB6  F01D         	goto	u4150
  8978  003B66                     u4151:
  8979  003B66  0E01               	movlw	1
  8980  003B68  EFB7  F01D         	goto	u4160
  8981  003B6C                     u4150:
  8982  003B6C  0E00               	movlw	0
  8983  003B6E                     u4160:
  8984  003B6E  6E01               	movwf	?_isdigit^0,c
  8985  003B70  6A02               	clrf	(?_isdigit+1)^0,c
  8986  003B72  0012               	return		;funcret
  8987  003B74                     __end_of_isdigit:
  8988                           	callstack 0
  8989                           
  8990 ;; *************** function ___wmul *****************
  8991 ;; Defined at:
  8992 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  multiplier      2    0[COMRAM] unsigned int 
  8995 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  product         2    4[COMRAM] unsigned int 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  2    0[COMRAM] unsigned int 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0, prodl, prodh
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9007 ;;      Params:         4       0       0       0       0       0       0       0       0
  9008 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9010 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9011 ;;Total ram usage:        6 bytes
  9012 ;; Hardware stack levels used: 1
  9013 ;; This function calls:
  9014 ;;		Nothing
  9015 ;; This function is called by:
  9016 ;;		_atoi
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text39
  9021  003CCC                     __ptext39:
  9022                           	callstack 0
  9023  003CCC                     ___wmul:
  9024                           	callstack 25
  9025  003CCC  5001               	movf	___wmul@multiplier^0,w,c
  9026  003CCE  0203               	mulwf	___wmul@multiplicand^0,c
  9027  003CD0  CFF3 F005          	movff	prodl,___wmul@product
  9028  003CD4  CFF4 F006          	movff	prodh,___wmul@product+1
  9029  003CD8  5001               	movf	___wmul@multiplier^0,w,c
  9030  003CDA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9031  003CDC  50F3               	movf	243,w,c
  9032  003CDE  2606               	addwf	(___wmul@product+1)^0,f,c
  9033  003CE0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9034  003CE2  0203               	mulwf	___wmul@multiplicand^0,c
  9035  003CE4  50F3               	movf	243,w,c
  9036  003CE6  2606               	addwf	(___wmul@product+1)^0,f,c
  9037  003CE8  C005  F001         	movff	___wmul@product,?___wmul
  9038  003CEC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9039  003CF0  0012               	return		;funcret
  9040  003CF2                     __end_of___wmul:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _LCD_String_xy *****************
  9044 ;; Defined at:
  9045 ;;		line 54 in file "LCD.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  row             1    wreg     unsigned char 
  9048 ;;  pos             1    4[COMRAM] unsigned char 
  9049 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  9050 ;;		 -> STR_6(12), STR_4(17), STR_3(6), STR_2(5), 
  9051 ;;		 -> STR_1(12), 
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;  row             1    7[COMRAM] unsigned char 
  9054 ;;  location        1    8[COMRAM] unsigned char 
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1    wreg      void 
  9057 ;; Registers used:
  9058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9064 ;;      Params:         3       0       0       0       0       0       0       0       0
  9065 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9067 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9068 ;;Total ram usage:        5 bytes
  9069 ;; Hardware stack levels used: 1
  9070 ;; Hardware stack levels required when called: 2
  9071 ;; This function calls:
  9072 ;;		_LCD_Command
  9073 ;;		_LCD_String
  9074 ;; This function is called by:
  9075 ;;		_main
  9076 ;;		_alarmaPositiva
  9077 ;;		_alarmaNegativa
  9078 ;;		_imprimirBlanco
  9079 ;;		_imprimirTemperatura
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text40
  9084  003A8C                     __ptext40:
  9085                           	callstack 0
  9086  003A8C                     _LCD_String_xy:
  9087                           	callstack 27
  9088                           
  9089                           ;incstack = 0
  9090                           ;LCD_String_xy@row stored from wreg
  9091  003A8C  6E08               	movwf	LCD_String_xy@row^0,c
  9092  003A8E                     
  9093                           ;LCD.c: 57:     if(row<=1)
  9094  003A8E  0E02               	movlw	2
  9095  003A90  6008               	cpfslt	LCD_String_xy@row^0,c
  9096  003A92  EF4D  F01D         	goto	u5031
  9097  003A96  EF4F  F01D         	goto	u5030
  9098  003A9A                     u5031:
  9099  003A9A  EF58  F01D         	goto	l4212
  9100  003A9E                     u5030:
  9101  003A9E                     
  9102                           ;LCD.c: 58:     {;LCD.c: 59:         location = (0x80) | ((pos) & 0x0f);
  9103  003A9E  5005               	movf	LCD_String_xy@pos^0,w,c
  9104  003AA0  0B0F               	andlw	15
  9105  003AA2  0980               	iorlw	128
  9106  003AA4  6E09               	movwf	LCD_String_xy@location^0,c
  9107  003AA6                     
  9108                           ;LCD.c: 60:         LCD_Command(location);
  9109  003AA6  5009               	movf	LCD_String_xy@location^0,w,c
  9110  003AA8  ECB8  F01C         	call	_LCD_Command
  9111                           
  9112                           ;LCD.c: 61:     }
  9113  003AAC  EF5F  F01D         	goto	l4216
  9114  003AB0                     l4212:
  9115                           
  9116                           ;LCD.c: 63:     {;LCD.c: 64:         location = (0xC0) | ((pos) & 0x0f);
  9117  003AB0  5005               	movf	LCD_String_xy@pos^0,w,c
  9118  003AB2  0B0F               	andlw	15
  9119  003AB4  09C0               	iorlw	192
  9120  003AB6  6E09               	movwf	LCD_String_xy@location^0,c
  9121  003AB8                     
  9122                           ;LCD.c: 65:         LCD_Command(location);
  9123  003AB8  5009               	movf	LCD_String_xy@location^0,w,c
  9124  003ABA  ECB8  F01C         	call	_LCD_Command
  9125  003ABE                     l4216:
  9126                           
  9127                           ;LCD.c: 69:     LCD_String(msg);
  9128  003ABE  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  9129  003AC2  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  9130  003AC6  ECE1  F01B         	call	_LCD_String	;wreg free
  9131  003ACA  0012               	return		;funcret
  9132  003ACC                     __end_of_LCD_String_xy:
  9133                           	callstack 0
  9134                           
  9135 ;; *************** function _LCD_String *****************
  9136 ;; Defined at:
  9137 ;;		line 44 in file "LCD.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  9140 ;;		 -> STR_6(12), lm35(16), STR_4(17), STR_3(6), 
  9141 ;;		 -> STR_2(5), STR_1(12), 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;		None
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9153 ;;      Params:         2       0       0       0       0       0       0       0       0
  9154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9156 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9157 ;;Total ram usage:        2 bytes
  9158 ;; Hardware stack levels used: 1
  9159 ;; Hardware stack levels required when called: 1
  9160 ;; This function calls:
  9161 ;;		_LCD_Char
  9162 ;; This function is called by:
  9163 ;;		_imprimirTemperatura
  9164 ;;		_LCD_String_xy
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text41
  9169  0037C2                     __ptext41:
  9170                           	callstack 0
  9171  0037C2                     _LCD_String:
  9172                           	callstack 27
  9173  0037C2                     
  9174                           ;LCD.c: 44: void LCD_String(const char *msg);LCD.c: 45: {;LCD.c: 46:  while((*msg)!=0)
  9175  0037C2  EFF7  F01B         	goto	l4194
  9176  0037C6                     l4190:
  9177                           
  9178                           ;LCD.c: 47:  {;LCD.c: 48:    LCD_Char(*msg);
  9179  0037C6  C003  FFF6         	movff	LCD_String@msg,tblptrl
  9180  0037CA  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  9181  0037CE  6AF8               	clrf	tblptru,c
  9182  0037D0  0E07               	movlw	(high __ramtop+-1)
  9183  0037D2  64F7               	cpfsgt	tblptrh,c
  9184  0037D4  D003               	bra	u4997
  9185  0037D6  0008               	tblrd		*
  9186  0037D8  50F5               	movf	tablat,w,c
  9187  0037DA  D005               	bra	u4990
  9188  0037DC                     u4997:
  9189  0037DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  9190  0037E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  9191  0037E4  50E7               	movf	indf1,w,c
  9192  0037E6                     u4990:
  9193  0037E6  EC90  F01C         	call	_LCD_Char
  9194  0037EA                     
  9195                           ;LCD.c: 49:    msg++;
  9196  0037EA  4A03               	infsnz	LCD_String@msg^0,f,c
  9197  0037EC  2A04               	incf	(LCD_String@msg+1)^0,f,c
  9198  0037EE                     l4194:
  9199                           
  9200                           ;LCD.c: 46:  while((*msg)!=0)
  9201  0037EE  C003  FFF6         	movff	LCD_String@msg,tblptrl
  9202  0037F2  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  9203  0037F6  6AF8               	clrf	tblptru,c
  9204  0037F8  0E07               	movlw	(high __ramtop+-1)
  9205  0037FA  64F7               	cpfsgt	tblptrh,c
  9206  0037FC  D003               	bra	u5007
  9207  0037FE  0008               	tblrd		*
  9208  003800  50F5               	movf	tablat,w,c
  9209  003802  D005               	bra	u5000
  9210  003804                     u5007:
  9211  003804  CFF6 FFE1          	movff	tblptrl,fsr1l
  9212  003808  CFF7 FFE2          	movff	tblptrh,fsr1h
  9213  00380C  50E7               	movf	indf1,w,c
  9214  00380E                     u5000:
  9215  00380E  0900               	iorlw	0
  9216  003810  A4D8               	btfss	status,2,c
  9217  003812  EF0D  F01C         	goto	u5011
  9218  003816  EF0F  F01C         	goto	u5010
  9219  00381A                     u5011:
  9220  00381A  EFE3  F01B         	goto	l4190
  9221  00381E                     u5010:
  9222  00381E  0012               	return		;funcret
  9223  003820                     __end_of_LCD_String:
  9224                           	callstack 0
  9225                           
  9226 ;; *************** function _LCD_Char *****************
  9227 ;; Defined at:
  9228 ;;		line 30 in file "LCD.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  dat             1    wreg     unsigned char 
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;  dat             1    1[COMRAM] unsigned char 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, status,2, status,0
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0
  9243 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9244 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9245 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9246 ;;Total ram usage:        2 bytes
  9247 ;; Hardware stack levels used: 1
  9248 ;; This function calls:
  9249 ;;		Nothing
  9250 ;; This function is called by:
  9251 ;;		_main
  9252 ;;		_LCD_String
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text42
  9257  003920                     __ptext42:
  9258                           	callstack 0
  9259  003920                     _LCD_Char:
  9260                           	callstack 27
  9261                           
  9262                           ;incstack = 0
  9263                           ;LCD_Char@dat stored from wreg
  9264  003920  6E02               	movwf	LCD_Char@dat^0,c
  9265  003922                     
  9266                           ;LCD.c: 30: void LCD_Char(unsigned char dat);LCD.c: 31: {;LCD.c: 32:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
  9267  003922  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  9268  003926  0EF0               	movlw	240
  9269  003928  1601               	andwf	??_LCD_Char^0,f,c
  9270  00392A  508C               	movf	140,w,c	;volatile
  9271  00392C  0B0F               	andlw	15
  9272  00392E  1001               	iorwf	??_LCD_Char^0,w,c
  9273  003930  6E8C               	movwf	140,c	;volatile
  9274  003932                     
  9275                           ;LCD.c: 33:  LATD0 = 1;
  9276  003932  808C               	bsf	3980,0,c	;volatile
  9277  003934                     
  9278                           ;LCD.c: 34:  LATD1 = 1;
  9279  003934  828C               	bsf	3980,1,c	;volatile
  9280  003936                     
  9281                           ;LCD.c: 35:  __nop();
  9282  003936  F000               	nop	
  9283  003938                     
  9284                           ;LCD.c: 36:  LATD1 = 0;
  9285  003938  928C               	bcf	3980,1,c	;volatile
  9286  00393A                     
  9287                           ;LCD.c: 37:  _delay((unsigned long)((1)*(8000000/4000.0)));
  9288  00393A  0E03               	movlw	3
  9289  00393C  6E01               	movwf	??_LCD_Char^0,c
  9290  00393E  0E98               	movlw	152
  9291  003940                     u5497:
  9292  003940  2EE8               	decfsz	wreg,f,c
  9293  003942  D7FE               	bra	u5497
  9294  003944  2E01               	decfsz	??_LCD_Char^0,f,c
  9295  003946  D7FC               	bra	u5497
  9296  003948                     
  9297                           ;LCD.c: 38:     LATD = (LATD & 0x0f) | (dat<<4);
  9298  003948  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  9299  00394C  3A01               	swapf	??_LCD_Char^0,f,c
  9300  00394E  0EF0               	movlw	240
  9301  003950  1601               	andwf	??_LCD_Char^0,f,c
  9302  003952  508C               	movf	140,w,c	;volatile
  9303  003954  0B0F               	andlw	15
  9304  003956  1001               	iorwf	??_LCD_Char^0,w,c
  9305  003958  6E8C               	movwf	140,c	;volatile
  9306  00395A                     
  9307                           ;LCD.c: 39:  LATD1 = 1;
  9308  00395A  828C               	bsf	3980,1,c	;volatile
  9309  00395C                     
  9310                           ;LCD.c: 40:  __nop();
  9311  00395C  F000               	nop	
  9312  00395E                     
  9313                           ;LCD.c: 41:  LATD1 = 0;
  9314  00395E  928C               	bcf	3980,1,c	;volatile
  9315                           
  9316                           ;LCD.c: 42:  _delay((unsigned long)((3)*(8000000/4000.0)));
  9317  003960  0E08               	movlw	8
  9318  003962  6E01               	movwf	??_LCD_Char^0,c
  9319  003964  0ECA               	movlw	202
  9320  003966                     u5507:
  9321  003966  2EE8               	decfsz	wreg,f,c
  9322  003968  D7FE               	bra	u5507
  9323  00396A  2E01               	decfsz	??_LCD_Char^0,f,c
  9324  00396C  D7FC               	bra	u5507
  9325  00396E  0012               	return		;funcret
  9326  003970                     __end_of_LCD_Char:
  9327                           	callstack 0
  9328                           
  9329 ;; *************** function _LCD_Command *****************
  9330 ;; Defined at:
  9331 ;;		line 15 in file "LCD.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  cmd             1    wreg     unsigned char 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  cmd             1    1[COMRAM] unsigned char 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0
  9346 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9347 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9348 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9349 ;;Total ram usage:        2 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_main
  9355 ;;		_imprimirTemperatura
  9356 ;;		_LCD_Init
  9357 ;;		_LCD_String_xy
  9358 ;;		_LCD_Clear
  9359 ;;		_LCD_xy
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           	psect	text43
  9364  003970                     __ptext43:
  9365                           	callstack 0
  9366  003970                     _LCD_Command:
  9367                           	callstack 28
  9368                           
  9369                           ;incstack = 0
  9370                           ;LCD_Command@cmd stored from wreg
  9371  003970  6E02               	movwf	LCD_Command@cmd^0,c
  9372  003972                     
  9373                           ;LCD.c: 15: void LCD_Command(unsigned char cmd );LCD.c: 16: {;LCD.c: 17:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  9374  003972  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  9375  003976  0EF0               	movlw	240
  9376  003978  1601               	andwf	??_LCD_Command^0,f,c
  9377  00397A  508C               	movf	140,w,c	;volatile
  9378  00397C  0B0F               	andlw	15
  9379  00397E  1001               	iorwf	??_LCD_Command^0,w,c
  9380  003980  6E8C               	movwf	140,c	;volatile
  9381  003982                     
  9382                           ;LCD.c: 18:  LATD0 = 0;
  9383  003982  908C               	bcf	3980,0,c	;volatile
  9384  003984                     
  9385                           ;LCD.c: 19:  LATD1 = 1;
  9386  003984  828C               	bsf	3980,1,c	;volatile
  9387  003986                     
  9388                           ;LCD.c: 20:  __nop();
  9389  003986  F000               	nop	
  9390  003988                     
  9391                           ;LCD.c: 21:  LATD1 = 0;
  9392  003988  928C               	bcf	3980,1,c	;volatile
  9393  00398A                     
  9394                           ;LCD.c: 22:  _delay((unsigned long)((1)*(8000000/4000.0)));
  9395  00398A  0E03               	movlw	3
  9396  00398C  6E01               	movwf	??_LCD_Command^0,c
  9397  00398E  0E98               	movlw	152
  9398  003990                     u5517:
  9399  003990  2EE8               	decfsz	wreg,f,c
  9400  003992  D7FE               	bra	u5517
  9401  003994  2E01               	decfsz	??_LCD_Command^0,f,c
  9402  003996  D7FC               	bra	u5517
  9403  003998                     
  9404                           ;LCD.c: 23:     LATD = (LATD & 0x0f) | (cmd<<4);
  9405  003998  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  9406  00399C  3A01               	swapf	??_LCD_Command^0,f,c
  9407  00399E  0EF0               	movlw	240
  9408  0039A0  1601               	andwf	??_LCD_Command^0,f,c
  9409  0039A2  508C               	movf	140,w,c	;volatile
  9410  0039A4  0B0F               	andlw	15
  9411  0039A6  1001               	iorwf	??_LCD_Command^0,w,c
  9412  0039A8  6E8C               	movwf	140,c	;volatile
  9413  0039AA                     
  9414                           ;LCD.c: 24:  LATD1 = 1;
  9415  0039AA  828C               	bsf	3980,1,c	;volatile
  9416  0039AC                     
  9417                           ;LCD.c: 25:  __nop();
  9418  0039AC  F000               	nop	
  9419  0039AE                     
  9420                           ;LCD.c: 26:  LATD1 = 0;
  9421  0039AE  928C               	bcf	3980,1,c	;volatile
  9422                           
  9423                           ;LCD.c: 27:  _delay((unsigned long)((3)*(8000000/4000.0)));
  9424  0039B0  0E08               	movlw	8
  9425  0039B2  6E01               	movwf	??_LCD_Command^0,c
  9426  0039B4  0ECA               	movlw	202
  9427  0039B6                     u5527:
  9428  0039B6  2EE8               	decfsz	wreg,f,c
  9429  0039B8  D7FE               	bra	u5527
  9430  0039BA  2E01               	decfsz	??_LCD_Command^0,f,c
  9431  0039BC  D7FC               	bra	u5527
  9432  0039BE  0012               	return		;funcret
  9433  0039C0                     __end_of_LCD_Command:
  9434                           	callstack 0
  9435                           
  9436 ;; *************** function _adc_reader *****************
  9437 ;; Defined at:
  9438 ;;		line 15 in file "adc_con.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;  value_adc       2    4[COMRAM] unsigned int 
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  2    0[COMRAM] unsigned int 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9452 ;;      Params:         2       0       0       0       0       0       0       0       0
  9453 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9454 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9455 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9456 ;;Total ram usage:        6 bytes
  9457 ;; Hardware stack levels used: 1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_actDesactRelay
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text44
  9466  003C7A                     __ptext44:
  9467                           	callstack 0
  9468  003C7A                     _adc_reader:
  9469                           	callstack 29
  9470  003C7A                     
  9471                           ;adc_con.c: 17:     ADCON0bits.GO_DONE = 1;
  9472  003C7A  82C2               	bsf	194,1,c	;volatile
  9473  003C7C                     l187:
  9474  003C7C  B2C2               	btfsc	194,1,c	;volatile
  9475  003C7E  EF43  F01E         	goto	u5041
  9476  003C82  EF45  F01E         	goto	u5040
  9477  003C86                     u5041:
  9478  003C86  EF3E  F01E         	goto	l187
  9479  003C8A                     u5040:
  9480  003C8A                     
  9481                           ;adc_con.c: 19:     value_adc = ADRESH;
  9482  003C8A  CFC4 F005          	movff	4036,adc_reader@value_adc	;volatile
  9483  003C8E  6A06               	clrf	(adc_reader@value_adc+1)^0,c
  9484  003C90                     
  9485                           ;adc_con.c: 20:     value_adc = (value_adc << 8) + ADRESL;
  9486  003C90  5005               	movf	adc_reader@value_adc^0,w,c
  9487  003C92  6E03               	movwf	??_adc_reader^0,c
  9488  003C94  50C3               	movf	195,w,c	;volatile
  9489  003C96  6E05               	movwf	adc_reader@value_adc^0,c
  9490  003C98  C003  F006         	movff	??_adc_reader,adc_reader@value_adc+1
  9491  003C9C                     
  9492                           ;adc_con.c: 21:     return value_adc;
  9493  003C9C  C005  F001         	movff	adc_reader@value_adc,?_adc_reader
  9494  003CA0  C006  F002         	movff	adc_reader@value_adc+1,?_adc_reader+1
  9495  003CA4  0012               	return		;funcret
  9496  003CA6                     __end_of_adc_reader:
  9497                           	callstack 0
  9498                           
  9499 ;; *************** function ___xxtofl *****************
  9500 ;; Defined at:
  9501 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  sign            1    wreg     unsigned char 
  9504 ;;  val             4    0[COMRAM] long 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;  sign            1    8[COMRAM] unsigned char 
  9507 ;;  arg             4   10[COMRAM] unsigned long 
  9508 ;;  exp             1    9[COMRAM] unsigned char 
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  4    0[COMRAM] unsigned char 
  9511 ;; Registers used:
  9512 ;;		wreg, status,2, status,0
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9518 ;;      Params:         4       0       0       0       0       0       0       0       0
  9519 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9520 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9521 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9522 ;;Total ram usage:       14 bytes
  9523 ;; Hardware stack levels used: 1
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_actDesactRelay
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text45
  9532  0029C6                     __ptext45:
  9533                           	callstack 0
  9534  0029C6                     ___xxtofl:
  9535                           	callstack 29
  9536                           
  9537                           ;incstack = 0
  9538                           ;___xxtofl@sign stored from wreg
  9539  0029C6  6E09               	movwf	___xxtofl@sign^0,c
  9540  0029C8  5009               	movf	___xxtofl@sign^0,w,c
  9541  0029CA  B4D8               	btfsc	status,2,c
  9542  0029CC  EFEA  F014         	goto	u5051
  9543  0029D0  EFEC  F014         	goto	u5050
  9544  0029D4                     u5051:
  9545  0029D4  EF0E  F015         	goto	l903
  9546  0029D8                     u5050:
  9547  0029D8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9548  0029DA  EFF3  F014         	goto	u5060
  9549  0029DE  EFF1  F014         	goto	u5061
  9550  0029E2                     u5061:
  9551  0029E2  EF0E  F015         	goto	l903
  9552  0029E6                     u5060:
  9553  0029E6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9554  0029EA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9555  0029EE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9556  0029F2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9557  0029F6  1E05               	comf	??___xxtofl^0,f,c
  9558  0029F8  1E06               	comf	(??___xxtofl+1)^0,f,c
  9559  0029FA  1E07               	comf	(??___xxtofl+2)^0,f,c
  9560  0029FC  1E08               	comf	(??___xxtofl+3)^0,f,c
  9561  0029FE  2A05               	incf	??___xxtofl^0,f,c
  9562  002A00  0E00               	movlw	0
  9563  002A02  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9564  002A04  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9565  002A06  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9566  002A08  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9567  002A0C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9568  002A10  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9569  002A14  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9570  002A18  EF16  F015         	goto	l4280
  9571  002A1C                     l903:
  9572  002A1C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9573  002A20  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9574  002A24  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9575  002A28  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9576  002A2C                     l4280:
  9577  002A2C  5001               	movf	___xxtofl@val^0,w,c
  9578  002A2E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9579  002A30  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9580  002A32  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9581  002A34  A4D8               	btfss	status,2,c
  9582  002A36  EF1F  F015         	goto	u5071
  9583  002A3A  EF21  F015         	goto	u5070
  9584  002A3E                     u5071:
  9585  002A3E  EF2B  F015         	goto	l4286
  9586  002A42                     u5070:
  9587  002A42  0E00               	movlw	0
  9588  002A44  6E01               	movwf	?___xxtofl^0,c
  9589  002A46  0E00               	movlw	0
  9590  002A48  6E02               	movwf	(?___xxtofl+1)^0,c
  9591  002A4A  0E00               	movlw	0
  9592  002A4C  6E03               	movwf	(?___xxtofl+2)^0,c
  9593  002A4E  0E00               	movlw	0
  9594  002A50  6E04               	movwf	(?___xxtofl+3)^0,c
  9595  002A52  EFBC  F015         	goto	l906
  9596  002A56                     l4286:
  9597  002A56  0E96               	movlw	150
  9598  002A58  6E0A               	movwf	___xxtofl@exp^0,c
  9599  002A5A  EF35  F015         	goto	l4290
  9600  002A5E                     l4288:
  9601  002A5E  2A0A               	incf	___xxtofl@exp^0,f,c
  9602  002A60  90D8               	bcf	status,0,c
  9603  002A62  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9604  002A64  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9605  002A66  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9606  002A68  320B               	rrcf	___xxtofl@arg^0,f,c
  9607  002A6A                     l4290:
  9608  002A6A  0E00               	movlw	0
  9609  002A6C  140B               	andwf	___xxtofl@arg^0,w,c
  9610  002A6E  6E05               	movwf	??___xxtofl^0,c
  9611  002A70  0E00               	movlw	0
  9612  002A72  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9613  002A74  6E06               	movwf	(??___xxtofl+1)^0,c
  9614  002A76  0E00               	movlw	0
  9615  002A78  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9616  002A7A  6E07               	movwf	(??___xxtofl+2)^0,c
  9617  002A7C  0EFE               	movlw	254
  9618  002A7E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9619  002A80  6E08               	movwf	(??___xxtofl+3)^0,c
  9620  002A82  5005               	movf	??___xxtofl^0,w,c
  9621  002A84  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9622  002A86  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9623  002A88  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9624  002A8A  A4D8               	btfss	status,2,c
  9625  002A8C  EF4A  F015         	goto	u5081
  9626  002A90  EF4C  F015         	goto	u5080
  9627  002A94                     u5081:
  9628  002A94  EF2F  F015         	goto	l4288
  9629  002A98                     u5080:
  9630  002A98  EF5A  F015         	goto	l910
  9631  002A9C                     l4292:
  9632  002A9C  2A0A               	incf	___xxtofl@exp^0,f,c
  9633  002A9E  0E01               	movlw	1
  9634  002AA0  260B               	addwf	___xxtofl@arg^0,f,c
  9635  002AA2  0E00               	movlw	0
  9636  002AA4  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9637  002AA6  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9638  002AA8  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9639  002AAA  90D8               	bcf	status,0,c
  9640  002AAC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9641  002AAE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9642  002AB0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9643  002AB2  320B               	rrcf	___xxtofl@arg^0,f,c
  9644  002AB4                     l910:
  9645  002AB4  0E00               	movlw	0
  9646  002AB6  140B               	andwf	___xxtofl@arg^0,w,c
  9647  002AB8  6E05               	movwf	??___xxtofl^0,c
  9648  002ABA  0E00               	movlw	0
  9649  002ABC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9650  002ABE  6E06               	movwf	(??___xxtofl+1)^0,c
  9651  002AC0  0E00               	movlw	0
  9652  002AC2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9653  002AC4  6E07               	movwf	(??___xxtofl+2)^0,c
  9654  002AC6  0EFF               	movlw	255
  9655  002AC8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9656  002ACA  6E08               	movwf	(??___xxtofl+3)^0,c
  9657  002ACC  5005               	movf	??___xxtofl^0,w,c
  9658  002ACE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9659  002AD0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9660  002AD2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9661  002AD4  A4D8               	btfss	status,2,c
  9662  002AD6  EF6F  F015         	goto	u5091
  9663  002ADA  EF71  F015         	goto	u5090
  9664  002ADE                     u5091:
  9665  002ADE  EF4E  F015         	goto	l4292
  9666  002AE2                     u5090:
  9667  002AE2  EF79  F015         	goto	l4300
  9668  002AE6                     l4298:
  9669  002AE6  060A               	decf	___xxtofl@exp^0,f,c
  9670  002AE8  90D8               	bcf	status,0,c
  9671  002AEA  360B               	rlcf	___xxtofl@arg^0,f,c
  9672  002AEC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9673  002AEE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9674  002AF0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9675  002AF2                     l4300:
  9676  002AF2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9677  002AF4  EF7E  F015         	goto	u5101
  9678  002AF8  EF80  F015         	goto	u5100
  9679  002AFC                     u5101:
  9680  002AFC  EF88  F015         	goto	l917
  9681  002B00                     u5100:
  9682  002B00  0E02               	movlw	2
  9683  002B02  600A               	cpfslt	___xxtofl@exp^0,c
  9684  002B04  EF86  F015         	goto	u5111
  9685  002B08  EF88  F015         	goto	u5110
  9686  002B0C                     u5111:
  9687  002B0C  EF73  F015         	goto	l4298
  9688  002B10                     u5110:
  9689  002B10                     l917:
  9690  002B10  B00A               	btfsc	___xxtofl@exp^0,0,c
  9691  002B12  EF8D  F015         	goto	u5121
  9692  002B16  EF8F  F015         	goto	u5120
  9693  002B1A                     u5121:
  9694  002B1A  EF90  F015         	goto	l4306
  9695  002B1E                     u5120:
  9696  002B1E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9697  002B20                     l4306:
  9698  002B20  90D8               	bcf	status,0,c
  9699  002B22  320A               	rrcf	___xxtofl@exp^0,f,c
  9700  002B24  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9701  002B28  6A06               	clrf	(??___xxtofl+1)^0,c
  9702  002B2A  6A07               	clrf	(??___xxtofl+2)^0,c
  9703  002B2C  6A08               	clrf	(??___xxtofl+3)^0,c
  9704  002B2E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9705  002B32  6A07               	clrf	(??___xxtofl+2)^0,c
  9706  002B34  6A06               	clrf	(??___xxtofl+1)^0,c
  9707  002B36  6A05               	clrf	??___xxtofl^0,c
  9708  002B38  5005               	movf	??___xxtofl^0,w,c
  9709  002B3A  120B               	iorwf	___xxtofl@arg^0,f,c
  9710  002B3C  5006               	movf	(??___xxtofl+1)^0,w,c
  9711  002B3E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9712  002B40  5007               	movf	(??___xxtofl+2)^0,w,c
  9713  002B42  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9714  002B44  5008               	movf	(??___xxtofl+3)^0,w,c
  9715  002B46  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9716  002B48  5009               	movf	___xxtofl@sign^0,w,c
  9717  002B4A  B4D8               	btfsc	status,2,c
  9718  002B4C  EFAA  F015         	goto	u5131
  9719  002B50  EFAC  F015         	goto	u5130
  9720  002B54                     u5131:
  9721  002B54  EFB4  F015         	goto	l4316
  9722  002B58                     u5130:
  9723  002B58  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9724  002B5A  EFB3  F015         	goto	u5140
  9725  002B5E  EFB1  F015         	goto	u5141
  9726  002B62                     u5141:
  9727  002B62  EFB4  F015         	goto	l4316
  9728  002B66                     u5140:
  9729  002B66  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9730  002B68                     l4316:
  9731  002B68  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9732  002B6C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9733  002B70  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9734  002B74  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9735  002B78                     l906:
  9736  002B78  0012               	return		;funcret
  9737  002B7A                     __end_of___xxtofl:
  9738                           	callstack 0
  9739                           
  9740                           	psect	rparam
  9741  0000                     
  9742                           	psect	idloc
  9743                           
  9744                           ;Config register IDLOC0 @ 0x200000
  9745                           ;	unspecified, using default values
  9746  200000                     	org	2097152
  9747  200000  FF                 	db	255
  9748                           
  9749                           ;Config register IDLOC1 @ 0x200001
  9750                           ;	unspecified, using default values
  9751  200001                     	org	2097153
  9752  200001  FF                 	db	255
  9753                           
  9754                           ;Config register IDLOC2 @ 0x200002
  9755                           ;	unspecified, using default values
  9756  200002                     	org	2097154
  9757  200002  FF                 	db	255
  9758                           
  9759                           ;Config register IDLOC3 @ 0x200003
  9760                           ;	unspecified, using default values
  9761  200003                     	org	2097155
  9762  200003  FF                 	db	255
  9763                           
  9764                           ;Config register IDLOC4 @ 0x200004
  9765                           ;	unspecified, using default values
  9766  200004                     	org	2097156
  9767  200004  FF                 	db	255
  9768                           
  9769                           ;Config register IDLOC5 @ 0x200005
  9770                           ;	unspecified, using default values
  9771  200005                     	org	2097157
  9772  200005  FF                 	db	255
  9773                           
  9774                           ;Config register IDLOC6 @ 0x200006
  9775                           ;	unspecified, using default values
  9776  200006                     	org	2097158
  9777  200006  FF                 	db	255
  9778                           
  9779                           ;Config register IDLOC7 @ 0x200007
  9780                           ;	unspecified, using default values
  9781  200007                     	org	2097159
  9782  200007  FF                 	db	255
  9783                           
  9784                           	psect	config
  9785                           
  9786                           ;Config register CONFIG1L @ 0x300000
  9787                           ;	PLL Prescaler Selection bits
  9788                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9789                           ;	System Clock Postscaler Selection bits
  9790                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9791                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9792                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9793  300000                     	org	3145728
  9794  300000  00                 	db	0
  9795                           
  9796                           ;Config register CONFIG1H @ 0x300001
  9797                           ;	Oscillator Selection bits
  9798                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  9799                           ;	Fail-Safe Clock Monitor Enable bit
  9800                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9801                           ;	Internal/External Oscillator Switchover bit
  9802                           ;	IESO = ON, Oscillator Switchover mode enabled
  9803  300001                     	org	3145729
  9804  300001  88                 	db	136
  9805                           
  9806                           ;Config register CONFIG2L @ 0x300002
  9807                           ;	Power-up Timer Enable bit
  9808                           ;	PWRT = ON, PWRT enabled
  9809                           ;	Brown-out Reset Enable bits
  9810                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9811                           ;	Brown-out Reset Voltage bits
  9812                           ;	BORV = 3, Minimum setting 2.05V
  9813                           ;	USB Voltage Regulator Enable bit
  9814                           ;	VREGEN = OFF, USB voltage regulator disabled
  9815  300002                     	org	3145730
  9816  300002  18                 	db	24
  9817                           
  9818                           ;Config register CONFIG2H @ 0x300003
  9819                           ;	Watchdog Timer Enable bit
  9820                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9821                           ;	Watchdog Timer Postscale Select bits
  9822                           ;	WDTPS = 32768, 1:32768
  9823  300003                     	org	3145731
  9824  300003  1E                 	db	30
  9825                           
  9826                           ; Padding undefined space
  9827  300004                     	org	3145732
  9828  300004  FF                 	db	255
  9829                           
  9830                           ;Config register CONFIG3H @ 0x300005
  9831                           ;	CCP2 MUX bit
  9832                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9833                           ;	PORTB A/D Enable bit
  9834                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9835                           ;	Low-Power Timer 1 Oscillator Enable bit
  9836                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9837                           ;	MCLR Pin Enable bit
  9838                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9839  300005                     	org	3145733
  9840  300005  81                 	db	129
  9841                           
  9842                           ;Config register CONFIG4L @ 0x300006
  9843                           ;	Stack Full/Underflow Reset Enable bit
  9844                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9845                           ;	Single-Supply ICSP Enable bit
  9846                           ;	LVP = OFF, Single-Supply ICSP disabled
  9847                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9848                           ;	ICPRT = OFF, ICPORT disabled
  9849                           ;	Extended Instruction Set Enable bit
  9850                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9851                           ;	Background Debugger Enable bit
  9852                           ;	DEBUG = 0x1, unprogrammed default
  9853  300006                     	org	3145734
  9854  300006  81                 	db	129
  9855                           
  9856                           ; Padding undefined space
  9857  300007                     	org	3145735
  9858  300007  FF                 	db	255
  9859                           
  9860                           ;Config register CONFIG5L @ 0x300008
  9861                           ;	Code Protection bit
  9862                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9863                           ;	Code Protection bit
  9864                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9865                           ;	Code Protection bit
  9866                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9867                           ;	Code Protection bit
  9868                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9869  300008                     	org	3145736
  9870  300008  0F                 	db	15
  9871                           
  9872                           ;Config register CONFIG5H @ 0x300009
  9873                           ;	Boot Block Code Protection bit
  9874                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9875                           ;	Data EEPROM Code Protection bit
  9876                           ;	CPD = OFF, Data EEPROM is not code-protected
  9877  300009                     	org	3145737
  9878  300009  C0                 	db	192
  9879                           
  9880                           ;Config register CONFIG6L @ 0x30000A
  9881                           ;	Write Protection bit
  9882                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9883                           ;	Write Protection bit
  9884                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9885                           ;	Write Protection bit
  9886                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9887                           ;	Write Protection bit
  9888                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9889  30000A                     	org	3145738
  9890  30000A  0F                 	db	15
  9891                           
  9892                           ;Config register CONFIG6H @ 0x30000B
  9893                           ;	Configuration Register Write Protection bit
  9894                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9895                           ;	Boot Block Write Protection bit
  9896                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9897                           ;	Data EEPROM Write Protection bit
  9898                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9899  30000B                     	org	3145739
  9900  30000B  E0                 	db	224
  9901                           
  9902                           ;Config register CONFIG7L @ 0x30000C
  9903                           ;	Table Read Protection bit
  9904                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9905                           ;	Table Read Protection bit
  9906                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9907                           ;	Table Read Protection bit
  9908                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9909                           ;	Table Read Protection bit
  9910                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9911  30000C                     	org	3145740
  9912  30000C  0F                 	db	15
  9913                           
  9914                           ;Config register CONFIG7H @ 0x30000D
  9915                           ;	Boot Block Table Read Protection bit
  9916                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9917  30000D                     	org	3145741
  9918  30000D  40                 	db	64
  9919                           tosu	equ	0xFFF
  9920                           tosh	equ	0xFFE
  9921                           tosl	equ	0xFFD
  9922                           stkptr	equ	0xFFC
  9923                           pclatu	equ	0xFFB
  9924                           pclath	equ	0xFFA
  9925                           pcl	equ	0xFF9
  9926                           tblptru	equ	0xFF8
  9927                           tblptrh	equ	0xFF7
  9928                           tblptrl	equ	0xFF6
  9929                           tablat	equ	0xFF5
  9930                           prodh	equ	0xFF4
  9931                           prodl	equ	0xFF3
  9932                           indf0	equ	0xFEF
  9933                           postinc0	equ	0xFEE
  9934                           postdec0	equ	0xFED
  9935                           preinc0	equ	0xFEC
  9936                           plusw0	equ	0xFEB
  9937                           fsr0h	equ	0xFEA
  9938                           fsr0l	equ	0xFE9
  9939                           wreg	equ	0xFE8
  9940                           indf1	equ	0xFE7
  9941                           postinc1	equ	0xFE6
  9942                           postdec1	equ	0xFE5
  9943                           preinc1	equ	0xFE4
  9944                           plusw1	equ	0xFE3
  9945                           fsr1h	equ	0xFE2
  9946                           fsr1l	equ	0xFE1
  9947                           bsr	equ	0xFE0
  9948                           indf2	equ	0xFDF
  9949                           postinc2	equ	0xFDE
  9950                           postdec2	equ	0xFDD
  9951                           preinc2	equ	0xFDC
  9952                           plusw2	equ	0xFDB
  9953                           fsr2h	equ	0xFDA
  9954                           fsr2l	equ	0xFD9
  9955                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        15
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     77     134
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> lm35(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> lm35(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S884_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> lm35(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> lm35(BANK0[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[12]), STR_4(CODE[17]), STR_3(CODE[6]), STR_2(CODE[5]), 
		 -> STR_1(CODE[12]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[12]), lm35(BANK0[16]), STR_4(CODE[17]), STR_3(CODE[6]), 
		 -> STR_2(CODE[5]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_imprimirTemperatura
    _inicializar->_LCD_Init
    _LCD_Init->_LCD_Command
    _imprimirBlanco->_LCD_String_xy
    _alarmaPositiva->_LCD_String_xy
    _alarmaNegativa->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _actDesactRelay->_imprimirTemperatura
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char

Critical Paths under _main in BANK0

    _main->_actDesactRelay
    _imprimirTemperatura->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   69183
                                             76 BANK0      1     1      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                     _actDesactRelay
                     _alarmaNegativa
                     _alarmaPositiva
                     _imprimirBlanco
                _imprimirTemperatura
                        _inicializar
                            _keyfind
 ---------------------------------------------------------------------------------
 (1) _keyfind                                              2     2      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializar                                          0     0      0      44
                           _LCD_Init
                        _adc_initcon
 ---------------------------------------------------------------------------------
 (2) _adc_initcon                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _imprimirBlanco                                       0     0      0    1180
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _alarmaPositiva                                       2     2      0    1224
                                              9 COMRAM     2     2      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _alarmaNegativa                                       2     2      0    1224
                                              9 COMRAM     2     2      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      44
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _actDesactRelay                                       4     4      0   34179
                                             72 BANK0      4     4      0
                             ___flge
                            ___flmul
                           ___xxtofl
                         _adc_reader
                _imprimirTemperatura
 ---------------------------------------------------------------------------------
 (1) _imprimirTemperatura                                  2     2      0   29885
                                             93 COMRAM     2     2      0
                        _LCD_Command
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   28420
                                             56 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   28063
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   27691
                                             63 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   22392
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     942
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    1180
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     241
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_reader                                           6     4      2      47
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _actDesactRelay
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
     _adc_reader
     _imprimirTemperatura
       _LCD_Command
       _LCD_String
       _LCD_String_xy
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isdigit
             _isupper
             _strncmp
             _tolower
   _alarmaNegativa
     _LCD_Clear
     _LCD_String_xy
   _alarmaPositiva
     _LCD_Clear
     _LCD_String_xy
   _imprimirBlanco
     _LCD_String_xy
   _imprimirTemperatura
   _inicializar
     _LCD_Init
       _LCD_Command
     _adc_initcon
   _keyfind

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4D      86       5       83.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     135      20        0.0%
DATA                 0      0     135       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 11:07:04 2021

                ___fldiv@aexp 0019                  ___fldiv@bexp 0018                  ___fldiv@sign 0011  
                ?_LCD_Command 0001                            l95 3C78                            l98 3BA8  
                ___awdiv@sign 0006           ___wmul@multiplicand 0003                   ?_LCD_String 0003  
                         l101 3BDE                           l110 3466                           l112 3468  
                         l104 3D04                           l107 36FE                           l152 396E  
                         l232 2716                           l224 268E                           l146 3C48  
                         l163 3ACA                           l171 3D1C                           l219 264A  
                         l228 26D2                           l149 39BE                           l190 3CA4  
                         l158 381E                           l238 27B2                           l248 3CF0  
                         l184 3CCA                           l513 2FFA                           l522 3B3A  
                         l187 3C7C                           l507 3686                           l189 3C8A  
                         l518 3040                           l545 2F3C                           l802 187C  
                         l803 186A                           l492 35DC                           l910 2AB4  
                         l830 2586                           l903 2A1C                           l479 352C  
                         l832 23E6                           l841 242C                           l906 2B78  
                         l818 3A04                           l843 24A4                           l835 23AA  
                         l844 2492                           l917 2B10                           l862 1E88  
                         l926 38CC                           l871 20F6                           l872 20E4  
                         l776 1692                           l793 17AC                           l785 1962  
                         l777 1680                           l866 21EC                           l778 1646  
                         l970 3368                           l972 33A4                           l869 207E  
                         l990 14A2                           l879 21AE                           l967 3326  
        __size_of_adc_initcon 0026                           _idx 00C3                           _pad 32E0  
                ___awmod@sign 0006                           prod 000FF3                           wreg 000FE8  
        ?_imprimirTemperatura 0001                  ___flmul@aexp 0020                  ___flmul@bexp 0021  
                ___flmul@sign 001B                  ___flmul@temp 0026                  ___flmul@prod 0022  
                 LCD_Char@dat 0002                  ___fltol@exp1 000A                          l1200 387A  
                        l1008 0C38                          l1106 313E                          l1210 3214  
                        l1220 37B8                          l1036 1078                          l1206 3C14  
                        l1135 2D00                          l3000 1654                          l1144 29C4  
                        l1225 37C0                          l1154 3B72                          l1162 391E  
                        l1138 2D08                          l3010 167E                          l3002 1660  
                        l1082 1DC2                          l1147 2908                          l3100 1934  
                        l3020 16D4                          l3012 16A0                          l3004 1664  
                        l3110 1952                          l3102 193A                          l3030 170E  
                        l3022 16E2                          l3014 16B0                          l3006 1672  
                        l1183 32DE                          l1191 3A48                          l1095 3758  
                        l4000 2B92                          l3200 2324                          l3104 193C  
                        l3040 177A                          l3032 1710                          l3024 16F0  
                        l3008 1674                          l3120 3A28                          l1168 3B02  
                        l1096 3760                          l1089 1D0C                          l4002 2B96  
                        l3210 2376                          l3202 233E                          l3106 1942  
                        l3050 17D2                          l3042 177C                          l3034 171A  
                        l3026 16FC                          l3018 16C4                          l1194 3D1E  
                        l3114 3A06                          l3122 3BE0                          l4020 2C4C  
                        l4012 2BF2                          l4004 2BB2                          l3220 23D2  
                        l3212 2386                          l3204 234E                          l3300 1E32  
                        l3108 1950                          l3060 1800                          l3044 178C  
                        l3028 1700                          l3036 1720                          l3116 3A12  
                        l3124 3BEC                          l3132 3ACC                          l4100 1A72  
                        l4030 2CD2                          l4014 2C08                          l4006 2BE8  
                        l3230 2412                          l3222 23D4                          l3214 239A  
                        l3206 235E                          l3150 221A                          l3142 21EE  
                        l3310 1E72                          l3302 1E40                          l3062 180E  
                        l3054 17E6                          l3070 182C                          l3038 1746  
                        l3046 179C                          l3118 3A24                          l3126 3BF0  
                        l4110 1AFA                          l3136 3CCC                          l4032 2CE4  
                        l4024 2C82                          l4016 2C10                          l4008 2BEC  
                        l3240 244E                          l3232 241C                          l3224 23E4  
                        l3216 23A8                          l3208 236E                          l3160 2254  
                        l3152 222A                          l3144 21FA                          l3400 21D0  
                        l3320 1EBC                          l3312 1E78                          l3304 1E42  
                        l3064 1816                          l3056 17F0                          l3048 17C2  
                        l3072 183A                          l3128 3C08                          l4040 316A  
                        l4120 1B92                          l4112 1B2A                          l4104 1AB8  
                        l4200 3716                          l4210 3AA6                          l3138 3CE8  
                        l4018 2C18                          l3250 24C0                          l3242 245C  
                        l3234 242A                          l3226 23F6                          l3218 23B4  
                        l3170 2280                          l3162 225A                          l3154 223A  
                        l3146 2208                          l3402 21D2                          l3330 1F0C  
                        l3322 1EC8                          l3314 1E98                          l3306 1E52  
                        l3082 188C                          l3090 18E2                          l3074 183E  
                        l3066 181A                          l3058 17FE                          l3410 39C0  
                        l4050 31B8                          l4130 1C2A                          l4122 1BA0  
                        l4114 1B3A                          l4106 1ACA                          l4202 373C  
                        l4300 2AF2                          l4060 3932                          l4212 3AB0  
                        l4204 3A8E                          l4028 2CC0                          l3420 347C  
                        l3260 252C                          l3252 24CE                          l3244 248A  
                        l3228 240C                          l3236 243C                          l3180 22BA  
                        l3172 2290                          l3164 2260                          l3156 223C  
                        l3148 220A                          l3500 361C                          l3404 21D8  
                        l3340 1F4E                          l3332 1F18                          l3324 1ED2  
                        l3316 1EA8                          l3308 1E62                          l3092 18F2  
                        l3084 1898                          l3076 184C                          l3068 182A  
                        l3412 39D0                          l4052 31CA                          l4044 3176  
                        l4124 1BD0                          l4116 1B6A                          l4108 1AEA  
                        l4220 388E                          l4310 2B48                          l4302 2B00  
                        l4070 3948                          l4062 3934                          l4214 3AB8  
                        l4206 3A8E                          l3430 34A2                          l3422 3484  
                        l3270 257A                          l3262 2546                          l3254 24F8  
                        l3238 244A                          l3182 22D0                          l3174 22A0  
                        l3166 226E                          l3158 2244                          l3502 364A  
                        l3406 21DC                          l3350 1FB0                          l3342 1F5A  
                        l3334 1F24                          l3326 1EE8                          l3094 1902  
                        l3086 18A6                          l3078 1862                          l4054 31F2  
                        l4046 3184                          l4038 3140                          l4150 1D66  
                        l4134 1C96                          l4118 1B7C                          l4222 3896  
                        l4230 3D16                          l4312 2B58                          l4304 2B1E  
                        l4072 395A                          l4064 3936                          l4216 3ABE  
                        l4208 3A9E                          l3440 34DA                          l3432 34AA  
                        l3424 3488                          l3416 346A                          l3272 257C  
                        l3264 2562                          l3248 24B4                          l3256 24FC  
                        l3184 22E0                          l3192 2300                          l3176 22A2  
                        l3168 2270                          l3504 365A                          l3520 2FBA  
                        l3512 2F3E                          l3360 2046                          l3352 1FBC  
                        l3344 1F6A                          l3336 1F32                          l3328 1EF4  
                        l3280 1DC4                          l3096 1922                          l3088 18E0  
                        l3600 334A                          l4048 319C                          l4136 1CA8  
                        l4144 1D20                          l4128 1BFC                          l4080 1988  
                        l4160 1D8C                          l4224 389E                          l4240 36DC  
                        l4232 3688                          l4320 3C4A                          l4400 2728  
                        l4314 2B66                          l4306 2B20                          l4170 3982  
                        l4074 395C                          l4066 3938                          l4058 3922  
                        l3450 3506                          l3442 34E0                          l3434 34BC  
                        l3426 3496                          l3418 346E                          l3266 2566  
                        l3258 2516                          l3194 2310                          l3186 22E8  
                        l3178 22AA                          l3506 367E                          l3530 303E  
                        l3522 2FC8                          l3514 2F6C                          l3370 209C  
                        l3362 2064                          l3354 1FD8                          l3346 1F84  
                        l3338 1F3E                          l3290 1E00                          l3282 1DD0  
                        l3098 1926                          l3610 3062                          l3602 3378  
                        l4162 1DB0                          l4146 1D44                          l4154 1D72  
                        l4138 1CDC                          l4090 19D8                          l4082 1996  
                        l4226 38BA                          l4218 387C                          l4242 36E8  
                        l4234 36AE                          l4250 3C16                          l4322 3C6E  
                        l4410 2762                          l4402 273A                          l4330 2588  
                        l4316 2B68                          l4308 2B24                          l4180 3998  
                        l4172 3984                          l4076 395E                          l4068 393A  
                        l3444 34F6                          l3436 34C4                          l3452 350C  
                        l3428 349E                          l3460 352E                          l3268 2574  
                        l3196 2310                          l3188 22EC                          l3508 3684  
                        l3524 2FDA                          l3516 2F7C                          l3380 2106  
                        l3372 20A0                          l3364 206E                          l3356 2002  
                        l3348 1F94                          l3292 1E10                          l3284 1DDE  
                        l3612 30A0                          l3620 30E0                          l2900 3228  
                        l3604 338C                          l3700 08AA                          l4156 1D80  
                        l4148 1D52                          l4092 19E6                          l4084 19A8  
                        l4236 36C0                          l4260 3C3C                          l4252 3C1A  
                        l4244 3CA6                          l4324 3C72                          l4340 25D0  
                        l4332 2590                          l4500 2DC8                          l4270 3C9C  
                        l4182 39AA                          l4174 3986                          l4190 37C6  
                        l3454 351C                          l3446 34FE                          l3438 34CC  
                        l3470 355A                          l3462 3532                          l3526 2FE8  
                        l3518 2FAA                          l3390 2168                          l3382 2112  
                        l3374 20AE                          l3366 207C                          l3358 2038  
                        l3294 1E16                          l3286 1DE0                          l3534 3B04  
                        l3550 2E8C                          l3542 2E38                          l3622 30F2  
                        l3614 30C8                          l2902 323A                          l3630 3820  
                        l3710 08F0                          l3702 08B2                          l4094 1A0A  
                        l4086 19AC                          l4078 1964                          l4238 36D6  
                        l4430 3BAA                          l4262 3C42                          l4254 3C2A  
                        l4246 3CC6                          l4326 3C74                          l4350 2614  
                        l4342 25D4                          l4334 2598                          l4510 2DFA  
                        l4502 2DCE                          l4280 2A2C                          l4264 3C7A  
                        l4184 39AC                          l4176 3988                          l4168 3972  
                        l4192 37EA                          l3456 3524                          l3448 3500  
                        l3480 3592                          l3472 3562                          l3464 3540  
                        l3528 3038                          l3392 217C                          l3384 2120  
                        l3376 20DC                          l3368 208E                          l3296 1E26  
                        l3288 1DF0                          l3536 3B1A                          l2920 14D0  
                        l2912 14A4                          l3552 2E8E                          l3544 2E4E  
                        l3616 30D4                          l3608 3042                          l2904 3244  
                        l3632 3830                          l3640 37AA                          l3800 0CC2  
                        l3720 092C                          l3712 08F8                          l3704 08C4  
                        l4096 1A44                          l4088 19D0                          l4440 3BDA  
                        l4432 3BAE                          l4328 3CF2                          l4256 3C30  
                        l4248 3CC8                          l4424 27A0                          l4416 2778  
                        l4408 2750                          l4360 263C                          l4352 261C  
                        l4344 25DC                          l4336 25AA                          l4520 2E2C  
                        l4512 2E0C                          l4504 2DD2                          l4290 2A6A  
                        l4282 2A42                          l4274 29C8                          l4266 3C7A  
                        l4186 39AE                          l4178 398A                          l4194 37EE  
                        l3490 35CC                          l3482 35A8                          l3474 3574  
                        l3466 3548                          l3394 2196                          l3386 214A  
                        l3298 1E2C                          l3538 3B2A                          l2930 150A  
                        l2922 14E0                          l2914 14B0                          l3554 2E9E  
                        l3626 3136                          l3650 283E                          l2906 3262  
                        l3634 3762                          l3810 0D00                          l3802 0CC6  
                        l3730 09A8                          l3714 08FC                          l3706 08D2  
                        l4098 1A64                          l4434 3BB0                          l4450 3BA2  
                        l4442 3B74                          l4258 3C36                          l4418 278A  
                        l4370 266E                          l4362 2644                          l4354 2620  
                        l4346 25EE                          l4338 25C2                          l4514 2E10  
                        l4506 2DD4                          l4292 2A9C                          l4276 29D8  
                        l4268 3C90                          l4188 37C2                          l3492 35D4  
                        l3484 35B0                          l3476 357C                          l3468 354C  
                        l3396 21B2                          l3388 214E                          l2940 1538  
                        l2932 1510                          l2924 14F0                          l2916 14BE  
                        l3580 2F1C                          l3564 2EC8                          l3556 2EA2  
                        l3548 2E62                          l3652 284C                          l3660 292C  
                        l3644 27B4                          l2908 3298                          l3900 11A2  
                        l3820 0D4E                          l3812 0D04                          l3804 0CCE  
                        l3732 09B2                          l3724 0962                          l3716 0900  
                        l3708 08E4                          l4196 3700                          l4460 33FC  
                        l4436 3BC2                          l4452 3BA4                          l4444 3B78  
                        l4380 26AE                          l4372 2680                          l4364 2660  
                        l4356 2626                          l4348 2606                          l4516 2E14  
                        l4508 2DE8                          l4294 2A9E                          l4286 2A56  
                        l4278 29E6                          l3486 35B6                          l3478 3584  
                        l3398 21C2                          l2950 156C                          l2942 153A  
                        l2934 1522                          l2926 14F2                          l2918 14C0  
                        l3582 2F2C                          l3574 2EF0                          l3566 2ED2  
                        l3558 2EB0                          l3662 2968                          l3646 27D4  
                        l3590 3304                          l3638 3798                          l3902 11A8  
                        l3910 11D6                          l3830 0DE6                          l3814 0D16  
                        l3822 0D56                          l3806 0CE0                          l3742 0A36  
                        l3726 0974                          l3718 0906                          l4198 3708  
                        l4462 3416                          l4454 33A6                          l4438 3BD8  
                        l4446 3B7A                          l4390 26EC                          l4382 26B2  
                        l4374 2688                          l4366 2664                          l4358 262A  
                        l4518 2E1A                          l4470 2D12                          ?_pad 0011  
                        l4296 2AAA                          l4288 2A5E                          l3672 3B3C  
                        l3680 38E6                          l3488 35BC                          l3496 35DE  
                        l2960 15A8                          l2944 154A                          l2952 1574  
                        l2936 1524                          l2928 14FA                          l3576 2EFC  
                        l3568 2EDC                          l3664 297C                          l3656 28BC  
                        l3648 282A                          l3592 3312                          l3920 128C  
                        l3912 122E                          l3904 11BA                          l3840 0ECA  
                        l3832 0E3E                          l3824 0D5E                          l3816 0D24  
                        l3808 0CF2                          l3760 0AD0                          l3744 0A48  
                        l3728 0990                          l3736 09DA                          l4464 3460  
                        l4456 33B2                          l4448 3B8C                          l4392 26F2  
                        l4384 26C4                          l4376 26A4                          l4368 266A  
                        l4480 2D48                          l4472 2D1A                          l4298 2AE6  
                        l3682 3914                          l4554 2C36                          l3498 360C  
                        l2970 15BC                          l2962 15AC                          l2954 1584  
                        l2946 155A                          l2938 152A                          l3578 2F0C  
                        l3666 29A4                          l3658 28F8                          l3594 331E  
                        l3586 32E0                          l3930 12DC                          l3922 12A8  
                        l3914 1262                          l3906 11CC                          l3850 0F64  
                        l3842 0EFC                          l3834 0E72                          l3826 0D6E  
                        l3818 0D3C                          l3770 0BA0                          l3762 0B04  
                        l3746 0A64                          l3738 0A00                          l3754 0A80  
                        l3690 0856                          l4458 33F8                          l4394 26F6  
                        l4386 26CC                          l4378 26A8                          l4490 2D82  
                        l4482 2D50                          l4474 2D2C                          l4466 2D0A  
                        l3684 3918                          l3676 38CE                          l2980 15D0  
                        l2972 15C0                          l2964 15B0                          l2956 1596  
                        l2948 156A                          l3668 29B4                          l3596 3332  
                        l3588 32F0                          l3940 131E                          l3932 12EC  
                        l3924 12BA                          l3916 126A                          l3908 11D0  
                        l3860 103C                          l3852 0F98                          l3844 0F12  
                        l3828 0D82                          l3836 0E78                          l3780 0C0A  
                        l3764 0B0A                          l3772 0BD2                          l3756 0A9A  
                        l3692 0866                          l4396 2708                          l4388 26E8  
                        l4492 2D92                          l4484 2D62                          l4476 2D30  
                        l4468 2D0E                          l3678 38D2                          l2982 15D4  
                        l2974 15C4                          l2966 15B4                          l2958 15A4  
                        l2990 15E4                          l3598 3346                          l3950 134E  
                        l3942 132C                          l3934 12FE                          l3926 12C8  
                        l3870 1094                          l3918 126E                          l3854 0FEE  
                        l3862 1040                          l3846 0F44                          l3838 0E96  
                        l3782 0C12                          l3774 0BE2                          l3766 0B64  
                        l3694 0874                          l4398 2710                          l4494 2DA2  
                        l4486 2D6A                          l4478 2D42                          l2992 15E8  
                        l2984 15D8                          l2976 15C8                          l2968 15B8  
                        l3960 13B0                          l3952 1374                          l3944 1334  
                        l3936 1306                          l3928 12D8                          l3880 113A  
                        l3872 10F8                          l3864 1050                          l3856 0FF4  
                        l3848 0F54                          l3792 0C56                          l3784 0C2C  
                        l3776 0BE6                          l3768 0B98                          l3696 087C  
                        l3688 084C                          l4496 2DB4                          l4488 2D70  
                        l2994 1612                          l2986 15DC                          l2978 15CC  
                        l2898 3216                          l3970 13F6                          l3962 13CA  
                        l3954 1390                          l3946 133C                          l3938 1316  
                        l3890 1176                          l3874 1108                          l3882 1142  
                        l3866 1064                          l3858 1028                          l3794 0C68  
                        l3778 0BF8                          l3786 0C44                          l3698 08A0  
                        l4498 2DC4                          l2996 162E                          l2988 15E0  
                        l3980 1446                          l3972 1406                          l3964 13D0  
                        l3956 1398                          l3948 1348                          l3892 117C  
                        l3884 1154                          l3876 111A                          l3868 1070  
                        l3796 0C84                          l2998 163E                          l3990 1482  
                        l3982 1458                          l3974 140C                          l3966 13E2  
                        l3958 139E                          l3894 1188                          l3886 1162  
                        l3878 112C                          l3798 0CBA                          l3984 1464  
                        l3976 1412                          l3968 13EE                          l3896 1198  
                        l3888 1172                          l3986 146C                          l3898 119C  
                        l3996 2B7A                          l3988 147C                          l3998 2B8E  
                        STR_1 081E                          STR_2 0836                          STR_3 082A  
                        STR_4 0801                          STR_5 0830                          STR_6 0812  
                        STR_7 083B                          STR_8 0843                          u3000 17FE  
                        u3001 17FA                          u3010 180E                          u3011 180A  
                        u3100 18F2                          u3020 182A                          u3101 18EE  
                        u3021 1826                          u3110 1902                          u3030 183A  
                        _LATB 000F8A                          u3111 18FE                          u3031 1836  
                        u3200 221A                          u3120 1922                          u3040 184C  
                        u4000 3868                          _LATD 000F8C                          u3201 2216  
                        u3121 191E                          u3041 1848                          u3210 222A  
                        u3130 1934                          u3050 1862                          u4010 387A  
                        u3211 2226                          u3131 1930                          u3051 185E  
                        u4011 3876                          u3300 23F6                          u3220 226E  
                        u3140 1950                          u3060 1878                          u4100 28DC  
                        u4020 3792                          u3301 23F2                          u3221 226A  
                        u3141 194C                          u3061 1874                          u4021 378C  
                        u3310 240C                          u3230 2280                          u3070 188C  
                        u4110 28F8                          u3150 3A48                          u4030 3794  
                        u3311 2408                          u3231 227C                          u3071 1888  
                        u4111 28F4                          u3151 3A44                          u4007 385E  
                        u5000 380E                          u3400 2546                          u3320 242A  
                        u3240 2290                          u3080 18A6                          u4120 294C  
                        u3160 3C08                          u4040 37AA                          u4200 08C4  
                        u3401 2542                          u3321 2426                          u3241 228C  
                        u3081 18A2                          u4105 28D2                          u3161 3C04  
                        u4041 37A6                          u4201 08C0                          u5010 381E  
                        u3410 2574                          u3330 244A                          u3250 22D0  
                        u3090 18E0                          u4130 2968                          u4050 27FC  
                        u3170 3AFC                          u4210 08D2                          u5011 381A  
                        u3411 2570                          u3331 2446                          u3251 22CC  
                        u3091 18DC                          u4131 2964                          u3171 3AF6  
                        u4211 08CE                          u5100 2B00                          u3340 245C  
                        u3260 2310                          u3500 2022                          u3420 1DDE  
                        u4140 29A4                          u4060 282A                          u3180 3AFE  
                        u4300 0A48                          u4220 08E4                          u5020 3758  
                        u5101 2AFC                          u3341 2458                          u3261 230C  
                        u3421 1DDA                          u4141 29A0                          u4125 2942  
                        u4061 2826                          u4301 0A44                          u4221 08E0  
                        u5021 3754                          u5110 2B10                          u5030 3A9E  
                        u4150 3B6C                          u3350 248A                          u3270 2386  
                        u3190 2208                          u3510 207C                          u3430 1DF0  
                        u4070 284C                          u4310 0ACC                          u4230 092C  
                        u5111 2B0C                          u5007 3804                          u5031 3A9A  
                        u4151 3B66                          u3351 2486                          u3271 2382  
                        u3191 2204                          u3511 2078                          u3431 1DEC  
                        u4071 2848                          u4055 27F2                          u4311 0AC8  
                        u4231 0928                          u5120 2B1E                          u5040 3C8A  
                        u4160 3B6E                          u3360 24A0                          u3280 23A8  
                        u3600 21D0                          u3520 209C                          u3440 1E00  
                        u2800 1538                          u2720 3228                          u4400 0CBA  
                        u4320 0B60                          u4240 095A                          u5200 265C  
                        u5121 2B1A                          u5041 3C86                          u3361 249C  
                        u3281 23A4                          u3601 21CC                          u3521 2098  
                        u3505 2018                          u3441 1DFC                          u2801 1534  
                        u2721 3224                          u4401 0CB6                          u4321 0B5C  
                        u4241 0954                          u5201 2658                          u5130 2B58  
                        u5050 29D8                          u4170 38E6                          u3610 347C  
                        u3370 24B4                          u3290 23D2                          u3530 20AE  
                        u3450 1E40                          u2810 154A                          u4090 28B8  
                        u2730 323A                          u4410 0CE0                          u4330 0BD2  
                        u4250 095C                          u5210 2680                          u5131 2B54  
                        u5051 29D4                          u4171 38E2                          u3611 3478  
                        u3371 24B0                          u3291 23CE                          u3531 20AA  
                        u3451 1E3C                          u2811 1546                          u4091 28B4  
                        u2731 3236                          u4411 0CDC                          u4331 0BCE  
                        u5211 267C                          u5140 2B66                          u5060 29E6  
                        u4180 3914                          u3620 3496                          u3700 3592  
                        u3380 24CE                          u3540 20DC                          u3460 1E52  
                        u2900 1692                          u2820 155A                          u2740 3262  
                        u4500 0F54                          u4420 0CF2                          u4340 0BF8  
                        u4260 0974                          u5300 3460                          u5220 26A0  
                        u5141 2B62                          u5061 29E2                          u4181 3910  
                        u3621 3492                          u3701 358E                          u3381 24CA  
                        u3541 20D8                          u3461 1E4E                          u2901 168E  
                        u2821 1556                          u4085 2860                          u2741 325E  
                        u4501 0F50                          u4421 0CEE                          u4341 0BF4  
                        u4261 0970                          u5301 345C                          u5221 269C  
                        u5070 2A42                          u3630 34BC                          u3710 35A8  
                        u3390 2516                          u3550 20F2                          u3470 1E62  
                        u2910 16A0                          u2830 1596                          u4086 286A  
                        u2750 3298                          u4510 0FEE                          u4430 0D00  
                        u4350 0C0A                          u4270 0A00                          u4190 0874  
                        u5230 26C4                          u5150 25AA                          u5310 2D2C  
                        u5071 2A3E                          u3631 34B8                          u3711 35A4  
                        u3391 2512                          u3551 20EE                          u3471 1E5E  
                        u2911 169C                          u2831 1592                          u4087 287A  
                        u2751 3294                          u4511 0FEA                          u4431 0CFC  
                        u4351 0C06                          u4271 09FC                          u4191 0870  
                        u5231 26C0                          u5151 25A6                          u5311 2D28  
                        u5080 2A98                          u3640 34DA                          u3720 35CC  
                        u3800 3038                          u3560 2106                          u3480 1E98  
                        u2920 16B0                          u2840 15A4                          u2760 14BE  
                        u4600 11BA                          u4520 103C                          u4440 0D16  
                        u4360 0C2C                          u4280 0A2E                          u5240 26E4  
                        u5160 25C2                          u5400 2E2C                          u5320 2D62  
                        u5081 2A94                          u3641 34D6                          u3721 35C8  
                        u3801 3034                          u3561 2102                          u3481 1E94  
                        u2921 16AC                          u2841 15A0                          u2761 14BA  
                        u4601 11B6                          u4521 1038                          u4441 0D12  
                        u4361 0C28                          u4281 0A28                          u5241 26E0  
                        u5161 25BE                          u5401 2E28                          u5321 2D5E  
                        u5090 2AE2                          u3650 34F6                          u3730 360C  
                        u3570 2120                          u3490 1EA8                          u3810 3B1A  
                        u2930 16E2                          u2850 1612                          u2770 14D0  
                        u4610 128C                          u4530 1064                          u4450 0D24  
                        u4370 0C52                          u4290 0A30                          u5250 2708  
                        u5170 25EE                          u5330 2D92                          u5091 2ADE  
                        u3651 34F2                          u3731 3608                          u3571 211C  
                        u3491 1EA4                          u3811 3B16                          u2931 16DE  
                        u2851 160E                          u2771 14CC                          u4611 1288  
                        u4531 1060                          u4451 0D20                          u4371 0C4E  
                        u5251 2704                          u5171 25EA                          u5331 2D8E  
                        u3660 351C                          u3740 364A                          u3580 2168  
                        u2940 16F0                          u2860 162A                          u2780 14E0  
                        u3820 2E4E                          u3900 3312                          u4700 1440  
                        u4620 12A8                          u4540 1108                          u4460 0D4E  
                        u4380 0C68                          u5260 2728                          u5180 2606  
                        u5340 2DA2                          u3661 3518                          u3741 3646  
                        u3581 2164                          u2941 16EC                          u2861 1624  
                        u2781 14DC                          u3821 2E4A                          u3901 330E  
                        u4701 143A                          u4621 12A4                          u4541 1104  
                        u4461 0D4A                          u4381 0C64                          u5261 2724  
                        u5181 2602                          u5341 2D9E                          u3670 3540  
                        u3750 367E                          u3590 2196                          u2950 170E  
                        u2870 162C                          u2790 1522                          u3830 2E82  
                        u3910 3368                          u4710 1442                          u4630 12BA  
                        u4550 111A                          u4470 0E96                          u4390 0C84  
                        u5270 273A                          u5190 263C                          u5350 2DB4  
                        u3671 353C                          u3751 367A                          u3591 2192  
                        u2951 170A                          u2791 151E                          u3911 3364  
                        u4631 12B6                          u4551 1116                          u4471 0E92  
                        u4391 0C80                          u5271 2736                          u5191 2638  
                        u5351 2DB0                          u3680 355A                          u3760 2F6C  
                        u2960 1746                          u2880 1654                          u3840 2EB0  
                        u3920 3378                          u4720 1458                          u4640 12C8  
                        u4560 112C                          u4480 0EFC                          u4800 316A  
                        u5280 2762                          u5360 2DC4                          u3681 3556  
                        u3761 2F68                          u2961 1742                          u2881 1650  
                        u3841 2EAC                          u3921 3374                          u4721 1454  
                        u4641 12C4                          u4561 1128                          u4481 0EF8  
                        u4801 3166                          u5281 275E                          u5361 2DC0  
                        u4730 2BB2                          u3690 3574                          u3770 2FAA  
                        u2970 178C                          u2890 1672                          u3850 2EC4  
                        u3930 3082                          u4650 12FE                          u4570 113A  
                        u4490 0F44                          u4810 319C                          u5290 278A  
                        u5370 2DE8                          u5507 3966                          u4731 2BAE  
                        u3691 3570                          u3771 2FA6                          u2971 1788  
                        u2891 166E                          u3851 2EC0                          u3835 2E78  
                        u4651 12FA                          u4571 1136                          u4491 0F40  
                        u4811 3198                          u5291 2786                          u5427 25C8  
                        u5371 2DE4                          u4740 2BE8                          u3780 2FC8  
                        u2980 17C2                          u3860 2EEC                          u3940 30A0  
                        u4660 132C                          u4580 1154                          u4820 31B8  
                        u4900 1ACA                          u5380 2DFA                          u5517 3990  
                        u4741 2BE4                          u3781 2FC4                          u2981 17BE  
                        u3861 2EE8                          u3941 309C                          u4661 1328  
                        u4581 1150                          u4821 31B4                          u4901 1AC6  
                        u5437 260C                          u5381 2DF6                          u4750 2C04  
                        u3790 2FE8                          u2990 17D2                          u3870 2F0C  
                        u3950 30C8                          u4670 13B0                          u4590 1162  
                        u4830 31CA                          u4910 1AFA                          u5390 2E0C  
                        u5527 39B6                          u4751 2C00                          u3791 2FE4  
                        u2991 17CE                          u3871 2F08                          u3951 30C4  
                        u3935 3078                          u4671 13AC                          u4591 115E  
                        u4831 31C6                          u4911 1AF6                          u5447 3C20  
                        u5391 2E08                          u4760 2CBA                          u3880 2F1C  
                        u3960 30F2                          u4680 13CA                          u4840 31F2  
                        u4920 1B3A                          u4761 2CB4                          u3881 2F18  
                        u3961 30EE                          u4681 13C6                          u4841 31EE  
                        u4921 1B36                          u5457 3B96                          u4770 2CBC  
                        u3890 32F0                          u4690 13E2                          u4930 1B7C  
                        u4850 1988                          u3891 32EC                          u4691 13DE  
                        u4931 1B78                          u4851 1984                          u5467 3BCC  
                        u4780 2CD2                          u3980 312C                          u4940 1C2A  
                        u4860 19D0                          u4781 2CCE                          u3981 3126  
                        u4941 1C26                          u4861 19CC                          u5477 36CA  
                        u4790 2CE4                          u3990 312E                          u4950 1C90  
                        u4870 1A0A                          u4791 2CE0                          u3975 3104  
                        u4951 1C8A                          u4871 1A06                          u5487 36F2  
                        u4960 1C92                          u4880 1AB2                          u5497 3940  
                        u4881 1AAC                          u4970 1CA8                          u4890 1AB4  
                        u4971 1CA4                          u4980 1D44                          u4981 1D40  
                        u4990 37E6                          u4997 37DC                          _RBPU 007F8F  
                        _lm35 00C7                          _dbuf 0100                          _atoi 2B7A  
                        _main 2D0A            __size_of_LCD_Clear 0008                          _prec 00BD  
                        _temp 00B5                          _nout 00B9                          pad@i 0018  
                        pad@p 0015                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001A                          fsr2l 000FD9                 ___fpclassifyf 3042  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ___fldiv@new_exp 0012                 _LCD_String_xy 3A8C                  ?_inicializar 0001  
                _tolower$1168 000D                  ___param_bank 000000                         ??_pad 0017  
            __end_of_LCD_Char 3970              __end_of_LCD_Init 3C4A                 ___fltol@sign1 0009  
                       ?_atoi 0008               __end_of___fladd 1964                         ?_main 0001  
             __end_of___fldiv 2588               __end_of___awdiv 352E               __end_of___flneg 3B3C  
                       STR_11 083F                         STR_12 0847                         STR_17 0833  
             __end_of___awmod 35DE               __end_of___flmul 21EE               __end_of___flsub 3A06  
             __end_of___fltol 2F3E               ___awdiv@divisor 0003                         _LATA1 007C49  
                       _LATC0 007C58                         _LATC1 007C59                         _LATD0 007C60  
                       _LATD1 007C61               ___awdiv@counter 0005                  vfpfcnvrt@fmt 0042  
                       _PORTB 000F81                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95         ??_imprimirTemperatura 005E  
                       _flags 00BF                _alarmaNegativa 3BAA                         _fputc 3216  
             __end_of_keyfind 27B4                         _fputs 3A06               __end_of_isdigit 3B74  
                       atoi@n 0015                         pad@fp 0011                         atoi@s 0008  
                       _width 00BB                         _putch 3D1E               __end_of_isspace 3920  
             __end_of_isupper 3B04                         tablat 000FF5                         status 000FD8  
         __size_of_LCD_String 005E               __end_of_sprintf 38CE                ?___fpclassifyf 0001  
             __end_of_tolower 37C2               __end_of_strncmp 3216                ?_LCD_String_xy 0005  
              _alarmaPositiva 3B74               __initialization 3A4A                  __end_of_atoi 2D0A  
                __end_of_main 2E38                        ??_atoi 000A                        ??_main 0060  
           __end_of_LCD_Clear 3D1E                 __activetblptr 000002        __end_of_alarmaNegativa 3BE0  
                      _ADCON1 000FC1                        ?_fputc 0001                        ?_fputs 000A  
                      _ADRESH 000FC4                        _ADRESL 000FC3              ___awdiv@dividend 0001  
                      ?_putch 0001              LCD_String_xy@msg 0006              LCD_String_xy@pos 0005  
            LCD_String_xy@row 0008                        _OSCCON 000FD3        __end_of_alarmaPositiva 3BAA  
            __end_of___xxtofl 2B7A                  vfprintf@cfmt 005C                        ___flge 2F3E  
                      ___fleq 35DE                     ??___fladd 0009                        ___wmul 3CCC  
                   ??___fldiv 0009                     ??___awdiv 0005                     ??___flneg 0005  
                   ??___awmod 0005                     ??___flmul 0017                     ??___flsub 0030  
                   ??___fltol 0005                        _efgtoa 084C       __size_of_actDesactRelay 00C4  
            ??_imprimirBlanco 000A                        _floorf 27B4                        _keypad 00D7  
                      clear_0 3A70                        clear_1 3A7C              ___awdiv@quotient 0007  
             ___awmod@divisor 0003                        isa$std 000001               ___awmod@counter 0005  
                      pad@buf 0013                        _rowloc 00C5          __size_of_LCD_Command 0050  
                      _strcpy 3820                        _strlen 3BE0                        fputc@c 0001  
                      fputs@c 000E                        fputs@i 000F                        fputs@s 000A  
                   ??_keyfind 0001                     ??_isdigit 0003               ___fpclassifyf@e 0009  
             ___fpclassifyf@u 000B               ___fpclassifyf@x 0001                  __mediumconst 0000  
                   ??_isspace 0003               ?_alarmaNegativa 0001                        tblptrh 000FF7  
                   ??_isupper 0003                        tblptrl 000FF6                        tblptru 000FF8  
                      putch@c 0001              __end_of_vfprintf 3762                     ??_sprintf 005E  
                   ??_tolower 0009                     ??_strncmp 0007                    ___flge@ff1 0028  
                  ___flge@ff2 002C               ??___fpclassifyf 0005                  ___xxtofl@arg 000B  
                ___xxtofl@exp 000A                  ___xxtofl@val 0001                    ___fleq@ff1 0001  
                  ___fleq@ff2 0005                     ?_LCD_Char 0001                    __accesstop 0060  
     __end_of__initialization 3A82                     ?_LCD_Init 0001               ??_LCD_String_xy 0008  
                  ___flneg@f1 0001               ?_alarmaPositiva 0001                 ___rparam_used 000001  
                  ___fltol@f1 0001                __pcstackCOMRAM 0001                  __pidataBANK0 3D06  
        __size_of_inicializar 0030                    _adc_reader 3C7A                 __end_of_fputc 32E0  
               __end_of_fputs 3A4A                 __end_of_putch 3D20                  ??_LCD_String 0005  
         adc_reader@value_adc 0005                       ??_fputc 0005             main@char_userTemp 00AC  
                     ??_fputs 000E                       ??_putch 0001                    __pbssBANK0 00AD  
                  __pbssBANK1 0100                    ??_LCD_Char 0001                    ??_LCD_Init 0003  
          __end_of_LCD_String 3820                       ?___flge 0028                       ?___fleq 0001  
                     ?___wmul 0001                       ?_efgtoa 0034                       ?_floorf 001A  
               ??_adc_initcon 0001                       ?_strcpy 0001                       ?_strlen 0001  
                   ?___xxtofl 0001            __size_of_vfpfcnvrt 0460                 LCD_String@msg 0003  
                     __Hparam 0000                       __Lparam 0000               __size_of___flge 0104  
             __size_of___fleq 00AA                       ___fladd 14A4                       ___fldiv 21EE  
                     ___awdiv 346A                       ___flneg 3B04                       ___awmod 352E  
                     ___flmul 1DC4                       ___flsub 39C0                       ___fltol 2E38  
             __size_of___wmul 0026                   ?_adc_reader 0001                _actDesactRelay 33A6  
                   ?_vfprintf 0056                  __psmallconst 0800               __size_of_efgtoa 0C58  
 __end_of_imprimirTemperatura 3700               __size_of_floorf 0212                       __pcinit 3A4A  
                     __ramtop 0800                       __ptext0 2D0A                       __ptext1 2588  
                     __ptext2 3C4A                       __ptext3 3CA6                       __ptext4 3C16  
                     __ptext5 3CF2                       __ptext6 3B74                       __ptext7 3BAA  
                     __ptext8 3D16                       __ptext9 33A6                       _col_loc 00C6  
             __size_of_strcpy 005C               __size_of_strlen 0036                  __size_of_pad 00C6  
                     _keyfind 2588                       _isdigit 3B3C                    ??___xxtofl 0005  
            ___awmod@dividend 0001                       _isspace 38CE           __end_of_adc_initcon 3CCC  
                     _isupper 3ACC                       efgtoa@c 003A                       efgtoa@d 0078  
                     efgtoa@e 0090                       efgtoa@f 0036                       efgtoa@g 008C  
                     efgtoa@h 0082                       efgtoa@i 008A                       efgtoa@l 0086  
                     efgtoa@m 0072                       efgtoa@n 0092                       efgtoa@p 007C  
                     efgtoa@t 006C                       efgtoa@u 0094                       efgtoa@w 007E  
                   _LCD_Clear 3D16                       atoi@neg 000E                       _sprintf 387C  
                     _tolower 3762                       _strncmp 3140          end_of_initialization 3A82  
                     floorf@e 0028                       floorf@m 0024                       floorf@u 002A  
                     floorf@x 001A                       fputc@fp 0003                LCD_Command@cmd 0002  
               __Lmediumconst 0000                       fputs@fp 000C        __end_of_actDesactRelay 346A  
           __end_of_vfpfcnvrt 1DC4                    efgtoa@mode 0081                    efgtoa@sign 007A  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 005C  
                     strcpy@d 0009                       strlen@a 0003                       strcpy@s 0007  
                     strlen@s 0001              ??_alarmaNegativa 000A                   ___fladd@grs 0010  
               ___xxtofl@sign 0009                    ?_LCD_Clear 0001                   ___fldiv@grs 0014  
                 ___fldiv@rem 000D              ??_alarmaPositiva 000A           __size_of_adc_reader 002C  
                 ___flmul@grs 001C             __size_of_LCD_Char 0050             __size_of_LCD_Init 0034  
             ?_actDesactRelay 0001                 ??_LCD_Command 0001                __end_of___flge 3042  
              __end_of___fleq 3688                   vfpfcnvrt@ap 0044                   vfpfcnvrt@ct 0052  
                 vfpfcnvrt@fp 0040                __end_of___wmul 3CF2                __end_of_efgtoa 14A4  
                 _adc_initcon 3CA6                __end_of_floorf 29C6                    floorf@F527 00AD  
              __end_of_strcpy 387C                __end_of_strlen 3C16           start_initialization 3A4A  
                 __end_of_pad 33A6         __end_of___fpclassifyf 3140         __end_of_LCD_String_xy 3ACC  
               ??_inicializar 0004                   vfprintf@fmt 0058                      ??___flge 0030  
                    ??___fleq 0009                      ??___wmul 0005                      ??_efgtoa 003B  
                 __pdataBANK0 00D7                      ??_floorf 001E                      ??_strcpy 0005  
                    ??_strlen 0003                     ___fladd@a 0005                     ___fladd@b 0001  
                   ___fldiv@a 0005                     ___fldiv@b 0001           __end_of_LCD_Command 39C0  
                   ___flmul@a 0013                     ___flmul@b 000F                     ___flsub@a 002C  
                   ___flsub@b 0028                 __pcstackBANK0 0060                   ??_LCD_Clear 0003  
     __size_of_imprimirBlanco 0014             __size_of___xxtofl 01B4                     _atoi$1073 0010  
                   _atoi$1074 0014                     _atoi$1075 0012                   _efgtoa$1010 0062  
                 _efgtoa$1020 0068                   _efgtoa$1021 006A                   _efgtoa$1015 0064  
                 _efgtoa$1009 0060                   _efgtoa$1019 0066                      ?___fladd 0001  
                    ?___fldiv 0001                      ?___awdiv 0001                      ?___flneg 0001  
                    ?___awmod 0001                      ?___flmul 000F                  ??_adc_reader 0003  
                    ?___flsub 0028                      ?___fltol 0001           __end_of_inicializar 3C7A  
           __size_of_vfprintf 0062                   __smallconst 0800                      ?_keyfind 0001  
                    ?_isdigit 0001                      ?_isspace 0001                      ?_isupper 0001  
       LCD_String_xy@location 0009                      ?_sprintf 0098                      ?_tolower 0007  
              __size_of_fputc 00CA                __size_of_fputs 0044                      ?_strncmp 0001  
              __size_of_putch 0002            __end_of_adc_reader 3CA6                      _LCD_Char 3920  
                    _LCD_Init 3C16                ___wmul@product 0005                     _value_adc 00C1  
                 _LCD_Command 3970                     _vfpfcnvrt 1964                    _ADCON0bits 000FC2  
                  _ADCON1bits 000FC1                    _ADCON2bits 000FC0             ___wmul@multiplier 0001  
__size_of_imprimirTemperatura 0078                  _isspace$1104 0007                    vfpfcnvrt@c 0055  
                  vfpfcnvrt@f 004E                     copy_data0 3A5E              ??_actDesactRelay 00A8  
                    __Hrparam 0000                   _inicializar 3C4A                    vfprintf@ap 005A  
                    __Lrparam 0000                    vfprintf@fp 0056              __size_of___fladd 04C0  
            __size_of___fldiv 039A              __size_of___awdiv 00C4              __size_of___flneg 0038  
            __size_of___awmod 00B0              __size_of___flmul 042A              __size_of___flsub 0046  
            __size_of___fltol 0106                    ?_vfpfcnvrt 0040                  ?_adc_initcon 0001  
          ___fpclassifyf@F465 00B1                    sprintf@fmt 009A                      ___xxtofl 29C6  
            __size_of_keyfind 022C              __size_of_isdigit 0038                _imprimirBlanco 3CF2  
            __size_of_isspace 0052                      __ptext10 3688                      __ptext11 387C  
                    __ptext20 3BE0                      __ptext12 3700                      __ptext21 3A06  
                    __ptext13 1964                      __ptext30 1DC4                      __ptext22 3216  
                    __ptext14 3140                      __ptext31 2F3E                      __ptext23 3D1E  
                    __ptext15 084C                      __ptext40 3A8C                      __ptext32 35DE  
                    __ptext24 27B4                      __ptext16 3762                      __ptext41 37C2  
                    __ptext33 21EE                      __ptext25 3042                      __ptext17 3ACC  
                    __ptext42 3920                      __ptext34 352E                      __ptext26 2E38  
                    __ptext18 3820                      __ptext43 3970                      __ptext35 346A  
                    __ptext27 39C0                      __ptext19 32E0                      __ptext44 3C7A  
                    __ptext36 2B7A                      __ptext28 14A4                      __ptext45 29C6  
                    __ptext37 38CE                      __ptext29 3B04                      __ptext38 3B3C  
                    __ptext39 3CCC              __size_of_isupper 0038              __size_of_sprintf 0052  
            __size_of_tolower 0060                    strcpy@dest 0001              __size_of_strncmp 00D6  
               __size_of_atoi 0190                 __size_of_main 012E                      efgtoa@fp 0034  
                    efgtoa@ne 0070                      efgtoa@pp 006E                      efgtoa@ou 0074  
                    _temp_col 00C4                      isa$xinst 000000                      _vfprintf 3700  
                    _userTemp 00E3                    _LCD_String 37C2        __end_of_imprimirBlanco 3D06  
              _vfpfcnvrt$1035 004A                _vfpfcnvrt$1039 004C                      isdigit@c 0001  
     __size_of_alarmaNegativa 0036                     sprintf@ap 00A0                      isspace@c 0001  
        actDesactRelay@number 00AA                     strcpy@src 0003                      isupper@c 0001  
                   strncmp@_l 0001                     strncmp@_r 0003                    _OSCCONbits 000FD3  
     __size_of_alarmaPositiva 0036                   efgtoa@nmode 0080                   ??_vfpfcnvrt 0046  
                    sprintf@f 00A2                      tolower@c 0007                      sprintf@s 0098  
      __size_of___fpclassifyf 00FE               ?_imprimirBlanco 0001                      strncmp@l 0008  
                    strncmp@n 0005                      strncmp@r 000A        __size_of_LCD_String_xy 0040  
               ___fladd@signs 000D                  ___fladd@aexp 000E                  ___fladd@bexp 000F  
         _imprimirTemperatura 3688  
